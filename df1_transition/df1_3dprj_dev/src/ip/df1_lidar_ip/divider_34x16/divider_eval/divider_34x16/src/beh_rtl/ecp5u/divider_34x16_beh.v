

`define DEVICE_ECP5U

`timescale 1ns/100ps

module divider_34x16 (
               clk,
               rstn,
               //--------input
               dvalid_in,
               numerator,
               denominator,
               //--------output
               dvalid_out,
               quotient,
               remainder
        );

   input             clk;
   input             rstn;
   //--------input
   input             dvalid_in;
   input  [34-1:0]   numerator;
   input  [16-1:0]   denominator;
   //--------output
   output            dvalid_out;
   output [34-1:0]   quotient;
   output [16-1:0]   remainder;

divider_core_divider_34x16 #(
                  .DWIDTH        (34    ),
                  .SWIDTH        (16    ),
                  .QWIDTH        (34    ),
                  .RWIDTH        (16    ),
                  .DTYPE         ("UNSIGNED"     ),
                  .STYPE         ("UNSIGNED"     ),
                  .LATENCY       (34   ),
                  .POS_RMD       ("FALSE"   ),
                  .FAMILY        ("ECP5U"    ))
u1_core (
               .clk              (clk              ),
               .rstn             (rstn             ),
               .ce               (1'b1             ),
               //--------input
               .dvalid_in        (dvalid_in        ),
               .numerator        (numerator        ),
               .denominator      (denominator      ),
               //--------output
               .dvalid_out       (dvalid_out       ),
               .quotient         (quotient         ),
               .remainder        (remainder        )
    );

endmodule
// obf_with_line.v generated by Lattice IP Model Creator version 1
// created on Fri Sep 23 16:42:30 CST 2016
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807
// top
module ou9d5eb_divider_34x16(
                  clk,
                  rstn,
                  ce, 
                  hoeb25a, 
                  yk592d2, 
                  czc9691, 
                  wj4b48c, 
                  dvalid_in,
                  dzd232e,
                  remainder, 
                  do8cbb6, 
                  ip65db3, 
                  co2ed9c,
                  dvalid_out);
parameter   DWIDTH         = 40;
parameter   SWIDTH         = 20;
parameter   ba9c288          = 20;
parameter   zke1443        = "TRUE";
parameter   POS_RMD        = "TRUE";
parameter   LATENCY        = 20;
parameter   FAMILY         = "ECP3";
localparam  ui43668      = (ba9c288==DWIDTH-1) ? "TRUE" : "FALSE";
localparam  blcd054     = (ba9c288==DWIDTH-2) ? "TRUE" : "FALSE";
localparam  oua98c         = DWIDTH+SWIDTH;
input                      clk;
input                      rstn;
input                      ce;
input                      hoeb25a;
input       [oua98c-1:0]   yk592d2;
input       [SWIDTH-1:0]   czc9691;
input       [SWIDTH  :0]   wj4b48c;
input                      dvalid_in;
input                      dzd232e;
output      [oua98c-1:0]   remainder;
output      [SWIDTH-1:0]   do8cbb6;
output      [SWIDTH  :0]   ip65db3;
output                     dvalid_out;
output                     co2ed9c;
wire                       quotient;
reg         [oua98c-1:0]   ng1b1a2;
reg         [SWIDTH-1:0]   enc6896;
reg                        gq344b4;
reg                        vka25a0;
wire                       ep12d02;
wire        [oua98c-1:0]   kfb40ab;
wire        [SWIDTH  :0]   ux2ae7;
wire        [SWIDTH  :0]   ip65db3;
reg         [SWIDTH  :0]   ene7868;
wire        [SWIDTH  :0]   tue1a2c;
wire        [SWIDTH  :0]   me68b14;
wire        [SWIDTH  :0]   wl2c507;
wire                       su6283d;
wire                       je141e9;
wire                       jra0f4b;
wire                       mt7a5e;
wire                       vx3d2f4;
wire                       rte97a6;
wire        [DWIDTH-1:0]   cz5e9bc;
wire        [DWIDTH-1:0]   gqa6f2b;
wire        [DWIDTH-1:0]   ukbcace;
wire [DWIDTH-1:0] wy2b389;
wire [SWIDTH-1:0] uice240;
reg pf71201;
reg pu8900e;
reg [oua98c - 1 : 0] th40392;
reg [SWIDTH - 1 : 0] hqe4b3;
reg [SWIDTH : 0] uk92cd9;
reg ri966c9;
reg oub364a;
reg nt9b251;
reg [oua98c - 1 : 0] alc9475;
reg [SWIDTH - 1 : 0] of51d67;
reg tj8eb3c;
reg cz759e6;
reg swacf35;
reg [oua98c - 1 : 0] ir3cd41;
reg [SWIDTH : 0] hq3506f;
reg [SWIDTH : 0] yx41bd3;
reg [SWIDTH : 0] ip6f4ed;
reg [SWIDTH : 0] uvd3b65;
reg [SWIDTH : 0] mred968;
reg ne6cb44;
reg wj65a22;
reg nt2d114;
reg yk688a7;
reg gb44538;
reg zz229c4;
reg [DWIDTH - 1 : 0] jea713a;
reg [DWIDTH - 1 : 0] goc4e97;
reg [DWIDTH - 1 : 0] pu3a5ce;
reg [DWIDTH - 1 : 0] ec9739f;
reg [SWIDTH - 1 : 0] osce7c1;
reg [2047:0] rg73e09;
wire [29:0] gd9f04a;
localparam kdf8254 = 30,eac12a4 = 32'hfdfff40b;
localparam [31:0] jr9520 = eac12a4;
localparam of54836 = eac12a4 & 4'hf;
localparam [11:0] je20da5 = 'h7ff;
wire [(1 << of54836) -1:0] cb36956;
reg [kdf8254-1:0] dba55a5;
reg [of54836-1:0] ui5697b [0:1];
reg [of54836-1:0] tja5ecd;
reg ng2f66e;
integer xj7b372;
integer kdd9b97;
assign tue1a2c = (ui43668=="TRUE") ? {th40392[oua98c-1],th40392[oua98c-1:DWIDTH]} : th40392[oua98c-1:DWIDTH-1];
assign me68b14 = {hqe4b3[SWIDTH-1],hqe4b3};
assign su6283d   = th40392[oua98c-1] ^ uvd3b65[SWIDTH];
assign hbc7f36  = (POS_RMD=="TRUE") ? ((oub364a && th40392[oua98c-1]) ? (~swacf35): ne6cb44) : ne6cb44;
assign je141e9 = mred968[SWIDTH];
assign ep12d02 = uvd3b65[SWIDTH];   pmi_addsub #(             .pmi_data_width        (SWIDTH+1    ),             .pmi_result_width      (SWIDTH+1    ),             .pmi_sign              ("off"       ),             .pmi_family            (FAMILY      ),             .module_type           ("pmi_addsub"))   qtcccca     (.DataA     (tue1a2c              ),             .DataB     (me68b14              ),             .Cin       (~hbc7f36              ),             .Add_Sub   (hbc7f36               ),             .Result    (wl2c507              ),             .Cout      (                    ),             .Overflow  (                    ));   assign wy2b389 = th40392[DWIDTH-1:0];   assign uice240 = th40392[oua98c-1:DWIDTH];
assign quotient = (swacf35) ? (wj65a22) : (~wj65a22);
assign jra0f4b    = oub364a ^ th40392[oua98c-1];
assign mt7a5e    = oub364a ^ swacf35;
generate
if(ui43668=="TRUE") begin    if(LATENCY==1) begin      assign ux2ae7 = (yk688a7) ? {~uvd3b65 + 1} : uvd3b65;   end else begin      assign ux2ae7 = uk92cd9;   end   assign rte97a6 = (ip6f4ed==0 || ip6f4ed==hq3506f) ? 1'b1 : 1'b0;   assign vx3d2f4  = (oub364a && zz229c4) ? (~yk688a7) : (yk688a7);   assign cz5e9bc = {yk688a7,th40392[DWIDTH-2:0]};   assign uvd998b   = (POS_RMD=="TRUE") ? 1'b1 : 1'b1;   assign ukbcace = (POS_RMD=="TRUE") ? ((oub364a==1'b1 && swacf35==1'b0) ? 2 : 1) : 1;   assign qge5430 = (POS_RMD=="TRUE") ? ((oub364a) ? swacf35 : gb44538) : gb44538;   pmi_addsub #(             .pmi_data_width        (DWIDTH        ),             .pmi_result_width      (DWIDTH        ),             .pmi_sign              ("off"         ),             .pmi_family            (FAMILY        ),             .module_type           ("pmi_addsub"  ))   wl9ac01    (.DataA     (cz5e9bc              ),             .DataB     (ukbcace              ),             .Cin       (~uvd998b               ),             .Add_Sub   (uvd998b                ),             .Result    (gqa6f2b              ),             .Cout      (                    ),             .Overflow  (                    ));   if(POS_RMD=="TRUE") begin      assign kfb40ab[oua98c-1:DWIDTH] = (zz229c4) ? 0 : ((!th40392[oua98c-1] && oub364a) ? th40392[oua98c-1:DWIDTH] :                                                        ((th40392[oua98c-1] && oub364a) ? mred968[SWIDTH:0] :                                                        (nt2d114 ? mred968[SWIDTH:0] : th40392[oua98c-1:DWIDTH])));   end else begin      assign kfb40ab[oua98c-1:DWIDTH] = (zz229c4) ? 0 : (nt2d114 ? mred968[SWIDTH:0] : th40392[oua98c-1:DWIDTH]);   end   assign kfb40ab[DWIDTH-1:0]      = (qge5430) ? goc4e97 : jea713a;
end else begin   assign kfb40ab[oua98c-1:DWIDTH] = mred968[SWIDTH-1:0];   assign kfb40ab[DWIDTH-1:0]      = {th40392[DWIDTH-2:0],nt9b251};
end
endgenerate
always @(posedge clk or negedge rstn) begin   if(!rstn) begin      ene7868   <= {(SWIDTH+1){1'b0}};   end else if(pf71201) begin      if(pu8900e) begin         ene7868   <= {(SWIDTH+1){1'b0}};      end else begin         ene7868   <= (yk688a7) ? {~uvd3b65 + 1} : uvd3b65;      end   end
end
always @(posedge clk or negedge rstn) begin   if(!rstn) begin      ng1b1a2 <= {oua98c{1'b0}};      enc6896   <= {SWIDTH{1'b0}};      gq344b4    <= 1'b0;      vka25a0      <= 1'b0;   end else if(pf71201) begin      if(pu8900e) begin         ng1b1a2 <= {oua98c{1'b0}};         enc6896   <= {SWIDTH{1'b0}};         gq344b4    <= 1'b0;         vka25a0      <= 1'b0;      end else if(ri966c9) begin         ng1b1a2 <= ir3cd41;         enc6896   <= hqe4b3;         gq344b4    <= ri966c9;         vka25a0      <= oub364a;      end else begin         gq344b4    <= 1'b0;      end   end
end
assign remainder    = (zke1443=="TRUE") ? alc9475 : ir3cd41;
assign do8cbb6  = (zke1443=="TRUE") ? of51d67   : hqe4b3;
assign dvalid_out   = (zke1443=="TRUE") ? tj8eb3c    : ri966c9;
assign co2ed9c   = (zke1443=="TRUE") ? cz759e6      : oub364a;
assign ip65db3   = (zke1443=="TRUE") ? yx41bd3  : uk92cd9;
always@* begin pf71201<=gd9f04a[0];pu8900e<=gd9f04a[1];th40392<={yk592d2>>1,gd9f04a[2]};hqe4b3<={czc9691>>1,gd9f04a[3]};uk92cd9<={wj4b48c>>1,gd9f04a[4]};ri966c9<=gd9f04a[5];oub364a<=gd9f04a[6];nt9b251<=gd9f04a[7];alc9475<={ng1b1a2>>1,gd9f04a[8]};of51d67<={enc6896>>1,gd9f04a[9]};tj8eb3c<=gd9f04a[10];cz759e6<=gd9f04a[11];swacf35<=gd9f04a[12];ir3cd41<={kfb40ab>>1,gd9f04a[13]};hq3506f<={ux2ae7>>1,gd9f04a[14]};yx41bd3<={ene7868>>1,gd9f04a[15]};ip6f4ed<={tue1a2c>>1,gd9f04a[16]};uvd3b65<={me68b14>>1,gd9f04a[17]};mred968<={wl2c507>>1,gd9f04a[18]};ne6cb44<=gd9f04a[19];wj65a22<=gd9f04a[20];nt2d114<=gd9f04a[21];yk688a7<=gd9f04a[22];gb44538<=gd9f04a[23];zz229c4<=gd9f04a[24];jea713a<={cz5e9bc>>1,gd9f04a[25]};goc4e97<={gqa6f2b>>1,gd9f04a[26]};pu3a5ce<={ukbcace>>1,gd9f04a[27]};ec9739f<={wy2b389>>1,gd9f04a[28]};osce7c1<={uice240>>1,gd9f04a[29]};end
always@* begin rg73e09[2047]<=hoeb25a;rg73e09[2046]<=yk592d2[0];rg73e09[2044]<=czc9691[0];rg73e09[2040]<=wj4b48c[0];rg73e09[2032]<=dvalid_in;rg73e09[2016]<=dzd232e;rg73e09[1984]<=quotient;rg73e09[1941]<=gqa6f2b[0];rg73e09[1920]<=ng1b1a2[0];rg73e09[1835]<=ukbcace[0];rg73e09[1793]<=enc6896[0];rg73e09[1679]<=su6283d;rg73e09[1623]<=wy2b389[0];rg73e09[1539]<=gq344b4;rg73e09[1310]<=je141e9;rg73e09[1199]<=uice240[0];rg73e09[1145]<=mt7a5e;rg73e09[1030]<=vka25a0;rg73e09[1023]<=ce;rg73e09[970]<=cz5e9bc[0];rg73e09[839]<=wl2c507[0];rg73e09[572]<=jra0f4b;rg73e09[485]<=rte97a6;rg73e09[419]<=me68b14[0];rg73e09[242]<=vx3d2f4;rg73e09[209]<=tue1a2c[0];rg73e09[104]<=ene7868[0];rg73e09[52]<=ux2ae7[0];rg73e09[26]<=kfb40ab[0];rg73e09[13]<=ep12d02;end         assign cb36956 = rg73e09,gd9f04a = dba55a5; initial begin xj7b372 = $fopen(".fred"); $fdisplay( xj7b372, "%3h\n%3h", (jr9520 >> 4) & je20da5, (jr9520 >> (of54836+4)) & je20da5 ); $fclose(xj7b372); $readmemh(".fred", ui5697b); end always @ (cb36956) begin tja5ecd = ui5697b[1]; for (kdd9b97=0; kdd9b97<kdf8254; kdd9b97=kdd9b97+1) begin dba55a5[kdd9b97] = cb36956[tja5ecd]; ng2f66e = ^(tja5ecd & ui5697b[0]); tja5ecd = {tja5ecd, ng2f66e}; end end 
endmodule
module ui6dd9b_divider_34x16(
                  clk,
                  rstn,
                  ce, 
                  hoeb25a, 
                  yk592d2, 
                  czc9691, 
                  dvalid_in,
                  remainder, 
                  do8cbb6, 
                  dvalid_out);
parameter   DWIDTH         = 30;
parameter   SWIDTH         = 20;
parameter   ba9c288          = 20;
parameter   zke1443        = "TRUE";
parameter   FAMILY         = "ECP3";
localparam  ui43668      = (ba9c288==DWIDTH-1) ? "TRUE" : "FALSE";
localparam  oua98c         = DWIDTH+SWIDTH;
input                      clk;
input                      rstn;
input                      ce;
input                      hoeb25a;
input       [oua98c  :0]   yk592d2;
input       [SWIDTH-1:0]   czc9691;
input                      dvalid_in;
output      [oua98c  :0]   remainder;
output      [SWIDTH-1:0]   do8cbb6;
output                     dvalid_out;
wire                       quotient;
reg         [oua98c  :0]   ng1b1a2;
reg         [SWIDTH-1:0]   enc6896;
reg                        gq344b4;
wire        [oua98c  :0]   kfb40ab;
wire        [SWIDTH  :0]   tue1a2c;
wire        [SWIDTH  :0]   me68b14;
wire        [SWIDTH  :0]   wl2c507;
wire        [SWIDTH  :0]   ng9cf98;
wire                       su6283d;
wire                       je141e9;
wire        [SWIDTH  :0]   uk9854f;
wire        [SWIDTH  :0]   co153ce;
reg pf71201;
reg pu8900e;
reg [oua98c : 0] th40392;
reg [SWIDTH - 1 : 0] hqe4b3;
reg ri966c9;
reg nt9b251;
reg [oua98c : 0] alc9475;
reg [SWIDTH - 1 : 0] of51d67;
reg tj8eb3c;
reg [oua98c : 0] ir3cd41;
reg [SWIDTH : 0] ip6f4ed;
reg [SWIDTH : 0] uvd3b65;
reg [SWIDTH : 0] mred968;
reg [SWIDTH : 0] rv8b33f;
reg ne6cb44;
reg wj65a22;
reg [SWIDTH : 0] ls3fe29;
reg [SWIDTH : 0] alf8a51;
reg [2047:0] rg73e09;
wire [17:0] gd9f04a;
localparam kdf8254 = 18,eac12a4 = 32'hfdffc68b;
localparam [31:0] jr9520 = eac12a4;
localparam of54836 = eac12a4 & 4'hf;
localparam [11:0] je20da5 = 'h7ff;
wire [(1 << of54836) -1:0] cb36956;
reg [kdf8254-1:0] dba55a5;
reg [of54836-1:0] ui5697b [0:1];
reg [of54836-1:0] tja5ecd;
reg ng2f66e;
integer xj7b372;
integer kdd9b97;
assign tue1a2c = th40392[oua98c:DWIDTH-1];
assign me68b14 = {1'b0,hqe4b3};
assign su6283d   = th40392[oua98c];
assign je141e9 = mred968[SWIDTH];
assign wl2c507 =  (ne6cb44) ? (ip6f4ed + uvd3b65) :  (ip6f4ed - uvd3b65);
assign ng9cf98=  (ip6f4ed + {hqe4b3,1'b0});
assign quotient = wj65a22 ? 1'b0 : 1'b1;
generate
if(ui43668=="TRUE") begin    assign kfb40ab[oua98c:DWIDTH]  = wj65a22 ? (ne6cb44 ? rv8b33f[SWIDTH:0] : th40392[oua98c-1:DWIDTH-1]) : mred968[SWIDTH:0];
end else begin   assign kfb40ab[oua98c:DWIDTH]  = mred968[SWIDTH:0];
end
endgenerate
assign kfb40ab[DWIDTH-1:0]  = {th40392[DWIDTH-2:0],nt9b251};
always @(posedge clk or negedge rstn) begin   if(!rstn) begin      ng1b1a2 <= {(oua98c+1){1'b0}};      enc6896   <= {SWIDTH{1'b0}};      gq344b4    <= 1'b0;   end else if(pf71201) begin      if(pu8900e) begin         ng1b1a2 <= {(oua98c+1){1'b0}};         enc6896   <= {SWIDTH{1'b0}};         gq344b4    <= 1'b0;      end else if(ri966c9) begin         ng1b1a2 <= ir3cd41;         enc6896   <= hqe4b3;         gq344b4    <= ri966c9;      end else begin         gq344b4    <= 1'b0;      end   end
end
assign remainder    = (zke1443=="TRUE") ? alc9475 : ir3cd41;
assign do8cbb6  = (zke1443=="TRUE") ? of51d67   : hqe4b3;
assign dvalid_out   = (zke1443=="TRUE") ? tj8eb3c    : ri966c9;
always@* begin pf71201<=gd9f04a[0];pu8900e<=gd9f04a[1];th40392<={yk592d2>>1,gd9f04a[2]};hqe4b3<={czc9691>>1,gd9f04a[3]};ri966c9<=gd9f04a[4];nt9b251<=gd9f04a[5];alc9475<={ng1b1a2>>1,gd9f04a[6]};of51d67<={enc6896>>1,gd9f04a[7]};tj8eb3c<=gd9f04a[8];ir3cd41<={kfb40ab>>1,gd9f04a[9]};ip6f4ed<={tue1a2c>>1,gd9f04a[10]};uvd3b65<={me68b14>>1,gd9f04a[11]};mred968<={wl2c507>>1,gd9f04a[12]};rv8b33f<={ng9cf98>>1,gd9f04a[13]};ne6cb44<=gd9f04a[14];wj65a22<=gd9f04a[15];ls3fe29<={uk9854f>>1,gd9f04a[16]};alf8a51<={co153ce>>1,gd9f04a[17]};end
always@* begin rg73e09[2047]<=hoeb25a;rg73e09[2046]<=yk592d2[0];rg73e09[2044]<=czc9691[0];rg73e09[2040]<=dvalid_in;rg73e09[2032]<=quotient;rg73e09[2017]<=ng1b1a2[0];rg73e09[1987]<=enc6896[0];rg73e09[1926]<=gq344b4;rg73e09[1805]<=kfb40ab[0];rg73e09[1679]<=uk9854f[0];rg73e09[1562]<=tue1a2c[0];rg73e09[1310]<=co153ce[0];rg73e09[1076]<=me68b14[0];rg73e09[1023]<=ce;rg73e09[839]<=je141e9;rg73e09[419]<=su6283d;rg73e09[209]<=ng9cf98[0];rg73e09[104]<=wl2c507[0];end         assign cb36956 = rg73e09,gd9f04a = dba55a5; initial begin xj7b372 = $fopen(".fred"); $fdisplay( xj7b372, "%3h\n%3h", (jr9520 >> 4) & je20da5, (jr9520 >> (of54836+4)) & je20da5 ); $fclose(xj7b372); $readmemh(".fred", ui5697b); end always @ (cb36956) begin tja5ecd = ui5697b[1]; for (kdd9b97=0; kdd9b97<kdf8254; kdd9b97=kdd9b97+1) begin dba55a5[kdd9b97] = cb36956[tja5ecd]; ng2f66e = ^(tja5ecd & ui5697b[0]); tja5ecd = {tja5ecd, ng2f66e}; end end 
endmodule
module by665d8_divider_34x16(
                  clk,
                  rstn,
                  ce, 
                  hoeb25a, 
                  dvalid_in,
                  numerator, 
                  denominator, 
                  dvalid_out,
                  quotient,
                  remainder);
parameter   DWIDTH         = 40;
parameter   SWIDTH         = 20;
parameter   LATENCY        = 20;
parameter   POS_RMD        = "FALSE";
parameter   FAMILY         = "ECP3";
localparam  oua98c         = DWIDTH+SWIDTH;
localparam  ls93bd8         = DWIDTH;
localparam  zke1443        = "TRUE";
localparam  th7b0c0           = DWIDTH/LATENCY;
input                      clk;
input                      rstn;
input                      ce;
input                      hoeb25a;
input                      dvalid_in;
input       [DWIDTH-1:0]   numerator;
input       [SWIDTH-1:0]   denominator;
output                     dvalid_out;
output      [DWIDTH-1:0]   quotient;
output      [SWIDTH-1:0]   remainder;
wire        [oua98c-1:0]   kfb40ab[DWIDTH:0];
wire        [SWIDTH-1:0]   zm1e299[DWIDTH:0];
wire        [SWIDTH  :0]   wj4b48c[DWIDTH:0];
wire        [DWIDTH  :0]   vi52a1b;
wire        [DWIDTH  :0]   vka25a0;
wire                       dvalid_out;
genvar pu1b759;
reg pf71201;
reg pu8900e;
reg ri966c9;
reg [DWIDTH - 1 : 0] xwca3d1;
reg [SWIDTH - 1 : 0] cb8f45c;
reg [DWIDTH : 0] god172d;
reg [DWIDTH : 0] cz759e6;
reg [2047:0] rg73e09;
wire [6:0] gd9f04a;
localparam kdf8254 = 7,eac12a4 = 32'hfdffc68b;
localparam [31:0] jr9520 = eac12a4;
localparam of54836 = eac12a4 & 4'hf;
localparam [11:0] je20da5 = 'h7ff;
wire [(1 << of54836) -1:0] cb36956;
reg [kdf8254-1:0] dba55a5;
reg [of54836-1:0] ui5697b [0:1];
reg [of54836-1:0] tja5ecd;
reg ng2f66e;
integer xj7b372;
integer kdd9b97;
function [31:0] hqa7f2a;
input [31:0] zm3f953;
input [31:0] xjfca9a;
input [31:0] ice54d7;
reg   [63:0] hq2a6b9,yk535ca,ux9ae50;
integer      xjd7285;
begin      hq2a6b9 = zm3f953<<32;      yk535ca= xjfca9a;      hqa7f2a = 0;      for (xjd7285=0; xjd7285<xjfca9a; xjd7285=xjd7285+1) begin         ux9ae50 = (xjd7285*hq2a6b9/yk535ca)>>32;         if((zm3f953-1-ice54d7)==ux9ae50) hqa7f2a = 1;      end   end
endfunction
generate   assign vka25a0[0]    = xwca3d1[DWIDTH-1];   assign kfb40ab[0]   = {{(SWIDTH-1){xwca3d1[DWIDTH-1]}},xwca3d1,1'b0};   assign zm1e299[0] = cb8f45c;   assign wj4b48c[0] = cb8f45c;    assign vi52a1b[0]  = ri966c9;   assign quotient     = kfb40ab[DWIDTH][DWIDTH-1:0];   assign remainder    = kfb40ab[DWIDTH][oua98c-1:DWIDTH];   assign dvalid_out   = god172d[DWIDTH];   for (pu1b759=0;pu1b759<DWIDTH;pu1b759=pu1b759+1) begin :ym2ed26      ou9d5eb_divider_34x16   #( .DWIDTH        (DWIDTH           ),                           .SWIDTH        (SWIDTH           ),                           .ba9c288         (pu1b759               ),                           .zke1443       ((hqa7f2a(DWIDTH,LATENCY,pu1b759)) ? "TRUE" : "FALSE"),                           .POS_RMD       (POS_RMD          ),                           .LATENCY       (LATENCY          ),                           .FAMILY        (FAMILY           ))      db1975e             ( .clk           (clk              ),                           .rstn          (rstn             ),                           .ce            (pf71201               ),                           .hoeb25a            (pu8900e               ),                           .dvalid_in     (god172d[pu1b759]     ),                           .dzd232e     (cz759e6[pu1b759]       ),                           .yk592d2      (kfb40ab[pu1b759]      ),                           .czc9691       (zm1e299[pu1b759]    ),                           .wj4b48c     (wj4b48c[pu1b759]    ),                           .dvalid_out    (vi52a1b[pu1b759+1]   ),                           .co2ed9c    (vka25a0[pu1b759+1]     ),                           .do8cbb6   (zm1e299[pu1b759+1]  ),                           .ip65db3    (wj4b48c[pu1b759+1]  ),                           .remainder     (kfb40ab[pu1b759+1]    ));   end
endgenerate
always@* begin pf71201<=gd9f04a[0];pu8900e<=gd9f04a[1];ri966c9<=gd9f04a[2];xwca3d1<={numerator>>1,gd9f04a[3]};cb8f45c<={denominator>>1,gd9f04a[4]};god172d<={vi52a1b>>1,gd9f04a[5]};cz759e6<={vka25a0>>1,gd9f04a[6]};end
always@* begin rg73e09[2047]<=hoeb25a;rg73e09[2046]<=dvalid_in;rg73e09[2044]<=numerator[0];rg73e09[2040]<=denominator[0];rg73e09[2032]<=vi52a1b[0];rg73e09[2017]<=vka25a0[0];rg73e09[1023]<=ce;end         assign cb36956 = rg73e09,gd9f04a = dba55a5; initial begin xj7b372 = $fopen(".fred"); $fdisplay( xj7b372, "%3h\n%3h", (jr9520 >> 4) & je20da5, (jr9520 >> (of54836+4)) & je20da5 ); $fclose(xj7b372); $readmemh(".fred", ui5697b); end always @ (cb36956) begin tja5ecd = ui5697b[1]; for (kdd9b97=0; kdd9b97<kdf8254; kdd9b97=kdd9b97+1) begin dba55a5[kdd9b97] = cb36956[tja5ecd]; ng2f66e = ^(tja5ecd & ui5697b[0]); tja5ecd = {tja5ecd, ng2f66e}; end end 
endmodule
module db32863_divider_34x16(
                  clk,
                  rstn,
                  ce, 
                  hoeb25a, 
                  dvalid_in,
                  numerator, 
                  denominator, 
                  dvalid_out,
                  quotient,
                  remainder);
parameter   DWIDTH         = 40;
parameter   DTYPE          = "UNSIGNED";
parameter   SWIDTH         = 20;
parameter   STYPE          = "UNSIGNED";
parameter   LATENCY        = 20;
parameter   FAMILY         = "ECP3";
localparam  oua98c         = DWIDTH+SWIDTH;
localparam  ls93bd8         = DWIDTH;
localparam  zke1443        = "TRUE";
localparam  th7b0c0           = DWIDTH/LATENCY;
input                      clk;
input                      rstn;
input                      ce;
input                      hoeb25a;
input                      dvalid_in;
input       [DWIDTH-1:0]   numerator;
input       [SWIDTH-1:0]   denominator;
output                     dvalid_out;
output      [DWIDTH-1:0]   quotient;
output      [SWIDTH-1:0]   remainder;
wire        [oua98c  :0]   kfb40ab[DWIDTH:0];
wire        [SWIDTH-1:0]   zm1e299[DWIDTH:0];
wire        [DWIDTH  :0]   vi52a1b;
wire                       dvalid_out;
genvar pu1b759;
reg pf71201;
reg pu8900e;
reg ri966c9;
reg [DWIDTH - 1 : 0] xwca3d1;
reg [SWIDTH - 1 : 0] cb8f45c;
reg [DWIDTH : 0] god172d;
reg [2047:0] rg73e09;
wire [5:0] gd9f04a;
localparam kdf8254 = 6,eac12a4 = 32'hfdffca8b;
localparam [31:0] jr9520 = eac12a4;
localparam of54836 = eac12a4 & 4'hf;
localparam [11:0] je20da5 = 'h7ff;
wire [(1 << of54836) -1:0] cb36956;
reg [kdf8254-1:0] dba55a5;
reg [of54836-1:0] ui5697b [0:1];
reg [of54836-1:0] tja5ecd;
reg ng2f66e;
integer xj7b372;
integer kdd9b97;
function [31:0] hqa7f2a;
input [31:0] zm3f953;
input [31:0] xjfca9a;
input [31:0] ice54d7;
reg   [63:0] hq2a6b9,yk535ca,ux9ae50;
integer      xjd7285;
begin      hq2a6b9 = zm3f953<<32;      yk535ca= xjfca9a;      hqa7f2a = 0;      for (xjd7285=0; xjd7285<xjfca9a; xjd7285=xjd7285+1) begin         ux9ae50 = (xjd7285*hq2a6b9/yk535ca)>>32;         if((zm3f953-1-ice54d7)==ux9ae50) hqa7f2a = 1;      end   end
endfunction
generate   assign kfb40ab[0]   = (DTYPE=="SIGNED") ? {{(SWIDTH+1){xwca3d1[DWIDTH-1]}},xwca3d1} : {{(SWIDTH+1){1'b0}},xwca3d1};   assign zm1e299[0] = cb8f45c;   assign vi52a1b[0]  = ri966c9;   assign quotient     = kfb40ab[DWIDTH][DWIDTH-1:0];   assign remainder    = kfb40ab[DWIDTH][oua98c-1:DWIDTH];   assign dvalid_out   = god172d[DWIDTH];   for (pu1b759=0;pu1b759<DWIDTH;pu1b759=pu1b759+1) begin :rg69fb3      ui6dd9b_divider_34x16   #( .DWIDTH        (DWIDTH           ),                           .SWIDTH        (SWIDTH           ),                           .ba9c288         (pu1b759               ),                           .zke1443       ((hqa7f2a(DWIDTH,LATENCY,pu1b759)) ? "TRUE" : "FALSE"),                           .FAMILY        (FAMILY           ))      db1975e             ( .clk           (clk              ),                           .rstn          (rstn             ),                           .ce            (pf71201               ),                           .hoeb25a            (pu8900e               ),                           .dvalid_in     (god172d[pu1b759]     ),                           .yk592d2      (kfb40ab[pu1b759]      ),                           .czc9691       (zm1e299[pu1b759]    ),                           .dvalid_out    (vi52a1b[pu1b759+1]   ),                           .do8cbb6   (zm1e299[pu1b759+1]  ),                           .remainder     (kfb40ab[pu1b759+1]    ));   end
endgenerate
always@* begin pf71201<=gd9f04a[0];pu8900e<=gd9f04a[1];ri966c9<=gd9f04a[2];xwca3d1<={numerator>>1,gd9f04a[3]};cb8f45c<={denominator>>1,gd9f04a[4]};god172d<={vi52a1b>>1,gd9f04a[5]};end
always@* begin rg73e09[2047]<=hoeb25a;rg73e09[2046]<=dvalid_in;rg73e09[2044]<=numerator[0];rg73e09[2040]<=denominator[0];rg73e09[2032]<=vi52a1b[0];rg73e09[1023]<=ce;end         assign cb36956 = rg73e09,gd9f04a = dba55a5; initial begin xj7b372 = $fopen(".fred"); $fdisplay( xj7b372, "%3h\n%3h", (jr9520 >> 4) & je20da5, (jr9520 >> (of54836+4)) & je20da5 ); $fclose(xj7b372); $readmemh(".fred", ui5697b); end always @ (cb36956) begin tja5ecd = ui5697b[1]; for (kdd9b97=0; kdd9b97<kdf8254; kdd9b97=kdd9b97+1) begin dba55a5[kdd9b97] = cb36956[tja5ecd]; ng2f66e = ^(tja5ecd & ui5697b[0]); tja5ecd = {tja5ecd, ng2f66e}; end end 
endmodule
module divider_core_divider_34x16(
                  clk,
                  rstn,
                  ce, 
                  dvalid_in,
                  numerator, 
                  denominator, 
                  dvalid_out,
                  quotient,
                  remainder)
`ifdef DEVICE_ECP5U
`else
  `ifdef DEVICE_ECP3
  
  `else
    `ifdef DEVICE_ECP2
    
    `else
      `ifdef DEVICE_ECP2M
      
      `else
        `ifdef DEVICE_XP2
        
        `else
        
        `endif
      `endif
    `endif
  `endif
`endif
;
parameter   DWIDTH         = 40;
parameter   SWIDTH         = 20;
parameter   QWIDTH         = 40;
parameter   RWIDTH         = 20;
parameter   LATENCY        = 20;
parameter   DTYPE          = "UNSIGNED";
parameter   STYPE          = "UNSIGNED";
parameter   POS_RMD        = "FALSE";
parameter   FAMILY         = "ECP3";
input                      clk;
input                      rstn;
input                      ce;
input       [DWIDTH-1:0]   numerator;
input       [SWIDTH-1:0]   denominator;
input                      dvalid_in;
output      [QWIDTH-1:0]   quotient;
output      [RWIDTH-1:0]   remainder;
output                     dvalid_out;
wire                       hoeb25a;
reg pf71201;
reg ri966c9;
reg [DWIDTH - 1 : 0] xwca3d1;
reg [SWIDTH - 1 : 0] cb8f45c;
reg pu8900e;
reg [2047:0] rg73e09;
wire [4:0] gd9f04a;
localparam kdf8254 = 5,eac12a4 = 32'hfdffe06b;
localparam [31:0] jr9520 = eac12a4;
localparam of54836 = eac12a4 & 4'hf;
localparam [11:0] je20da5 = 'h7ff;
wire [(1 << of54836) -1:0] cb36956;
reg [kdf8254-1:0] dba55a5;
reg [of54836-1:0] ui5697b [0:1];
reg [of54836-1:0] tja5ecd;
reg ng2f66e;
integer xj7b372;
integer kdd9b97;
assign hoeb25a = 1'b0; 
generate
if(DTYPE=="UNSIGNED" && STYPE=="UNSIGNED") begin   db32863_divider_34x16 #(                  .DWIDTH           (DWIDTH           ),                  .SWIDTH           (SWIDTH           ),                  .LATENCY          (LATENCY          ),                  .FAMILY           (FAMILY           ))   ne631ce         (                                    .clk              (clk              ),                  .rstn             (rstn             ),                  .ce               (pf71201               ),                  .hoeb25a               (pu8900e               ),                  .dvalid_in        (ri966c9        ),                  .numerator        (xwca3d1        ),                  .denominator      (cb8f45c      ),                                    .dvalid_out       (dvalid_out       ),                  .remainder        (remainder        ),                  .quotient         (quotient         ));
end else if(DTYPE=="UNSIGNED" && STYPE=="SIGNED") begin   by665d8_divider_34x16 #(                  .DWIDTH           (QWIDTH           ),                  .SWIDTH           (RWIDTH           ),                  .LATENCY          (LATENCY          ),                  .POS_RMD          (POS_RMD          ),                  .FAMILY           (FAMILY           ))   ne631ce         (                                    .clk              (clk              ),                  .rstn             (rstn             ),                  .ce               (pf71201               ),                  .hoeb25a               (pu8900e               ),                  .dvalid_in        (ri966c9        ),                  .numerator        ({1'b0,xwca3d1} ),                  .denominator      (cb8f45c      ),                                    .dvalid_out       (dvalid_out       ),                  .remainder        (remainder        ),                  .quotient         (quotient         ));
end else if(DTYPE=="SIGNED" && STYPE=="UNSIGNED") begin   by665d8_divider_34x16 #(                  .DWIDTH           (QWIDTH           ),                  .SWIDTH           (RWIDTH           ),                  .LATENCY          (LATENCY          ),                  .POS_RMD          (POS_RMD          ),                  .FAMILY           (FAMILY           ))   ne631ce         (                                    .clk              (clk              ),                  .rstn             (rstn             ),                  .ce               (pf71201               ),                  .hoeb25a               (pu8900e               ),                  .dvalid_in        (ri966c9        ),                  .numerator        (xwca3d1        ),                  .denominator      ({1'b0,cb8f45c}),                                    .dvalid_out       (dvalid_out       ),                  .remainder        (remainder        ),                  .quotient         (quotient         ));
end else begin   by665d8_divider_34x16 #(                  .DWIDTH           (DWIDTH           ),                  .SWIDTH           (SWIDTH           ),                  .LATENCY          (LATENCY          ),                  .POS_RMD          (POS_RMD          ),                  .FAMILY           (FAMILY           ))   ne631ce         (                                    .clk              (clk              ),                  .rstn             (rstn             ),                  .ce               (pf71201               ),                  .hoeb25a               (pu8900e               ),                  .dvalid_in        (ri966c9        ),                  .numerator        (xwca3d1        ),                  .denominator      (cb8f45c      ),                                    .dvalid_out       (dvalid_out       ),                  .remainder        (remainder        ),                  .quotient         (quotient         ));
end
endgenerate
always@* begin pf71201<=gd9f04a[0];ri966c9<=gd9f04a[1];xwca3d1<={numerator>>1,gd9f04a[2]};cb8f45c<={denominator>>1,gd9f04a[3]};pu8900e<=gd9f04a[4];end
always@* begin rg73e09[2047]<=dvalid_in;rg73e09[2046]<=numerator[0];rg73e09[2044]<=denominator[0];rg73e09[2041]<=hoeb25a;rg73e09[1023]<=ce;end         assign cb36956 = rg73e09,gd9f04a = dba55a5; initial begin xj7b372 = $fopen(".fred"); $fdisplay( xj7b372, "%3h\n%3h", (jr9520 >> 4) & je20da5, (jr9520 >> (of54836+4)) & je20da5 ); $fclose(xj7b372); $readmemh(".fred", ui5697b); end always @ (cb36956) begin tja5ecd = ui5697b[1]; for (kdd9b97=0; kdd9b97<kdf8254; kdd9b97=kdd9b97+1) begin dba55a5[kdd9b97] = cb36956[tja5ecd]; ng2f66e = ^(tja5ecd & ui5697b[0]); tja5ecd = {tja5ecd, ng2f66e}; end end 
endmodule
