`include "ddr3_sdram_mem_params_ddr3_ipcore.v"
//=============================================================================
// Verilog module generated by IPExpress    12/10/2008    10:31:45         
// Filename: USERNAME.v                                          
// Copyright(c) 2011 Lattice Semiconductor Corporation. All rights reserved.   
//=============================================================================

/* WARNING - Changes to this file should be performed by re-running IPexpress
or modifying the .LPC file and regenerating the core.  Other changes may lead
to inconsistent simulation and/or implementation results */

//--------------------------
// USERNAME module 
//--------------------------

`timescale 1ns/1ps
module ddr3_ipcore_core (
// Inputs
  clk,
  rst_n,
  param_trcd,
  param_trp,
  param_twr,
  param_tras,
  param_trc,
  param_trrd,
  param_trtp,
  param_twtr,
  param_tckesr,
  param_tzqoper,
  param_tzqs,
  param_tmrd,
  param_tpd,
  param_txpdll,
  param_tcke,
  param_txpr,
  param_tmod,
  param_tzqinit,
  addr_init_0,
  addr_init_1,
  addr_init_2,
  addr_init_3,
  wl_phase_dly_cnt,
  
  phy_init_act, 
  wl_act,
  wl_done,                             

// Input signals from the User I/F  
  init_start,
  cmd,
  addr,
  cmd_burst_cnt,
  cmd_valid,
  ofly_burst_len,
  
  
// Input signals from  configuration 
  trefi,                           
  ar_burst_cnt, 
  
//data  coming from user I/F
  datain,
  dmsel,
  DataRdy2Data,
  
// To the IOs
  pio_read,
  cal_bc4,
  ddr_cs_n,
  ddr_ras_n,
  ddr_cas_n,
  ddr_we_n,
  ddr_ba,
  ddr_addr,
  ddr_cke,
  datain_valid, 

// Output signals to the User I/F
  cmd_rdy,                             
  init_done,   
  
// Signals going to IOs for write      
  ddr_dq_out,
  ddr_wr_lat_odd,
  dqs_out,
  dqs_out_en,
  dqs_out_en_erly,
  dq_out_en,
  ddr_dqm,
  
  mem_odt_out,
  cntl_odt_out ,
  rd_odd,
  mirror_on
);

input                        rst_n;
input                        clk;
 
input [1:0]         param_trcd;    
input [1:0]          param_trp;      
input [1:0]          param_twr;          
input [3:0]         param_tras;     
input [3:0]          param_trc;        
input [1:0]         param_trrd;        
input [1:0]         param_trtp;    
input [1:0]         param_twtr;    
input [1:0]       param_tckesr ;
input [7:0]      param_tzqoper ;
input [5:0]         param_tzqs;
input [1:0]         param_tmrd;
input [1:0]          param_tpd;
input [2:0]       param_txpdll;
input [1:0]         param_tcke;
input [5:0]         param_txpr;
input [2:0]         param_tmod;
input [8:0]      param_tzqinit;

input [15:0]                 addr_init_0;
input [15:0]                 addr_init_1;
input [15:0]                 addr_init_2;
input [15:0]                 addr_init_3;
input [7:0]                  wl_phase_dly_cnt;

input                        init_start;
input                        phy_init_act;
input                        wl_act;
input                        wl_done;
input [63:0]              datain;
input [7:0]            dmsel; 
input [1:0]                  DataRdy2Data;

input [3:0]                  cmd;
input [26:0]         addr;
input [4:0]                  cmd_burst_cnt;
input                        cmd_valid;
input                        ofly_burst_len;


input [15:0]                 trefi;
input [2:0]                  ar_burst_cnt;

output                       pio_read;
output                       cal_bc4;

output [0:0]          ddr_cs_n;
output                       ddr_ras_n;
output                       ddr_cas_n;
output                       ddr_we_n;
output [2:0]        ddr_ba;
output [13:0]         ddr_addr ;
output                       datain_valid;
output [63:0]             ddr_dq_out;
output                       ddr_wr_lat_odd;
output [1:0]         dqs_out;
output                       dqs_out_en;
output                       dqs_out_en_erly;
output                       dq_out_en;

output [7:0]           ddr_dqm;
output [0:0]         ddr_cke;


output                       cmd_rdy;
output                       init_done;

output [0:0]          mem_odt_out;       
output                       cntl_odt_out;
output                       rd_odd;
output                       mirror_on;

ddr3_sdram_core_ddr3_ipcore U1_LSC_IP_ddr_core (

  .clk(clk),
  .rst_n(rst_n),
  .param_trcd(param_trcd),
  .param_trp(param_trp),
  .param_twr(param_twr),
  .param_tras(param_tras),
  .param_trc(param_trc),
  .param_trrd(param_trrd),
  .param_trtp(param_trtp),
  .param_twtr(param_twtr),
  .param_tckesr(param_tckesr),
  .param_tzqoper(param_tzqoper),
  .param_tzqs(param_tzqs),
  .param_tmrd(param_tmrd),
  .param_tpd(param_tpd),
  .param_txpdll(param_txpdll),
  .param_tcke(param_tcke),
  .param_txpr(param_txpr),
  .param_tmod(param_tmod),
  .param_tzqinit(param_tzqinit),
  .addr_init_0(addr_init_0),
  .addr_init_1(addr_init_1),
  .addr_init_2(addr_init_2),
  .addr_init_3(addr_init_3),
  .wl_phase_dly_cnt(wl_phase_dly_cnt),
  .phy_init_act(phy_init_act),
  .wl_act(wl_act),
  .wl_done(wl_done),
// Input signals from the User I/F  
  .init_start(init_start),
  .cmd(cmd),
  .addr(addr),
  .cmd_burst_cnt(cmd_burst_cnt),
  .cmd_valid(cmd_valid),
  .ofly_burst_len(ofly_burst_len),
  
  
// Input signals from  configuration 
  .trefi(trefi),
  .ar_burst_cnt(ar_burst_cnt), 
  
//data  coming from user I/F
  .datain(datain),
  .dmsel(dmsel),
  .DataRdy2Data(DataRdy2Data),
  
//data coming from IOs (read)   
//.ddr_rd_data(ddr_rd_data),
//.ddr_rd_data_vld(ddr_rd_data_vld),
  
// To the user I/F 
//.read_data(read_data),
//.read_data_vld(read_data_vld),
// To the IOs
  .pio_read(pio_read),
  .cal_bc4(cal_bc4),
  .ddr_cs_n(ddr_cs_n),
  .ddr_ras_n(ddr_ras_n),
  .ddr_cas_n(ddr_cas_n),
  .ddr_we_n(ddr_we_n),
  .ddr_ba(ddr_ba),
  .ddr_addr(ddr_addr),
  .ddr_cke(ddr_cke),
  .datain_valid(datain_valid),

// Output signals to the User I/F
  .cmd_rdy(cmd_rdy),
  .init_done(init_done),
  
// Signals going to IOs for write      
  .ddr_dq_out(ddr_dq_out),
  .ddr_wr_lat_odd(ddr_wr_lat_odd),
  .dqs_out(dqs_out),
  .dqs_out_en(dqs_out_en),
  .dqs_out_en_erly(dqs_out_en_erly),
  .dq_out_en(dq_out_en),
  .ddr_dqm(ddr_dqm),
  
  .mem_odt_out(mem_odt_out),
  .cntl_odt_out(cntl_odt_out) ,
  .rd_odd(rd_odd),
  .mirror_on(mirror_on)
);

endmodule
// ddr3_obf_temp.v generated by Lattice IP Model Creator version 1
// created on Wed, Sep 26, 2018 11:04:42 AM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top





























`timescale 1 ns / 100 ps
module cz5ee8f_ddr3_ipcore (
		ipf747d,
		rvba3ed,
    med1f6f,
    cb8fb78,
    ui7dbc4,
		mrede21,
   
    clk,
    rst_n,
    phy_init_act,
    
   
   uk21908,			 
   xlc840,			 
   nr64207,
   uk2103f,			 
   an81f9,			 
   hb40fcc,			 
   kf7e67,			 
   do3f33c,			 
   hbf99e3,			 
   mrccf1f,
   ay678fd,
   wl3c7e9,
   zxe3f4c,		 
   mg1fa67,		 

   
   kdfd339,			 
   hbe99cc,			 
   yk4ce66,	
   su67331,		 
   gd39988,			 
   enccc45,			 
   ps6622d,			 
   gq3116a,			 
   uk88b50,			 
   pf45a81,
   xl2d40f,
   cz6a07f,   
   nr503fc,
   ph81fe7,		 
   ukff3f,

   kd7f9f8,
   hbfcfc4,			
   mre7e27,
   ng3f13d,
   ipf89eb,
   suc4f5d,
   vx27ae9,
   jr3d74f,

   xweba7e,
   by5d3f3,			
   ble9f9b,
   fn4fcde,
   vv7e6f6,
   vvf37b7,
   rv9bdbf,
   wwdedff,   

   nrf6ff9,
   zmb7fce,
   tjbfe72,
   ykff396,
   thf9cb1,
   cmce58f, 
   yk72c79,
   je963c8,
   epb1e42,
   kf8f215,
   lq790ad,
   pfc856a,
   vi42b56,
   mg15ab2,
   baad590,
   ip6ac83,
   kq5641d,
   lsb20e8,
   oh90743,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
      
   param_trcd, 
   param_trp,  
   param_twr,  
   param_tras, 
   param_trc,  
   param_trrd,  
   param_trtp, 
   param_twtr,

   param_tckesr ,
   param_tzqoper ,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_txpdll,
   param_tcke,
   qgc43c2,
   param_txpr,
   param_tmod,
   param_tzqinit ,  
    

   datain,
   dmsel,
   DataRdy2Data,





   zm11cc,
   ux8e62, 
   wl_act,  
   gd398ab,
   encc55d,
   kq62aec,
   wy15761,
   
   wl_done,
  

   lq5d84d,			 
   zxec26a,
   th61357,		   
   tj9abf,
   fa4d5ff,
   uv6affa,
   dm57fd5,		 
   ntbfeab,			 
   cmff55e,
   wwfaaf1,
   xwd5788,
   qvabc43,
   ddr_cs_n,
   ddr_ras_n,
   ddr_cas_n,
   ddr_we_n,
   ddr_ba,
   ddr_addr,
   ddr_cke,
   datain_valid,   




   

   ddr_dq_out,
   dqs_out,
   dqs_out_en,
   dqs_out_en_erly,
   dq_out_en,
   ddr_dqm,
   

   pio_read,
   
   
   en5ec67,
   zxf633d,
   wlb19ef,
   xy8cf7d,
   cal_bc4,
   zz3df59,
   ykefacf,
   ic7d679,
   pseb3c8 ,
   kq59e42 ,
   pscf210 ,
   zk79083 ,
   xjc841a,
   rd_odd,
   ie106b3,
   zm83599 ,
`ifdef ddr3_ipcore_DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   mirror_on,
	do99661,
	oscb30b,
	qg59859
	
	
);
parameter cmd_width  = 4;
parameter addr_width = `ddr3_ipcore_ADDR_WIDTH ;
parameter burst_cnt_width = 5;
parameter ofly_burst_len_width = 1;
parameter queue_info_width	=	ofly_burst_len_width + cmd_width + burst_cnt_width + addr_width;
input[5:0]                       ipf747d;
input[5:0]                       rvba3ed;
input[queue_info_width-1 : 0]    med1f6f;
input[queue_info_width-1 : 0]    ui7dbc4;
input                            cb8fb78;
input                            mrede21;
input                           clk;
input                           rst_n;
input                           phy_init_act;
input                           uk21908;
input                           xlc840;
input                           nr64207;
input                           uk2103f;
input                           an81f9;
input                           hb40fcc;
input                           kf7e67;
input [4:0]                     do3f33c;
input [`ddr3_ipcore_CS_WIDTH-1:0]           hbf99e3;
input [`ddr3_ipcore_COL_WIDTH -1:0]         mrccf1f;
input [`ddr3_ipcore_BANK_WIDTH -1 :0]       ay678fd;
input [`ddr3_ipcore_ROW_WIDTH -1:0]         wl3c7e9;
input [2:0]                     zxe3f4c;
input                           mg1fa67;
input                           kdfd339;
input                           hbe99cc;
input                           yk4ce66;
input                           su67331;
input                           gd39988;
input                           enccc45;
input                           ps6622d;
input [4:0]                     gq3116a;
input [`ddr3_ipcore_CS_WIDTH-1:0]           uk88b50;
input [`ddr3_ipcore_COL_WIDTH -1:0]         pf45a81;
input [`ddr3_ipcore_BANK_WIDTH -1 :0]       xl2d40f;
input [`ddr3_ipcore_ROW_WIDTH -1:0]         cz6a07f;
input [2:0]                     nr503fc;
input                           ph81fe7;
input                           wl_done;
input [`ddr3_ipcore_AL_WIDTH-1:0]           epb1e42;
input [`ddr3_ipcore_CL_WIDTH-1:0]           kf8f215;
input [`ddr3_ipcore_CWL_WIDTH-1:0]          pfc856a;
input                           vi42b56;
input                           lq790ad;
input                           mg15ab2;
input                           baad590;
input                           ip6ac83;
input                           kq5641d;
input                           lsb20e8;
input [3:0]                     oh90743;
input                           wl_act;
input                           zm11cc;
input [`ddr3_ipcore_DQS_WIDTH-1:0]          ux8e62;
input                           gd398ab;
input                           encc55d;
input [`ddr3_ipcore_CS_WIDTH-1:0]           kq62aec;
input [15:0]                    wy15761;
input                           kd7f9f8;
input                           hbfcfc4;
input                           mre7e27;
input                           ng3f13d;
input                           ipf89eb;
input                           suc4f5d;
input                           vx27ae9;
input                           jr3d74f;
input                           xweba7e;
input                           by5d3f3;
input                           ble9f9b;
input                           fn4fcde;
input                           vv7e6f6;
input                           vvf37b7;
input                           rv9bdbf;
input                           wwdedff;
input                           nrf6ff9;
input                           zmb7fce;
input                           tjbfe72;
input                           ykff396;
input                           thf9cb1;
input                           cmce58f;
input                           yk72c79;
input                           je963c8;
input [`ddr3_ipcore_TRCD_WIDTH-1:0]         param_trcd;
input [`ddr3_ipcore_TRP_WIDTH-1:0]          param_trp;
input [`ddr3_ipcore_TWR_WIDTH-1:0]          param_twr;
input [`ddr3_ipcore_TRAS_WIDTH-1:0]         param_tras;
input [`ddr3_ipcore_TRC_WIDTH-1:0]          param_trc;
input [`ddr3_ipcore_TRRD_WIDTH-1:0]         param_trrd;
input [`ddr3_ipcore_TRTP_WIDTH-1:0]         param_trtp;
input [`ddr3_ipcore_TWTR_WIDTH-1:0]         param_twtr;
input [`ddr3_ipcore_TCKESR_WIDTH-1:0]       param_tckesr ;
input [`ddr3_ipcore_TZQOPER_WIDTH-1:0]      param_tzqoper ;
input [`ddr3_ipcore_TZQS_WIDTH-1:0]         param_tzqs;
input [`ddr3_ipcore_TMRD_WIDTH-1:0]         param_tmrd;
input [`ddr3_ipcore_TPD_WIDTH-1:0]          param_tpd;
input [`ddr3_ipcore_TXPDLL_WIDTH-1:0]       param_txpdll;
input [`ddr3_ipcore_TCKE_WIDTH-1:0]         param_tcke;
input [`ddr3_ipcore_TXPR_WIDTH-1:0] param_txpr;
input [`ddr3_ipcore_TMOD_WIDTH-1:0] param_tmod;
input [`ddr3_ipcore_TZQINIT_WIDTH-1:0] param_tzqinit;
input [15:0]                    addr_init_0;
input [15:0]                    addr_init_1;
input [15:0]                    addr_init_2;
input [15:0]                    addr_init_3;
input [`ddr3_ipcore_DSIZE -1:0]             datain;
input [`ddr3_ipcore_USER_DM -1:0]           dmsel;
input [1:0]        DataRdy2Data;
input                           ukff3f;
input [2:0]                     qgc43c2;
output                          lq5d84d;
output                          zxec26a;
output                          th61357;
output                          tj9abf;
output                          fa4d5ff;
output                          uv6affa;
output                          dm57fd5;
output                          ntbfeab;
output                          cmff55e;
output                          wwfaaf1;
output                          xwd5788;
output                          mirror_on;
output                          qvabc43;
output [`ddr3_ipcore_CS_WIDTH -1:0]         ddr_cs_n;
output [`ddr3_ipcore_CS_WIDTH -1:0]         wlb19ef;
output                          ddr_ras_n;
output                          ddr_cas_n;
output                          ddr_we_n;
output [`ddr3_ipcore_BANK_WIDTH-1:0]         ddr_ba;

`ifdef ddr3_ipcore_ROW_WIDTH_12
output [`ddr3_ipcore_ROW_WIDTH:0]         ddr_addr ;

`else
output [`ddr3_ipcore_ROW_WIDTH-1:0]         ddr_addr ;

`endif
output                          datain_valid;
output [`ddr3_ipcore_DSIZE -1:0]            ddr_dq_out;
output [`ddr3_ipcore_DQS_WIDTH-1:0]         dqs_out;
output                          dqs_out_en;
output                          dqs_out_en_erly;
output                          dq_out_en;
output [`ddr3_ipcore_USER_DM -1:0]          ddr_dqm;
output [`ddr3_ipcore_CKE_WIDTH -1:0]        ddr_cke;
output                          pio_read;
output                          en5ec67;
output                          zxf633d;
output                          xy8cf7d;
output                          cal_bc4;
output                          zz3df59;
output                          ykefacf;
output                          ic7d679;
output                          pseb3c8 ;
output                          kq59e42 ;
output                          pscf210 ;
output                          zk79083  ;
output                          xjc841a;
output                          rd_odd;
output                          ie106b3;
output                          zm83599;

`ifdef ddr3_ipcore_DIR_SREF_EXT
output                          sref_ent_cmd;
output                          sref_ext_cmd;

`endif
output reg	do99661;
output reg	qg59859;
output wire	oscb30b;
wire   [`ddr3_ipcore_CKE_WIDTH -1:0]        ddr_cke;
wire                            ie106b3;
wire                            zm83599;

`ifdef ddr3_ipcore_DIR_SREF_EXT
wire                              sref_ent_cmd;
wire                              sref_ext_cmd;

`endif
wire [4:0]                      do3f33c;
wire [`ddr3_ipcore_DSIZE -1:0]              ddr_dq_out;
wire [`ddr3_ipcore_USER_DM -1:0]            ddr_dqm;
wire [`ddr3_ipcore_CS_WIDTH -1:0]           wlb19ef;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]           dqs_out;
wire [`ddr3_ipcore_ROW_WIDTH-1:0]           hq83a6e;
wire [`ddr3_ipcore_COL_WIDTH:0]             gd1d372;
wire [`ddr3_ipcore_BANK_WIDTH-1:0]           pfe9b95;
wire [`ddr3_ipcore_BANK_WIDTH-1:0]           ddr_ba;

`ifdef ddr3_ipcore_ROW_WIDTH_12
wire [`ddr3_ipcore_ROW_WIDTH:0]             ddr_addr ;

`else
wire [`ddr3_ipcore_ROW_WIDTH-1:0]           ddr_addr ;

`endif
wire [`ddr3_ipcore_COL_WIDTH -1:0]          mrccf1f;
wire [`ddr3_ipcore_BANK_WIDTH -1 :0]          ay678fd;
wire [`ddr3_ipcore_ROW_WIDTH -1:0]          wl3c7e9;
wire [4:0]                      gq3116a;
wire [`ddr3_ipcore_COL_WIDTH -1:0]          pf45a81;
wire [`ddr3_ipcore_BANK_WIDTH -1 :0]          xl2d40f;
wire [`ddr3_ipcore_ROW_WIDTH -1:0]          cz6a07f;
wire [`ddr3_ipcore_CS_WIDTH -1:0]           ddr_cs_n;
wire [`ddr3_ipcore_RL_WIDTH-1:0]            nt163cf;
wire [`ddr3_ipcore_WL_WIDTH-1:0]            kfb1e7e;
wire [`ddr3_ipcore_AL_WIDTH-1:0]            epb1e42;
wire [`ddr3_ipcore_CL_WIDTH-1:0]            kf8f215;
wire [`ddr3_ipcore_CWL_WIDTH-1:0]           pfc856a;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]           ux8e62;
wire [`ddr3_ipcore_CS_WIDTH-1:0]            kq62aec;
wire [15:0]                     wy15761;
wire                            baad590;
wire                            mg15ab2;
wire                            kq5641d;
wire                            ip6ac83;
wire [`ddr3_ipcore_TRCD_WIDTH-1:0]          param_trcd;
wire [`ddr3_ipcore_TRP_WIDTH-1:0]           param_trp;
wire [`ddr3_ipcore_TRAS_WIDTH-1:0]          param_tras;
wire [`ddr3_ipcore_TRC_WIDTH-1:0]           param_trc;
wire [`ddr3_ipcore_TRTP_WIDTH-1:0]          param_trtp;
wire [`ddr3_ipcore_TWTR_WIDTH-1:0]          param_twtr;
wire [`ddr3_ipcore_TCKESR_WIDTH-1:0]        param_tckesr ;
wire [`ddr3_ipcore_TZQOPER_WIDTH-1:0]       param_tzqoper ;
wire [`ddr3_ipcore_TZQS_WIDTH-1:0]          param_tzqs;
wire [`ddr3_ipcore_TMRD_WIDTH-1:0]          param_tmrd;
wire [`ddr3_ipcore_TPD_WIDTH-1:0]           param_tpd;
wire [`ddr3_ipcore_TXPDLL_WIDTH-1:0]        param_txpdll;
wire [`ddr3_ipcore_TCKE_WIDTH-1:0]          param_tcke;
wire [`ddr3_ipcore_TXPR_WIDTH-1:0] param_txpr;
wire [`ddr3_ipcore_TMOD_WIDTH-1:0] param_tmod;
wire [`ddr3_ipcore_TZQINIT_WIDTH-1:0] param_tzqinit;
wire [15:0]                     addr_init_0;
wire [15:0]                     addr_init_1;
wire [15:0]                     addr_init_2;
wire [15:0]                     addr_init_3;
wire [2:0]                      qgc43c2;
wire                            cal_bc4 ;
wire                            zz3df59 ;
wire [`ddr3_ipcore_DSIZE -1:0]              datain;
wire [`ddr3_ipcore_USER_DM -1:0]            dmsel;
wire [`ddr3_ipcore_CS_WIDTH -1:0]           mef0d07;
wire                            zxf633d, xy8cf7d;
wire                            tja0e50, oh7286;
wire                            oh39435,lqca1ac;
wire  [`ddr3_ipcore_CS_WIDTH-1:0]           hbf99e3;
wire  [`ddr3_ipcore_CS_WIDTH-1:0]           uk88b50;
wire                            ng358f2;
wire [5:0]                      coac793 ;
wire                            ukff3f;
wire [2:0]                      ls1e4cb;
wire                            yxf265a;
wire                            uv6affa;
reg                             je996aa;
wire                            wl_act;
wire                            nr5aa99;
wire                            rgd54cf;
wire   vxaa67b;



`ifdef ddr3_ipcore_DIR_SREF_EXT

`endif

reg[5:0] go533de;
reg[5:0] fc99ef0;
reg bycf782, th7bc13 ;
reg ykde09e, wwf04f0 ;
wire sw82780;
reg[queue_info_width + 6 -1 : 0] bn9e00f, uif007e, ep803f0;
reg[queue_info_width + 6 -1 : 0] iefc23, th7e118, cmf08c7;
reg vx84639,oh231ce;
reg an18e74,pfc73a4;
wire[5:0] wl39d27;
reg	ayce93d;
reg	hb749e8;
reg[5:0]	ira4f47;
wire[addr_width - 1 : 0] lf3d1e7,ofe8f3e;
wire[burst_cnt_width - 1 : 0] an3cfa2;
wire[cmd_width -1 : 0] gq3e8ad,zkf4568;
wire ria2b42;
reg aa15a13, jead098, su684c3,ne42619;
reg[4:0] hd130cb;
reg mg9865e,kdc32f1;
reg jr1978d,kqcbc6f;
reg[`ddr3_ipcore_CS_WIDTH-1:0]   ip5e378;
reg[`ddr3_ipcore_CS_WIDTH-1:0]   zkf1bc4;
reg uk8de23;
reg[`ddr3_ipcore_ROW_WIDTH - 1 : 0] of6f119;
reg[`ddr3_ipcore_BANK_WIDTH - 1 : 0] cm788cc;
reg[`ddr3_ipcore_COL_WIDTH - 1 : 0] wwc4661;
reg[`ddr3_ipcore_ROW_WIDTH - 1 : 0] wl23308;
reg[`ddr3_ipcore_BANK_WIDTH - 1 : 0] nt19844;
reg[`ddr3_ipcore_COL_WIDTH - 1 : 0] ofcc226;
reg   [`ddr3_ipcore_CS_WIDTH-1:0]   pf61134;
wire  [`ddr3_ipcore_BSIZE-1:0]      mt89a7;
reg   [`ddr3_ipcore_CS_WIDTH-1:0]   cz44d3d;
wire  [`ddr3_ipcore_BSIZE-1:0]      wl269ed;

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif



`ifdef ddr3_ipcore_X4_GEAR

`else

`endif

















`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif






`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif



`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif









`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif









assign                          zxf633d = tja0e50;
assign                          xy8cf7d = oh7286;
assign                          zz3df59 = !cal_bc4 ;
assign                          ie106b3 = oh39435;
assign                          zm83599 = lqca1ac;
assign                          wlb19ef = mef0d07;
assign                          uv6affa = wl_done && !je996aa;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) je996aa <= 1'b0;   else je996aa <= wl_done;
end

mre2932_ddr3_ipcore ng14995(
   .clk(clk ) ,   .rst_n(rst_n ),   .fpaa935(phy_init_act ),   .sja4d7c(sja4d7c ),   .ri35f25(ri35f25 ),   .jr3d74f(jr3d74f ),   .wwdedff(wwdedff ),   .uk21908(uk21908 ),   .kdfd339(kdfd339 ),   .ukff3f(ukff3f ),

   .lq73511(lq73511 ),   .ykd445d(ykd445d ),   .tw1174a(tw1174a) ,   .ps5d29e(ps5d29e),   .vv4a79f(vv4a79f)   );
tj9e7f9_ddr3_ipcore ldf3fce(
   .clk(clk ),   .rst_n(rst_n ),   .param_trp(param_trp ) ,   .param_tckesr(param_tckesr ) ,   .param_tzqoper(param_tzqoper ) ,   .param_tzqs(param_tzqs ),   .param_tmrd(param_tmrd ),   .param_tpd(param_tpd ),   .param_twr(param_twr ),   .param_txpdll(param_txpdll ),   .param_tcke(param_tcke ),   .lsb20e8(lsb20e8 ),   .nt163cf(nt163cf ),   .ykd445d(ykd445d ),   .vv4a79f(vv4a79f),   .kd7f9f8(kd7f9f8 ),   .hbfcfc4(hbfcfc4 ),
   .mre7e27(mre7e27 ),   .ng3f13d(ng3f13d ),   .ipf89eb(ipf89eb ),   .suc4f5d(suc4f5d ),   .vx27ae9(vx27ae9 ),   .jr3d74f(jr3d74f ),   .xweba7e(xweba7e ),   .by5d3f3(by5d3f3 ),
   .ble9f9b(ble9f9b ),   .fn4fcde(fn4fcde ),   .vv7e6f6(vv7e6f6 ),   .vvf37b7(vvf37b7 ),   .rv9bdbf(rv9bdbf ),   .wwdedff(wwdedff ),   .co34709(ukff3f ),   .oh90743 (oh90743  ),

   .lf907b(lf907b ),   .wj41ef2(wj41ef2 ),   .vv7bca9(vv7bca9 ),   .wjf2a70(wjf2a70 ),   .qia9c25(qia9c25 ),   .of70945(of70945),   .fc2516f(lf28b7b ),   .hb45bde(hb45bde ),   .gb6f7be(gb6f7be ),   .ykdefa6(ykdefa6 ),   .qvabc43(qvabc43 ),   .ri35f25(ri35f25 ),
   .th61357(th61357 ),
   .tj9abf(tj9abf ),   .fa4d5ff(fa4d5ff ),   .nr5f942(nr5f942 ),   .cme50bf(cme50bf ),   .dm57fd5(dm57fd5 ),
   .ntbfeab(ntbfeab ),
   .cmff55e(cmff55e ),   .wwfaaf1(wwfaaf1 ),   .xwd5788(xwd5788 ),   .en5ec67(en5ec67),   .ykefacf(ykefacf),   .ic7d679(ic7d679),

`ifdef ddr3_ipcore_DIR_SREF_EXT
   .sref_ent_cmd (sref_ent_cmd),   .sref_ext_cmd (sref_ext_cmd),

`endif
   .fp8e464(pscf210),   .zz91939(zk79083)   );
th64e73_ddr3_ipcore ph2739e(
   .clk(clk ),   .rst_n(rst_n ),   .rtf6a57(lq73511 ),
      .uk21908(uk21908 ),
   .xlc840(xlc840 ),
   .nr64207(nr64207 ),   .uk2103f(uk2103f),
   .an81f9(an81f9 ),
   .hb40fcc(hb40fcc ),
   .kf7e67(kf7e67 ),
   .do3f33c(do3f33c ),
   .hbf99e3(hbf99e3 ),
   .mrccf1f(mrccf1f ),   .ay678fd(ay678fd ),   .wl3c7e9(wl3c7e9 ),   .mg1fa67(mg1fa67 ),      .kdfd339(kdfd339 ),
   .hbe99cc(hbe99cc ),
   .yk4ce66(yk4ce66 ),   .su67331(su67331),
   .gd39988(gd39988 ),
   .enccc45(enccc45 ),
   .ps6622d(ps6622d ),
   .gq3116a(gq3116a ),
   .uk88b50(uk88b50 ),
   .pf45a81(pf45a81 ),   .xl2d40f(xl2d40f ),   .cz6a07f(cz6a07f ),   .ph81fe7(ph81fe7 ),   .dzd7927(jr3d74f || wwdedff || ukff3f),
  .tw1174a(tw1174a) ,   .epb1e42(epb1e42 ),   .kf8f215(kf8f215 ),   .lq790ad(lq790ad ),   .pfc856a(pfc856a ),   .vi42b56(vi42b56),   .mg15ab2(mg15ab2 ),   .baad590(baad590 ),   .ip6ac83(ip6ac83 ),   .kq5641d(kq5641d ),   .nrf6ff9(nrf6ff9),   .zmb7fce(zmb7fce),   .tjbfe72(tjbfe72),   .ykff396(ykff396),   .thf9cb1(thf9cb1 ),   .cmce58f(cmce58f ),   .yk72c79   (yk72c79),   .je963c8   (je963c8),   .param_trcd(param_trcd ),   .param_trp(param_trp ),   .param_tras(param_tras ),   .param_trc(param_trc ),   .param_trrd(param_trrd ),   .param_trtp(param_trtp ),   .param_twtr(param_twtr ),   .qgc43c2(qgc43c2),   .jr3d74f(jr3d74f),   .wwdedff(wwdedff),   .zxe3f4c(zxe3f4c),   .nr503fc(nr503fc),   .nr5aa99(nr5aa99),

   .rgd54cf(rgd54cf ),   .nt163cf(nt163cf ),   .kfb1e7e(kfb1e7e ),   .jcfe692(jcfe692 ),   .cb9a49f(cb9a49f ),   .tja0e50(tja0e50 ),   .oh7286(oh7286 ),   .fc2516f(fc2516f ),   .sja4d7c(sja4d7c ),   .mef0d07(mef0d07 ),   .alf250f(gd1d372),   .fp943e9(pfe9b95 ),   .gqfa7c(hq83a6e ),   .lq5d84d(lq5d84d ),
   .zxec26a(zxec26a ),   .oh39435(oh39435 ),   .lqca1ac(lqca1ac ),   .fp8e464(pseb3c8),   .zz91939(kq59e42),   .ng358f2(ng358f2) ,   .coac793(coac793) ,   .ls1e4cb(ls1e4cb),   .xjc841a(xjc841a),   .rd_odd(rd_odd),
   .ux1203a(ux1203a) ,   .vxaa67b (vxaa67b)
);

assign wl39d27 = cmf08c7[queue_info_width +6 -1 : queue_info_width];

always@(posedge clk or negedge rst_n)begin	if(!rst_n)	an18e74 <= 0;	else	an18e74 <= vxaa67b;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	pfc73a4 <= 0;	else	pfc73a4 <= an18e74;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	vx84639 <= 0;	else	vx84639 <= cb8fb78;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	oh231ce <= 0;	else	oh231ce <= mrede21;
end



assign oscb30b = ayce93d && hb749e8;
assign sw82780 =  (fc99ef0 == wl39d27) && (wl39d27 != 0);




always @(posedge clk or negedge rst_n)begin   if (!rst_n) begin      bycf782 <= 0;      th7bc13 <= 0;      do99661 <= 0;      bn9e00f  <= 0;      uif007e  <= 0;      ep803f0  <= 0;  ira4f47	<=	0;  hb749e8	<=	0;   end      else begin         case ({vx84639,oscb30b})
            2'b01: begin 	ep803f0 <= uif007e;	uif007e <= bn9e00f;	bycf782 <= 0;	do99661 <= th7bc13;	th7bc13 <= bycf782;
	ira4f47	<=	uif007e[5:0]	-	1;	if (uif007e[5:0] != 0)	hb749e8	<=	1;	else	hb749e8	<=	0;            end
            2'b10: begin	if(th7bc13)  begin	bycf782 <= 1'b1;	bn9e00f  <= {med1f6f,ipf747d};	end	else  if (do99661) begin	th7bc13 <= 1'b1;	uif007e  <= {med1f6f,ipf747d};	end	else begin 	do99661 <= 1'b1;	ep803f0  <= {med1f6f,ipf747d};
	ira4f47	<=	ipf747d	-1;	if (ipf747d != 0)	hb749e8	<=	1;	else	hb749e8	<=	0;	end            end
            2'b11: begin               if (bycf782) begin                     ep803f0 <= uif007e;                    uif007e <= bn9e00f;	bn9e00f <= {med1f6f,ipf747d};	ira4f47	<=	uif007e[5:0]	-	1;	if (uif007e[5:0] != 0)	hb749e8	<=	1;	else	hb749e8	<=	0;               end               else if (th7bc13) begin 	ep803f0 <= uif007e;	uif007e <= {med1f6f,ipf747d};	ira4f47	<=	uif007e[5:0]	-	1;	if (uif007e[5:0] != 0)	hb749e8	<=	1;	else	hb749e8	<=	0;
               end               else begin                     ep803f0 <= {med1f6f,ipf747d};	ira4f47	<=	ipf747d	-1;	if (ipf747d != 0)	hb749e8	<=	1;	else	hb749e8	<=	0;               end            end         endcase      end
end

always @(posedge clk or negedge rst_n)begin   if (!rst_n) begin      ykde09e <= 0;      wwf04f0 <= 0;      qg59859 <= 0;      iefc23  <= 0;      th7e118  <= 0;      cmf08c7  <= 0;   end      else begin         case ({oh231ce,sw82780})
            2'b01: begin 	cmf08c7 <= th7e118;	th7e118 <= iefc23;
              ykde09e <= 0;	qg59859 <= wwf04f0;	wwf04f0 <= ykde09e;            end
            2'b10: begin if(wwf04f0)     begin	ykde09e <= 1'b1;	iefc23  <= {rvba3ed,ui7dbc4}; end else  if (qg59859)	begin wwf04f0 <= 1'b1; th7e118  <= {rvba3ed,ui7dbc4};	end  else	begin 	qg59859 <= 1'b1;	cmf08c7  <= {rvba3ed,ui7dbc4};	end            end
            2'b11: begin               if (ykde09e) begin                     cmf08c7 <= th7e118;                    th7e118 <= iefc23;	iefc23 <= {rvba3ed,ui7dbc4};               end               else if (wwf04f0) begin 	cmf08c7 <= th7e118;	th7e118 <= {rvba3ed,ui7dbc4};               end               else begin                     cmf08c7 <= {rvba3ed,ui7dbc4};               end            end         endcase      end
end

assign lf3d1e7 = ep803f0[addr_width + 6 - 1 : 6];
assign ofe8f3e = cmf08c7[addr_width - 1 : 0];
assign an3cfa2 = ep803f0[addr_width + burst_cnt_width  + 6 - 1 : addr_width + 6];
assign gq3e8ad = ep803f0[cmd_width + burst_cnt_width + addr_width  + 6 - 1 : burst_cnt_width + addr_width + 6];
assign zkf4568 = cmf08c7[cmd_width + burst_cnt_width + addr_width  - 1 : burst_cnt_width + addr_width];
assign ria2b42 = ep803f0[queue_info_width +6 -1];




always@(posedge clk or negedge rst_n)begin	if(!rst_n)	go533de <= 0;	else if(go533de == 6'd30)	go533de <= 1;	else if((((tja0e50 || oh7286) && (coac793 == 1))) || ((go533de == ep803f0[5:0]) && (ep803f0[5:0] != 0)))	go533de <= go533de + 1;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	ayce93d	<=	0;	else if ((tja0e50 || oh7286) && (coac793 == 1) && ((go533de == ira4f47) && (ep803f0[5:0] != 0)))	ayce93d	<=	1;	else
	ayce93d	<=	0;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	fc99ef0 <= 0;	else if(fc99ef0 == 6'd30)	fc99ef0 <= 1;	else if((an18e74) || ((fc99ef0 == wl39d27) && (wl39d27 != 0)))	fc99ef0 <= fc99ef0 + 1;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n) begin	aa15a13 <= 0;	jead098 <= 0;	su684c3 <= 1;	hd130cb <= 0;	mg9865e <= 0;	kdc32f1 <= 0;	end	else if((go533de == ep803f0[5:0]) && (go533de != 0))begin	aa15a13 <= {gq3e8ad == 4'b0010}?1:0;	jead098 <= {gq3e8ad == 4'b0001}?1:0;	su684c3 <= 0;	hd130cb <= 5'd1;	mg9865e <= 1;	kdc32f1 <= mg9865e;	end	else begin  aa15a13 <= 0;	jead098 <= 0;	su684c3 <= 1;	hd130cb <= 0;	mg9865e <= 0;	kdc32f1 <= mg9865e;	end
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n) begin	uk8de23 <= 0;	ne42619 <= 1;	jr1978d <= 0;	kqcbc6f <= 0;	end	else if((fc99ef0 == wl39d27) && (fc99ef0 != 0))begin	uk8de23 <= {qg59859}?1:0;	ne42619 <= {qg59859}?0:1;	jr1978d <= qg59859;	kqcbc6f <= jr1978d;	end	else begin	uk8de23 <= 0;	ne42619 <= 1;	jr1978d <= 0;	kqcbc6f <= jr1978d;	end
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)begin	of6f119 <= 0;	cm788cc <= 0;	wwc4661 <= 0;	end	else if((go533de == ep803f0[5:0]) && (go533de != 0)) begin	of6f119 <= lf3d1e7[`ddr3_ipcore_ADDR_WIDTH-1 : `ddr3_ipcore_BSIZE + `ddr3_ipcore_COL_WIDTH];	cm788cc <= lf3d1e7[`ddr3_ipcore_COL_WIDTH + `ddr3_ipcore_BANK_WIDTH : `ddr3_ipcore_COL_WIDTH];	wwc4661 <= lf3d1e7[`ddr3_ipcore_COL_WIDTH - 1 : 0];	end
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)begin	wl23308 <= 0;	nt19844 <= 0;	ofcc226 <= 0;	end	else if(vxaa67b) begin	wl23308 <= ofe8f3e[`ddr3_ipcore_ADDR_WIDTH-1 : `ddr3_ipcore_BSIZE + `ddr3_ipcore_COL_WIDTH];	nt19844 <= ofe8f3e[`ddr3_ipcore_COL_WIDTH + `ddr3_ipcore_BANK_WIDTH : `ddr3_ipcore_COL_WIDTH];	ofcc226 <= ofe8f3e[`ddr3_ipcore_COL_WIDTH - 1 : 0];	end
end



assign mt89a7	=	lf3d1e7[`ddr3_ipcore_BSIZE + `ddr3_ipcore_COL_WIDTH :  `ddr3_ipcore_COL_WIDTH];
assign wl269ed	=	ofe8f3e[`ddr3_ipcore_BSIZE + `ddr3_ipcore_COL_WIDTH :  `ddr3_ipcore_COL_WIDTH];


`ifdef ddr3_ipcore_CS_WIDTH_1

always @ (mt89a7) begin   pf61134[0] = 0;
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

always @ (mt89a7) begin   pf61134 = 2'h3;   case (xje3b83[3])        1'b0 : pf61134[0] = 0;      1'b1 : pf61134[1] = 0;   endcase
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4

always @ (mt89a7) begin   pf61134 = 4'hf;   case (mt89a7[4:3])        2'b00 : pf61134[0] = 0;      2'b01 : pf61134[1] = 0;      2'b10 : pf61134[2] = 0;      2'b11 : pf61134[3] = 0;   endcase
end

`endif



`ifdef ddr3_ipcore_CS_WIDTH_1

always @ (wl269ed) begin   cz44d3d[0] = 0;
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

always @ (wl269ed) begin   cz44d3d = 2'h3;   case (wl269ed[3])        1'b0 : cz44d3d[0] = 0;      1'b1 : cz44d3d[1] = 0;   endcase
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4

always @ (wl269ed) begin   cz44d3d = 4'hf;   case (wl269ed[4:3])        2'b00 : cz44d3d[0] = 0;      2'b01 : cz44d3d[1] = 0;      2'b10 : cz44d3d[2] = 0;      2'b11 : cz44d3d[3] = 0;   endcase
end

`endif




wj65f36_ddr3_ipcore ls2f9b4(
   .clk(clk ),   .rst_n(rst_n ),   .qia9c25(qia9c25 ),   .of70945(of70945),   .xwe40df(1'b0 ),   .xy206fb(1'b0 ),   .zz37db(1'b0 ),   .xy1bedf(1'b0 ),   .tudf6fb(1'b0 ),   .jcfb7da(1'b0 ),   .aydbed3(1'b0 ),   .rgdf699(1'b0 ),   .hb45bde(hb45bde ),   .lf907b(lf907b ),   .zkca6a3(wj41ef2 ),   .fc2516f(fc2516f ),   .qvabc43(lf28b7b ),   .cb9a49f(cb9a49f || uk8de23 ),   .dm48595(tja0e50 || aa15a13),   .rib2a96(oh7286 || jead098),   .jcfe692(jcfe692 && su684c3 && ne42619),   .vv7bca9(vv7bca9 ),   .wjf2a70(wjf2a70 ),
   .vx948e7(1'b0 ),   .lqca1ac(lqca1ac ),   .gb6f7be(gb6f7be ),   .ykdefa6(ykdefa6 ),   .mef0d07({jr1978d || kqcbc6f}? cz44d3d : {mg9865e || kdc32f1}?pf61134 : mef0d07),   .ls1e4cb(ls1e4cb),
   .fpaa935(phy_init_act),   .hq83a6e({jr1978d || kqcbc6f}? wl23308 : {mg9865e || kdc32f1}?of6f119 : hq83a6e),   .pfe9b95({jr1978d || kqcbc6f}? nt19844 : {mg9865e || kdc32f1}?cm788cc : pfe9b95),   .gd1d372({mg9865e || kdc32f1}?wwc4661 : gd1d372),   .addr_init_0(addr_init_0),   .addr_init_1(addr_init_1),   .addr_init_2(addr_init_2),   .addr_init_3(addr_init_3),
   .tuf1b3a(uv6affa),   .cme50bf(cme50bf),   .nr5f942(nr5f942),   .wl_act(wl_act),   .gd398ab(gd398ab),   .encc55d(encc55d),   .kq62aec(kq62aec),   .wy15761(wy15761),   .ng358f2(ng358f2 ),   .coac793(coac793 ),
   .ux1203a(ux1203a),      .tw1174a(ps5d29e),   .rgd54cf(rgd54cf),   
   .ddr_cs_n(ddr_cs_n ),   .ddr_ras_n(ddr_ras_n ),   .ddr_cas_n(ddr_cas_n ),   .ddr_we_n(ddr_we_n ),   .ddr_ba(ddr_ba ),   .ddr_addr(ddr_addr ),   .ddr_cke(ddr_cke),   .nr5aa99(nr5aa99),
   .mirror_on(mirror_on)
);


ls11171_ddr3_ipcore wy88b8b(
   .clk(clk ),   .rst_n(rst_n ),   .datain(datain ),   .dmsel(dmsel ),   .tja0e50(tja0e50 || aa15a13),   .oh7286(oh7286 || jead098),

`ifdef ddr3_ipcore_X4_GEAR
   .oh39435(1'b1 ),

`else
   .oh39435(oh39435 ),

`endif
   .nt163cf(nt163cf ),   .kfb1e7e(kfb1e7e ),   .DataRdy2Data(DataRdy2Data ),   .zm11cc(zm11cc ),   .ux8e62(ux8e62 ),   .wl_act(wl_act ),

  .datain_valid(datain_valid ),  .ddr_dq_out(ddr_dq_out ),  .dqs_out(dqs_out ),  .dqs_out_en(dqs_out_en ),  .dqs_out_en_erly(dqs_out_en_erly ),  .dq_out_en(dq_out_en ),  .ddr_dqm(ddr_dqm ),  .pio_read(pio_read ),  .cal_bc4(cal_bc4 )   );


endmodule






























`timescale 1 ns / 100 ps
module do11b70_ddr3_ipcore (
    
    clk,			               
    rst_n,		                   

    
    cmd,                           
    addr,                          
    cmd_burst_cnt,                 
    cmd_valid,                     
    init_start,                    
    ofly_burst_len,                

    
    uv6affa,                 
    tj9abf,                 
    dm57fd5,                 
    lq5d84d,                     
    zxec26a,                     
    ykefacf,                   
    ic7d679,                   
    ntbfeab,                      
    xwd5788,                       
    cmff55e,                     
    th61357,                     
    fa4d5ff,                     
    psc000a,                    
    `ifdef ddr3_ipcore_EXT_AUTO_REF
    ext_auto_ref,                  
    ext_auto_ref_ack,              
    `endif

    
    trefi,                         
    ar_burst_cnt,                  
    lq52011,                     
    ux9008a,                     
    sj80455,                     

    
    cmd_rdy,                       
    

    
    do11565,                    
    mt8ab2b,                   
    zx5595c,               
    aaacae6,            
    wj65730,                    
    ou2b985,                
    go5cc29,                  
    lde6148,                       
    ba30a46,                   
    mt85233,                      
    qgc43c2,                      

    
    uk21908,                    
    xlc840,                   
    nr64207,                      
    an81f9,                       
    hb40fcc,                        
    kd7f9f8,                
    hbfcfc4,                
    mre7e27,                  
    ng3f13d,                  
    pu11020,                 
    co88103,                
    wl3c7e9,                      
    mrccf1f,                      
    ay678fd,                       
    hbf99e3,                        
    ipf89eb,                         
    jr3d74f,                  
    mg1fa67,                   
    wjd3f3b,                     
    kf7e67,                    
    do3f33c,                   
    wje776f,                         
    ks3bb7c,                         
    zxe3f4c,                       
		uk2103f,
		
    
    kdfd339,                    
    hbe99cc,                   
    yk4ce66,                      
    gd39988,                       
    enccc45,                        
    xweba7e,                
    by5d3f3,                
    ble9f9b,                  
    fn4fcde,                  
    mg31eb3,                 
    wl8f599,                
    cz6a07f,                      
    pf45a81,                      
    xl2d40f,                       
    uk88b50,                        
    vv7e6f6,                         
    wwdedff,                  
    ph81fe7,                   
    co215d7,                     
    ps6622d,                    
    gq3116a,                   
    phbae42,                         
    vvd7216,                         
    nr503fc,                       
		su67331,

    zk42d86,                      
    vx16c32,                      
    
    oh90743,                
    ukff3f,                      
	
	
	tw865cf,						
	db32e7b,			
	wy973de,			
	ui7dbc4,
	mrede21,
	do99661,
    qg59859
			
);
parameter cmd_width  = 4;
parameter addr_width = `ddr3_ipcore_ADDR_WIDTH ;
parameter burst_cnt_width = 5;
parameter ofly_burst_len_width = 1;
parameter queue_info_width	=	ofly_burst_len_width + cmd_width + burst_cnt_width + addr_width;
input                                 clk;
input                                 rst_n;
input[queue_info_width-1 : 0]    ui7dbc4;
input                            mrede21;
input   [3:0]                         cmd;
input   [`ddr3_ipcore_ADDR_WIDTH-1:0]             addr;
input   [4:0]                         cmd_burst_cnt;
input                                 cmd_valid;
input                                 init_start;
input                                 ofly_burst_len;
input                                 uv6affa;
input                                 tj9abf;
input                                 dm57fd5;
input                                 lq5d84d;
input                                 zxec26a;
input                                 ykefacf;
input                                 ic7d679;
input                                 ntbfeab;
input                                 xwd5788;
input                                 cmff55e;
input                                 th61357;
input                                 fa4d5ff;
input                                 psc000a;

`ifdef ddr3_ipcore_EXT_AUTO_REF
input                                 ext_auto_ref;
output                                ext_auto_ref_ack;

`endif
input   [15:0]                        trefi;
input   [2:0]                         ar_burst_cnt;
input   [15:0]                        lq52011;
input   [15:0]                        ux9008a;
input   [15:0]                        sj80455;
input	do99661;
input	qg59859;
output                                cmd_rdy;
output                                do11565;
output  [3:0]                         mt8ab2b;
output                                zx5595c;
output                                aaacae6;
output  [1:0]                         wj65730;
output  [2:0]                         ou2b985;
output                                go5cc29;
output                                lde6148;
output                                ba30a46;
output                                mt85233;
output  [2:0]                         qgc43c2;
output                                uk21908;
output                                xlc840;
output                                nr64207;
output                                uk2103f;
output                                an81f9;
output                                hb40fcc;
output                                kd7f9f8;
output                                hbfcfc4;
output                                mre7e27;
output                                ng3f13d;
output                                pu11020;
output                                co88103;
output  [`ddr3_ipcore_ROW_WIDTH-1:0]              wl3c7e9;
output  [`ddr3_ipcore_COL_WIDTH-1:0]              mrccf1f;
output  [2:0]                         ay678fd;
output  [`ddr3_ipcore_CS_WIDTH-1:0]               hbf99e3;
output                                ipf89eb;
output                                jr3d74f;
output                                mg1fa67;
output                                wjd3f3b;
output                                kf7e67;
output  [4:0]                         do3f33c;
output                                wje776f;
output                                ks3bb7c;
output  [2:0]                         zxe3f4c;
output                                kdfd339;
output                                hbe99cc;
output                                yk4ce66;
output                                su67331;
output                                gd39988;
output                                enccc45;
output                                xweba7e;
output                                by5d3f3;
output                                ble9f9b;
output                                fn4fcde;
output                                mg31eb3;
output                                wl8f599;
output  [`ddr3_ipcore_ROW_WIDTH-1:0]              cz6a07f;
output  [`ddr3_ipcore_COL_WIDTH-1:0]              pf45a81;
output  [2:0]                         xl2d40f;
output  [`ddr3_ipcore_CS_WIDTH-1:0]               uk88b50;
output                                vv7e6f6;
output                                wwdedff;
output                                ph81fe7;
output                                co215d7;
output                                ps6622d;
output  [4:0]                         gq3116a;
output                                phbae42;
output                                vvd7216;
output  [2:0]                         nr503fc;
output                          zk42d86;
output                          vx16c32;
output  [3:0]                         oh90743;
output                                ukff3f;
output reg [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]   tw865cf;
input  [5:0]	db32e7b;
output [`ddr3_ipcore_ROW_WIDTH-1:0]	wy973de;

`define ddr3_ipcore_CDL_READ 4'b0001

`define ddr3_ipcore_CDL_WRITE 4'b0010

`define ddr3_ipcore_CDL_READA 4'b0011

`define ddr3_ipcore_CDL_WRITEA 4'b0100

`define ddr3_ipcore_PWRDN_ENTRY 4'b0101

`define ddr3_ipcore_LOAD_MR 4'b0110

`define ddr3_ipcore_SEFL_REF_ENTRY 4'b1000

`define ddr3_ipcore_SEFL_REF_EXIT 4'b1001

`define ddr3_ipcore_PWRDN_EXIT 4'b1011

`define ddr3_ipcore_ZQ_CAL_LONG 4'b1100

`define ddr3_ipcore_ZQ_CAL_SHORT 4'b1101

`define ddr3_ipcore_USER_ACTIVE 4'b1110

`define ddr3_ipcore_INT_BANK 8

`define ddr3_ipcore_AR_CNT 4'd8

`define ddr3_ipcore_WORST_CMD_SEQ_CLK 16'd320    //To be adjusted for DDR3

`ifdef ddr3_ipcore_AR_BURST_8

`define ddr3_ipcore_TREFI_ADJUST ((`ddr3_ipcore_WORST_CMD_SEQ_CLK / 16'h8) )

`else

`ifdef ddr3_ipcore_AR_BURST_1

`define ddr3_ipcore_TREFI_ADJUST `ddr3_ipcore_WORST_CMD_SEQ_CLK 

`else

`define ddr3_ipcore_TREFI_ADJUST ((`ddr3_ipcore_WORST_CMD_SEQ_CLK / `ddr3_ipcore_AR_BURST_EN) )

`endif

`endif
parameter lsa829f   = 1'b0;
parameter kd414fb   = 1'b1;
reg                     coa7dc;
reg   [3:0]             yk53ee1 ;
reg   [3:0]             yz9f709 ;
reg   [3:0]             xwfb84c ;
reg   [`ddr3_ipcore_ADDR_WIDTH-1:0] gbdc262;
reg   [`ddr3_ipcore_ADDR_WIDTH-1:0] nee1315;
reg   [4:0]             xl98ab ;
reg   [4:0]             kq4c55f ;
wire  [5:0]             go62af8 ;
reg                     qi157c1;
reg                     mtabe09;
reg                     cmd_rdy ;
reg                     do11565;
reg                     eac1374;
reg                     jr9ba0;
reg   [3:0]             dm4dd07 ;
reg   [2:0]             qgc43c2;
reg   [2:0]             vv741df;
reg                     go5cc29;
reg                     lde6148;
reg                     ba30a46;
reg                     rgdfda8;
reg   [`ddr3_ipcore_ROW_WIDTH-1:0]  wl3c7e9;
reg   [`ddr3_ipcore_COL_WIDTH-1:0]  mrccf1f;
reg   [2:0]             ay678fd;
reg   [`ddr3_ipcore_CS_WIDTH-1:0]   hbf99e3;
reg   [4:0]             do3f33c;
reg                     wje776f;
reg                     ks3bb7c;
reg   [2:0]             zxe3f4c;
reg   [`ddr3_ipcore_ROW_WIDTH-1:0]  cz6a07f;
reg   [`ddr3_ipcore_COL_WIDTH-1:0]  pf45a81;
reg   [2:0]             xl2d40f;
reg   [`ddr3_ipcore_CS_WIDTH-1:0]   uk88b50;
reg   [4:0]             gq3116a;
reg                     phbae42;
reg                     vvd7216;
reg   [2:0]             nr503fc;
reg   [`ddr3_ipcore_CS_WIDTH-1:0]   eaea623;
reg                     uk21908;
reg                     kdfd339;
reg                     ykc4600;
reg                     mt23000;
wire  [2:0]             kf18004;
reg                     nr64207;
reg                     xlc840;
reg                     hb40fcc;
reg                     an81f9;
reg                     kf7e67;
reg                     mre7e27;
reg                     ng3f13d;
reg                     kd7f9f8;
reg                     hbfcfc4;
reg                     pu11020;
reg                     co88103;
reg                     ipf89eb;
reg                     jr3d74f;
reg                     mg1fa67;
reg                     wjd3f3b ;
reg                    zk42d86 ;
reg                     yk4ce66;
reg                     hbe99cc;
reg                     enccc45;
reg                     gd39988;
reg                     ps6622d;
reg                     ble9f9b;
reg                     fn4fcde;
reg                     xweba7e;
reg                     by5d3f3;
reg                     mg31eb3;
reg                     wl8f599;
reg                     vv7e6f6;
reg                     wwdedff;
reg                     ph81fe7;
reg                     co215d7 ;
reg                    vx16c32 ;
reg                     qi98457;
reg                     rtc22b9;
reg                     ls115cf;
reg                     yz8ae7b;
reg                     ps573dc;
reg                     ymb9ee2;
reg                     rgcf711;
reg                     rt7b88b;
reg                     kddc45e;
reg                     uve22f5;
reg                     vk117ac;
reg                bn8bd63;
reg                     of5eb1e;
reg                     ykf58f5;
reg                     mgac7a9;
reg                     rg63d49;
reg                     ba1ea4b;
reg                     ykf525b;
reg                     iea92d8;
reg                     kq496c1;
reg                     ip4b608;
reg                     wj5b045;
reg                     jpd822c;
reg                kqc1167;
wire                    ep8b38;
wire                    rt459c5;
wire                    mt2ce2f;
wire                    me6717c;
wire                    lf38be0;
wire                    rgc5f07;
wire                    zx5595c;
wire                    aaacae6;
reg   [1:0]             wwe0eda;
reg   [3:0]             mt8ab2b;
reg   [3:0]             wy3b685;
reg   [1:0]             wj65730;
reg   [2:0]             ou2b985;
reg   [2:0]             ned0a42;
reg                     kf85212 ;
reg   [2:0]             ep29094;
reg   [1:0]             fa484a5;
reg   [3:0]             tu4252a;
reg   [1:0]             cb12953;
reg   [2:0]             fp94a9d;
reg                     zza54ee;
reg                     ng2a777;
reg                     ui53bba;
reg                     qi9ddd1 ;
reg                     lqeee88;
reg                     ic77443;
wire                    mt85233;
wire                    med10cf;
wire                    ec88679;
wire                    kq433c8;
wire                    jr19e41;
wire                    hocf20e;
wire                    ne79073;
wire                    fnc839a;
wire                    uv41cd6;
wire                    sref_ext_cmd;
wire                    dm735ab;
wire                    cb9ad5b;
wire                    ipd6add;
wire  [`ddr3_ipcore_BSIZE-1:0]      xje3b83;
wire  [`ddr3_ipcore_BSIZE-1:0]      irab76e;
wire  [`ddr3_ipcore_BSIZE-1:0]      ip5bb74;
wire  [3:0]             fnddba5;
wire  [3:0]             czedd2e;
wire                    nr6e974;
reg   [`ddr3_ipcore_BSIZE-1:0]      bl74ba7;
reg                     nta5d3f ;
reg                     qi2e9fe ;
reg                     zx74ff1 ;
reg                     vka7f8f  ;

`ifdef ddr3_ipcore_EXT_AUTO_REF
reg                     hq3fc7b;

`else
reg   [15:0]            hofe3da;
reg                     lqf1ed3;
reg                     oh8f69b;
reg                     th7b4dd;
reg                     dmda6ef;
reg   [15:0]            mrd377a ;
reg   [ 3:0]            db9bbd4;

`endif
reg   [ 3:0]            oh90743;
reg                     ukff3f;
reg                     kd7a9f0;
reg                     ead4f84;
reg                     pua7c20;
reg                     ks3e103;
reg                     icf0819;
reg                     rv840c9;
reg                     hq2064e;
reg                     bn3273;
reg                     ph1939f  ;
reg                     ipc9cff ;
reg                     wj4e7fd ;
reg                     dm73fed;
reg                     yz9ff6a  ;
reg                     ayffb55 ;
reg                     enfdaa8 ;
reg   [1:0]             ofed545;
reg                     ip6aa2d;
reg [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]   nr5516d;
reg [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]   nga8b6f;
reg [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]   xj45b7a;
reg [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]   jr2dbd7;
reg [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]   os6debe;
reg                     en6f5f0;
reg                     cz7af84 ;
reg [2:0]               vvd7c24;
wire                    anbe127 ;
wire                    gof093d ;
wire                    bn849e9 ;
wire                    mg24f4f ;
reg                     lf27a78 ;
reg                     hd3d3c7 ;
reg                     jpe9e3e ;
reg                     rt4f1f6 ;
reg   [`ddr3_ipcore_ROW_WIDTH-1:0]  os78fb7;
wire  [5:0]             rtc7db9;
wire                    gq3edce;
wire                    blf6e70;
wire                    hqb7386;
wire                    gqb9c33;
wire  [`ddr3_ipcore_ROW_WIDTH-1:0]  cmce199;
wire                    al70cc9;

`ifdef ddr3_ipcore_CS_WIDTH_4
wire                    do8664d;

`else
reg                     do8664d;

`endif
reg                     je9935d;
wire                    mrc9aeb;
wire                    by4d75d;
wire                    pf6baea;
wire                    ps5d757;
wire                    hoebabb;
wire                    dm5d5db;
wire                    oseaedb;
wire                    ho576d9;
reg   [`ddr3_ipcore_ROW_WIDTH-1:0]  ohbb6ca;
wire  [`ddr3_ipcore_ROW_WIDTH-1:0]  osdb655;
wire                    uidb2a8;
wire                    shd9540;
wire                    facaa05;

`ifdef ddr3_ipcore_CS_WIDTH_2
wire                    vv5502a;
reg                     zma8157 ;

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4
wire  [1:0]             vv5502a;
reg   [1:0]             zma8157 ;

`endif
reg                     ba2aef8;
wire                    ho577c3;

`ifdef ddr3_ipcore_EXT_AUTO_REF
wire                    ohbbe1a;

`endif
wire                    lqdf0d4;
wire                    yxf86a2;
reg                     ofc3514;
reg                     mg1a8a5;
wire                    icd4529;
wire                    zma2949;
wire                    ng14a4b;
wire                    lfa525a;
wire                    gd292d7;
wire                    ui496bd;
wire                    kd4b5e8;
wire                    nr5af45;
reg                     thd7a2f;
reg                     jebd17f;
wire                    yxe8bfa;
wire  [`ddr3_ipcore_COL_WIDTH-1:0]  hb45fd4;
wire  [`ddr3_ipcore_COL_WIDTH:0]    je2fea7;
reg                     uv7f53b;
wire                    kqfa9dd;
wire  [2:0]             ead4ee8;
wire  [2:0]             pua7740;
integer                 gq3ba02;
wire bldd010;
reg ale8087;
reg bl4043d;
reg kf21ee;
reg uk2103f;
reg su67331;
reg jr3dd40;
reg byeea07;
reg[`ddr3_ipcore_BSIZE-1:0] ip7503b;
reg[`ddr3_ipcore_ROW_WIDTH-1:0] lsa81dc;

`ifdef ddr3_ipcore_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif
reg    ld40ee3;

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`ifdef ddr3_ipcore_EXT_AUTO_REF

`else

`endif

`ifdef ddr3_ipcore_EXT_AUTO_REF  //----------------------------

`else  //internal auto refresh              

`endif

`ifdef ddr3_ipcore_EXT_AUTO_REF  //

`else              

`endif

`ifdef ddr3_ipcore_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif


genvar qv771f;


`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4


`endif

 



`ifdef ddr3_ipcore_EXT_AUTO_REF


`endif












`define ddr3_ipcore_CDL_READ 4'b0001


`define ddr3_ipcore_CDL_WRITE 4'b0010


`define ddr3_ipcore_CDL_READA 4'b0011


`define ddr3_ipcore_CDL_WRITEA 4'b0100


`define ddr3_ipcore_PWRDN_ENTRY 4'b0101


`define ddr3_ipcore_LOAD_MR 4'b0110


`define ddr3_ipcore_SEFL_REF_ENTRY 4'b1000


`define ddr3_ipcore_SEFL_REF_EXIT 4'b1001



`define ddr3_ipcore_PWRDN_EXIT 4'b1011


`define ddr3_ipcore_ZQ_CAL_LONG 4'b1100


`define ddr3_ipcore_ZQ_CAL_SHORT 4'b1101


`define ddr3_ipcore_USER_ACTIVE 4'b1110


`define ddr3_ipcore_INT_BANK 8


`define ddr3_ipcore_AR_CNT 4'd8









`define ddr3_ipcore_WORST_CMD_SEQ_CLK 16'd320    //To be adjusted for DDR3


`ifdef ddr3_ipcore_AR_BURST_8



`define ddr3_ipcore_TREFI_ADJUST ((`ddr3_ipcore_WORST_CMD_SEQ_CLK / 16'h8) )


`else
 
`ifdef ddr3_ipcore_AR_BURST_1
  
`define ddr3_ipcore_TREFI_ADJUST `ddr3_ipcore_WORST_CMD_SEQ_CLK 
 
`else

  
`define ddr3_ipcore_TREFI_ADJUST ((`ddr3_ipcore_WORST_CMD_SEQ_CLK / `ddr3_ipcore_AR_BURST_EN) )
 
`endif


`endif











`ifdef ddr3_ipcore_EXT_AUTO_REF


`else


`endif



`ifdef ddr3_ipcore_CS_WIDTH_4


`else


`endif



`ifdef ddr3_ipcore_CS_WIDTH_2


`endif


`ifdef ddr3_ipcore_CS_WIDTH_4


`endif


`ifdef ddr3_ipcore_EXT_AUTO_REF


`endif






always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin	jr3dd40 <= 0;	ip7503b <= 0;	lsa81dc <= 0;	byeea07 <= 0;   end   else begin	byeea07 <= mrede21;	jr3dd40 <= byeea07;	ip7503b <= ui7dbc4[`ddr3_ipcore_BSIZE+`ddr3_ipcore_COL_WIDTH-1 : `ddr3_ipcore_COL_WIDTH];	lsa81dc <= ui7dbc4[`ddr3_ipcore_BSIZE+`ddr3_ipcore_COL_WIDTH  +`ddr3_ipcore_ROW_WIDTH-1 : `ddr3_ipcore_COL_WIDTH + `ddr3_ipcore_BSIZE ];  end
end





assign kqfa9dd = ((qi2e9fe && cmd != `ddr3_ipcore_SEFL_REF_EXIT) || (!qi2e9fe && cmd == `ddr3_ipcore_SEFL_REF_EXIT) ||                       (vka7f8f   && cmd != `ddr3_ipcore_PWRDN_EXIT) || (!vka7f8f   && cmd == `ddr3_ipcore_PWRDN_EXIT)) ? 1'b1 : 1'b0;

assign nr5af45 = ( cmd == 4'h0 || cmd == 4'h7 || cmd == 4'ha  || cmd == 4'hf || kqfa9dd )                       ? 1'b1 : 1'b0;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      coa7dc          <= 1'b0;      yk53ee1                <= 4'h0;      yz9f709               <= 4'h0;      xwfb84c              <= 4'h0;      gbdc262               <= {`ddr3_ipcore_ADDR_WIDTH{1'b0}};      nee1315              <= {`ddr3_ipcore_ADDR_WIDTH{1'b0}};      xl98ab      <= 5'b0;      kq4c55f     <= 5'b0;
      ph1939f       <= 1'b0;      ipc9cff      <= 1'b0;      wj4e7fd      <= 1'b0;      eac1374     <= 1'b0;      jr9ba0    <= 1'b0;      dm4dd07       <= `ddr3_ipcore_AR_CNT;   end   else begin      coa7dc          <= cmd_valid & ~nr5af45;      yk53ee1                <= cmd;      yz9f709               <= cmd;      xwfb84c              <= yk53ee1;      gbdc262               <= addr;      nee1315              <= gbdc262;      xl98ab      <= cmd_burst_cnt;      kq4c55f     <= xl98ab;
      ph1939f       <= blf6e70;      ipc9cff      <= blf6e70;      wj4e7fd      <= blf6e70;      eac1374     <= ofly_burst_len;      jr9ba0    <= eac1374;      dm4dd07       <= {~(|(ar_burst_cnt)),ar_burst_cnt};    end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      mtabe09         <= 1'b0;   end   else if (init_start && !mtabe09 & !qi9ddd1) begin      mtabe09         <= 1'b1;   end   else if (uv6affa) begin      mtabe09         <= 1'b0;   end   else      mtabe09         <= mtabe09;
end
assign mt85233             = mtabe09 & ~uv6affa;


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      qi9ddd1      <= 1'b0;   end   else begin      qi9ddd1      <= uv6affa;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      qi157c1          <= 1'b0;   end   else if (!ip6aa2d) begin      qi157c1          <= 1'b0;   end   else begin      qi157c1          <= ~qi157c1;   end
end
assign bldd010 = (yk53ee1 == `ddr3_ipcore_USER_ACTIVE)    ? 1'b1 : 1'b0;
assign kq433c8          = (yk53ee1 == `ddr3_ipcore_CDL_WRITE)      ? 1'b1 : 1'b0;
assign jr19e41          = (yk53ee1 == `ddr3_ipcore_CDL_READ)       ? 1'b1 : 1'b0;
assign hocf20e         = (yk53ee1 == `ddr3_ipcore_CDL_WRITEA)     ? 1'b1 : 1'b0;
assign ne79073         = (yk53ee1 == `ddr3_ipcore_CDL_READA)      ? 1'b1 : 1'b0;
assign fnc839a         = (yk53ee1 == `ddr3_ipcore_LOAD_MR)        ? 1'b1 : 1'b0;
assign uv41cd6        = (yk53ee1 == `ddr3_ipcore_SEFL_REF_ENTRY) ? 1'b1 : 1'b0;
assign sref_ext_cmd    = (yk53ee1 == `ddr3_ipcore_SEFL_REF_EXIT)  ? 1'b1 : 1'b0;
assign dm735ab          = (yk53ee1 == `ddr3_ipcore_PWRDN_ENTRY)    ? 1'b1 : 1'b0;
assign cb9ad5b      = (yk53ee1 == `ddr3_ipcore_PWRDN_EXIT)     ? 1'b1 : 1'b0;
assign ipd6add      = (yk53ee1 == `ddr3_ipcore_ZQ_CAL_LONG || yk53ee1 == `ddr3_ipcore_ZQ_CAL_SHORT )    ? 1'b1 : 1'b0;
assign yxf86a2 = yz9f709[3] & ~yz9f709[2] & yz9f709[0];
assign lqdf0d4  = yk53ee1[3]  & ~yk53ee1[2]  & yk53ee1[0];
assign med10cf = kq433c8 | jr19e41 |  hocf20e | ne79073;
assign ec88679 = ~yz9f709[3] & (~yz9f709[2] | (yz9f709[2] & ~yz9f709[1] & ~yz9f709[0]));
assign xje3b83 = gbdc262[`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE-1:`ddr3_ipcore_COL_WIDTH];  

`ifdef ddr3_ipcore_DIR_SREF_EXT

assign blf6e70  = dm73fed & coa7dc;
assign hqb7386  = yz9ff6a & coa7dc;
assign gqb9c33  = yz9ff6a & coa7dc;

`else

assign blf6e70  = dm73fed & coa7dc &                        (~ofc3514 | lqdf0d4);

assign hqb7386  = yz9ff6a & coa7dc &                        (~ofc3514 | yxf86a2);
assign gqb9c33  = yz9ff6a & coa7dc &                        (~ofc3514 );

`endif



assign  yxe8bfa                 = (wwe0eda == 2'b01)   ?  ofly_burst_len : ~wwe0eda[1] ;
assign  go62af8   = (cmd_burst_cnt == 'd0) ? 6'h20 : cmd_burst_cnt;
assign  hb45fd4            = (yxe8bfa)                  ? go62af8 * 8 : go62af8 * 4;
assign  je2fea7        = addr[`ddr3_ipcore_COL_WIDTH-1: 0] + hb45fd4;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      uv7f53b   <= 1'b0;   else      uv7f53b   <= ((je2fea7[`ddr3_ipcore_COL_WIDTH] == 1'b1) && (go62af8 != 'd1) && (je2fea7[`ddr3_ipcore_COL_WIDTH-2 : 1] != 'd0)) ? 1'b1 : 1'b0;
end

`ifdef ddr3_ipcore_CS_WIDTH_1

assign irab76e  = (uv7f53b) ? pua7740 : xje3b83;

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

assign irab76e  = (uv7f53b) ? {xje3b83[3],pua7740} : xje3b83;

`ifdef ddr3_ipcore_CS_WIDTH_4

assign irab76e  = (uv7f53b) ? {xje3b83[4:3],pua7740} : xje3b83;

`endif


`endif


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ofc3514         <= 1'b0;   end   else if (lqdf0d4 && dm73fed && coa7dc) begin      ofc3514         <= 1'b0;   end
   else if ((dm735ab || uv41cd6) && dm73fed && coa7dc) begin      ofc3514         <= 1'b1;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      nta5d3f           <= 1'b0;      qi2e9fe         <= 1'b0;   end   else if (uv41cd6 & blf6e70) begin      nta5d3f           <= 1'b1;      qi2e9fe         <= 1'b1;   end   else if (sref_ext_cmd & blf6e70) begin      nta5d3f           <= 1'b0;      qi2e9fe         <= 1'b0;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      zx74ff1           <= 1'b0;      vka7f8f         <= 1'b0;   end   else if (dm735ab & blf6e70) begin      zx74ff1           <= 1'b1;      vka7f8f         <= 1'b1;   end   else if (cb9ad5b & blf6e70) begin      zx74ff1           <= 1'b0;      vka7f8f         <= 1'b0;   end
end


assign ead4ee8 = xje3b83[2:0]; 
assign pua7740   = ead4ee8 + 1;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      en6f5f0           <= 1'b0;      ale8087    <= 1'b0;
   end   else begin      en6f5f0           <= med10cf;      ale8087    <= bldd010;
   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      vvd7c24          <= 3'b0;   end
   else if((en6f5f0 || ale8087)&& ph1939f  )   begin      vvd7c24          <=  gbdc262[`ddr3_ipcore_COL_WIDTH+2:`ddr3_ipcore_COL_WIDTH];   end
end


`ifdef ddr3_ipcore_CS_WIDTH_2
    assign vv5502a = gbdc262[`ddr3_ipcore_COL_WIDTH+3];    assign uidb2a8 = (zma8157 == gbdc262[`ddr3_ipcore_COL_WIDTH+3]);

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4
    assign vv5502a = gbdc262[`ddr3_ipcore_COL_WIDTH+4:`ddr3_ipcore_COL_WIDTH+3];    assign uidb2a8 = (zma8157 == gbdc262[`ddr3_ipcore_COL_WIDTH+4:`ddr3_ipcore_COL_WIDTH+3]);

`endif


`ifdef ddr3_ipcore_CS_WIDTH_1


`else

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      zma8157              <= {`ddr3_ipcore_CS_WIDTH/2{1'b0}};   end   else if((en6f5f0 || ale8087)&& blf6e70  )   begin      zma8157              <= vv5502a ;   end
end

`endif






always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      rgdfda8      <= 1'b0;      cz7af84     <= 1'b0;   end   else if (ph1939f) begin      rgdfda8      <= ~rgdfda8;      cz7af84     <= ~cz7af84;   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ba2aef8  <= 1'b0;   end   else if (blf6e70) begin      ba2aef8  <= ~ba2aef8;   end
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      thd7a2f          <= 1'b0;   end   else begin      if (ph1939f && !rgdfda8) begin         thd7a2f      <= (nee1315[`ddr3_ipcore_COL_WIDTH+2:`ddr3_ipcore_COL_WIDTH] == vvd7c24) ? 1'b1 : 1'b0  ;      end   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      jebd17f          <= 1'b0;   end   else begin      if (ph1939f && rgdfda8) begin         jebd17f      <= (nee1315[`ddr3_ipcore_COL_WIDTH+2:`ddr3_ipcore_COL_WIDTH] == vvd7c24) ? 1'b1 : 1'b0  ;      end   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      wl3c7e9             <= {`ddr3_ipcore_ROW_WIDTH{1'b0}};      mrccf1f             <= {`ddr3_ipcore_COL_WIDTH{1'b0}};      ay678fd              <= 3'b0;      hbf99e3               <= {`ddr3_ipcore_CS_WIDTH{1'b0}};      do3f33c          <= 5'b0;      wje776f                <= lsa829f;      ks3bb7c                <= kd414fb;      zxe3f4c              <= 3'h0;            cz6a07f             <= {`ddr3_ipcore_ROW_WIDTH{1'b0}};      pf45a81             <= {`ddr3_ipcore_COL_WIDTH{1'b0}};      xl2d40f              <= 3'b0;      uk88b50               <= {`ddr3_ipcore_CS_WIDTH{1'b0}};      gq3116a          <= 5'b0;      phbae42                <= lsa829f;      vvd7216                <= kd414fb;      nr503fc              <= 3'h0;            wjd3f3b            <= 1'b0;      co215d7            <= 1'b0;
   end   else begin      if (wj4e7fd && !rgdfda8) begin         mrccf1f         <= nee1315[`ddr3_ipcore_COL_WIDTH-1:0];         ay678fd          <= (fnc839a) ? nee1315[18:16] : nee1315[`ddr3_ipcore_COL_WIDTH+2:`ddr3_ipcore_COL_WIDTH];         hbf99e3           <= eaea623;         wl3c7e9         <= nee1315[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_BSIZE+`ddr3_ipcore_COL_WIDTH];                  do3f33c      <= kq4c55f;         wje776f            <= (wwe0eda == 2'b01) ? ~jr9ba0 : wwe0eda[1] ;         ks3bb7c            <= (wwe0eda == 2'b01) ?  jr9ba0 : ~wwe0eda[1] ;                 
`ifdef ddr3_ipcore_CS_WIDTH_1
         wjd3f3b        <= 1'b1;        
`else
         wjd3f3b        <= uidb2a8 & (med10cf || bldd010)   ;        
`endif
         zxe3f4c          <= nee1315[12:10];      end      if (wj4e7fd && rgdfda8) begin         pf45a81         <= nee1315[`ddr3_ipcore_COL_WIDTH-1:0];         xl2d40f          <= (fnc839a) ? nee1315[18:16] : nee1315[`ddr3_ipcore_COL_WIDTH+2:`ddr3_ipcore_COL_WIDTH];         uk88b50           <= eaea623;         cz6a07f         <= nee1315[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE];                  gq3116a      <= kq4c55f;         phbae42            <= (wwe0eda == 2'b01) ? ~jr9ba0 : wwe0eda[1] ;         vvd7216            <= (wwe0eda == 2'b01) ?  jr9ba0 : ~wwe0eda[1] ;                 
`ifdef ddr3_ipcore_CS_WIDTH_1
         co215d7        <= 1'b1;        
`else
         co215d7        <= uidb2a8 & (med10cf || bldd010)  ;        
`endif
         nr503fc          <= nee1315[12:10];      end   end
end


assign mt2ce2f = ipc9cff & (en6f5f0 || ale8087) & ~rgdfda8;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      lf27a78 <= 1'b0;   end   else if (mt2ce2f) begin      lf27a78 <= 1'b1;   end   else if (lq5d84d) begin      lf27a78 <= 1'b0;   end
end
assign anbe127 = mt2ce2f | lf27a78 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      uk21908       <= 1'b0;      mg1fa67      <= 1'b0;   end   else if (lq5d84d) begin      uk21908       <= 1'b0;      mg1fa67      <= 1'b0;   end   else if (anbe127 && facaa05) begin      uk21908       <= 1'b1;      mg1fa67      <= thd7a2f;   end
end


assign me6717c = ipc9cff & (en6f5f0 || ale8087) & rgdfda8;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      hd3d3c7 <= 1'b0;   end   else if (me6717c) begin      hd3d3c7 <= 1'b1;   end   else if (zxec26a) begin      hd3d3c7 <= 1'b0;   end
end

assign gof093d = me6717c | hd3d3c7 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      kdfd339       <= 1'b0;      ph81fe7      <= 1'b0;   end   else if (zxec26a) begin      kdfd339       <= 1'b0;      ph81fe7      <= 1'b0;   end   else if (gof093d && shd9540) begin      kdfd339       <= 1'b1;      ph81fe7      <= jebd17f;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ykc4600       <= 1'b0;      mt23000       <= 1'b0;   end   else begin      ykc4600       <= uk21908;      mt23000       <= kdfd339;   end
end
assign ep8b38 = uk21908 & ~ykc4600;
assign rt459c5 = kdfd339 & ~mt23000;



always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      lqeee88 <= 1'b0;      ic77443 <= 1'b0;   end   else begin      lqeee88 <= ykefacf;      ic77443 <= ic7d679;   end
end


assign lf38be0 = ipc9cff & ~en6f5f0 & ~ale8087 & ~rgdfda8;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      jpe9e3e <= 1'b0;   end   else if (lf38be0) begin      jpe9e3e <= 1'b1;   end   else if (lqeee88) begin      jpe9e3e <= 1'b0;   end
end
assign bn849e9 = lf38be0 | jpe9e3e ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      jr3d74f       <= 1'b0;   end   else if (lqeee88) begin      jr3d74f       <= 1'b0;   end   else if (bn849e9 && facaa05) begin      jr3d74f       <= 1'b1;   end
end


assign rgc5f07 = ipc9cff & ~en6f5f0 & ~ale8087 & rgdfda8;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      rt4f1f6 <= 1'b0;   end   else if (rgc5f07) begin      rt4f1f6 <= 1'b1;   end   else if (ic77443) begin      rt4f1f6 <= 1'b0;   end
end
assign mg24f4f = rgc5f07 | rt4f1f6 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      wwdedff       <= 1'b0;   end   else if (ic77443) begin      wwdedff       <= 1'b0;   end   else if (mg24f4f && shd9540 ) begin      wwdedff       <= 1'b1;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      cmd_rdy         <= 1'b0;      dm73fed       <= 1'b0;      yz9ff6a      <= 1'b0;      ayffb55  <= 1'b0;      enfdaa8 <= 1'b0;   end   else  begin      cmd_rdy       <= by4d75d & ~enfdaa8;
      ayffb55  <= by4d75d & ~enfdaa8;
      enfdaa8 <= by4d75d;      dm73fed       <= ayffb55;      yz9ff6a      <= ayffb55;   end
end







assign shd9540 = (~anbe127  | lq5d84d) & (~bn849e9 | lqeee88);
assign facaa05 = (~gof093d  | zxec26a) & (~mg24f4f | ic77443);

assign ng14a4b = (~lf27a78  | lq5d84d) & (~jpe9e3e | lqeee88);
assign lfa525a = (~hd3d3c7  | zxec26a) & (~rt4f1f6 | ic77443);
assign icd4529  =  pua7c20 | mg1a8a5;
assign zma2949  =  dm73fed & coa7dc & (fnc839a | sref_ext_cmd | cb9ad5b | ipd6add);
assign ho577c3 = lq5d84d | zxec26a | ykefacf | ic7d679;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ld40ee3           <= 1'b0;   end   else begin      ld40ee3           <= ho577c3;   end
end
assign by4d75d = (((qi157c1 & ~ld40ee3) | ho577c3) & ~icd4529 & ~zma2949 &                      ((~ba2aef8 & ~hqb7386 & ng14a4b)   |               (~ba2aef8 &  hqb7386 & lfa525a)   |               ( ba2aef8 & ~hqb7386 & lfa525a)   |                       ( ba2aef8 &  hqb7386 & ng14a4b)                      ));
always @(negedge rst_n or posedge clk) begin   if (!rst_n)      mg1a8a5     <= 1'b0;   else if (blf6e70 && (fnc839a || ipd6add || sref_ext_cmd || cb9ad5b))      mg1a8a5     <= 1'b1;   else if (ntbfeab || xwd5788 || th61357 || fa4d5ff)      mg1a8a5     <= 1'b0;
end




`ifdef ddr3_ipcore_CS_WIDTH_1

always @ (xje3b83) begin   eaea623[0] = 0;
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

always @ (xje3b83) begin   eaea623 = 2'h3;   case (xje3b83[3])        1'b0 : eaea623[0] = 0;      1'b1 : eaea623[1] = 0;   endcase
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4

always @ (xje3b83) begin   eaea623 = 4'hf;   case (xje3b83[4:3])        2'b00 : eaea623[0] = 0;      2'b01 : eaea623[1] = 0;      2'b10 : eaea623[2] = 0;      2'b11 : eaea623[3] = 0;   endcase
end

`endif








always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        wwe0eda            <= 2'b0;        do11565           <= 1'b0;        wy3b685         <= 4'h0;        vv741df            <= 3'b0;        wj65730           <= 2'b0;        ned0a42      <= 3'b0;        go5cc29         <= 1'b0;        lde6148              <= 1'b0;        ba30a46          <= 1'b0;        ep29094         <= 3'b0;        fa484a5        <= 2'b0;        kf85212       <= 1'b0;        tu4252a      <= 4'b0;        cb12953       <= 2'b0;        fp94a9d   <= 3'b0;        zza54ee     <= 1'b0;        ng2a777          <= 1'b0;        ui53bba      <= 1'b0;
    end    else if (mt85233) begin        wwe0eda            <= lq52011[1:0];        do11565           <= lq52011[3];        wy3b685         <= {lq52011[6:4],lq52011[2]};        vv741df            <= lq52011[11:9];        wj65730           <= ux9008a[4:3];          ned0a42      <= sj80455[5:3];        go5cc29         <= lq52011[12];        lde6148              <= ux9008a[9]  | ux9008a[6] | ux9008a[2];        ba30a46          <= sj80455[10] | sj80455[9];        ep29094         <= 3'b001;                  fa484a5        <= 2'b00;                   kf85212       <= 1'b0;                    tu4252a      <= 4'b0010;        cb12953       <= 2'b00;                   fp94a9d   <= 3'b000;                  zza54ee     <= 1'b0;        ng2a777          <= 1'b0;        ui53bba      <= 1'b0;
    end    else begin                 if ((yk53ee1 == `ddr3_ipcore_LOAD_MR) && blf6e70 && (gbdc262[17:16] == 2'b00)) begin            fa484a5    <= gbdc262[1:0];            kf85212   <= gbdc262[3];            tu4252a  <= {gbdc262[6:4],gbdc262[2]};            ep29094     <= gbdc262[11:9];            zza54ee <= gbdc262[12];         end
         if ((yk53ee1 == `ddr3_ipcore_LOAD_MR) && blf6e70 && (gbdc262[17:16] == 2'b01)) begin            cb12953   <= gbdc262[4:3];            ng2a777      <= gbdc262[9] | gbdc262[6] | gbdc262[2];         end     if ((yk53ee1 == `ddr3_ipcore_LOAD_MR) && blf6e70 && (gbdc262[17:16] == 2'b10)) begin            fp94a9d <= gbdc262[5:3];            ui53bba    <= gbdc262[10] | gbdc262[9];         end         if (ntbfeab && (ofed545 == 2'b00)) begin            wwe0eda        <= fa484a5;            do11565       <= kf85212;            wy3b685     <= tu4252a;            vv741df        <= ep29094;            go5cc29     <= mrc9aeb | zza54ee;         end         if (ntbfeab && (ofed545 == 2'b01)) begin            wj65730       <= cb12953;            lde6148          <= ng2a777;         end         if (ntbfeab && (ofed545 == 2'b10)) begin            ned0a42  <= fp94a9d;            ba30a46      <= ui53bba;         end    end
end

always @(negedge rst_n or posedge clk) begin   if (!rst_n)      ofed545   <= 2'b00;   else if ((yk53ee1 == `ddr3_ipcore_LOAD_MR) && blf6e70)      ofed545   <= gbdc262[17:16];
end
always @ (wy3b685) begin   case (wy3b685)    4'b0010 : mt8ab2b = 4'h3;    4'b0100 : mt8ab2b = 4'h3;    4'b0110 : mt8ab2b = 4'h4;    4'b1000 : mt8ab2b = 4'h4;    4'b1010 : mt8ab2b = 4'h5;    4'b1100 : mt8ab2b = 4'h5;    default : mt8ab2b = 4'h3;   endcase
end
assign zx5595c = wy3b685[1];
always @ (vv741df) begin   case (vv741df)    3'b001 : qgc43c2 = 4'h3;    3'b010 : qgc43c2 = 4'h3;    3'b011 : qgc43c2 = 4'h4;    3'b100 : qgc43c2 = 4'h4;    3'b101 : qgc43c2 = 4'h5;    3'b110 : qgc43c2 = 4'h6;    default: qgc43c2 = 4'h3;   endcase
end
always @ (ned0a42) begin   case (ned0a42)    3'b000 : ou2b985 = 3'h3;    3'b001 : ou2b985 = 3'h3;    3'b010 : ou2b985 = 3'h4;    3'b011 : ou2b985 = 3'h4;    default: ou2b985 = 3'h3;   endcase
end
assign aaacae6 = ~ned0a42[0];




assign fnddba5 = (ipc9cff && !cz7af84) ? xwfb84c : 4'h0 ;
always @ (fnddba5) begin    qi98457              = 0;    rtc22b9             = 0;    ls115cf        = 0;    yz8ae7b        = 0;    ps573dc      = 0;    ymb9ee2      = 0;    kddc45e          = 0;    uve22f5               = 0;    rgcf711       = 0;    rt7b88b      = 0;    vk117ac        = 0;    bl4043d       = 0;    case (fnddba5)  	`ddr3_ipcore_USER_ACTIVE: begin	bl4043d = 1;            bn8bd63      = 0;	end        `ddr3_ipcore_CDL_READ   : begin                         qi98457      = 1;            bn8bd63    = 0;        end        `ddr3_ipcore_CDL_READA  : begin                         kddc45e  = 1;            qi98457      = 1;            bn8bd63    = 0;        end        `ddr3_ipcore_CDL_WRITE  : begin                         rtc22b9     = 1;            bn8bd63    = 0;        end        `ddr3_ipcore_LOAD_MR : begin                            uve22f5       = 1;            vk117ac= 1;            bn8bd63    = 0;        end        `ddr3_ipcore_CDL_WRITEA : begin                         kddc45e  = 1;            rtc22b9     = 1;            bn8bd63    = 0;        end        `ddr3_ipcore_SEFL_REF_ENTRY : begin                     ps573dc  = 1;            vk117ac    = 1;            bn8bd63        = 0;        end	`ddr3_ipcore_SEFL_REF_EXIT : begin                      ymb9ee2  = 1;            vk117ac    = 1;            bn8bd63        = 0;        end        `ddr3_ipcore_PWRDN_ENTRY  : begin                       ls115cf    = 1;            vk117ac    = 1;            bn8bd63        = 0;        end        `ddr3_ipcore_PWRDN_EXIT  : begin                         yz8ae7b    = 1;            vk117ac    = 1;            bn8bd63        = 0;        end        `ddr3_ipcore_ZQ_CAL_LONG : begin                         rgcf711   = 1;            vk117ac    = 1;            bn8bd63        = 0;        end        `ddr3_ipcore_ZQ_CAL_SHORT : begin                        rt7b88b  = 1;            vk117ac    = 1;            bn8bd63        = 0;        end        default : begin  bl4043d   = 0;            qi98457          = 0;            rtc22b9         = 0;            ls115cf    = 0;            yz8ae7b    = 0;            ps573dc  = 0;            ymb9ee2  = 0;            kddc45e      = 0;            uve22f5           = 0;            vk117ac    = 0;            rgcf711   = 0;            rt7b88b  = 0;            bn8bd63        = 1;        end    endcase
end





assign czedd2e = (ipc9cff && cz7af84) ? xwfb84c : 4'h0 ;
always @ (czedd2e) begin    of5eb1e              = 0;    ykf58f5             = 0;    mgac7a9        = 0;    rg63d49        = 0;    ba1ea4b      = 0;    ykf525b      = 0;    ip4b608          = 0;    wj5b045               = 0;    iea92d8       = 0;    kq496c1      = 0;    jpd822c        = 0;    kf21ee       = 0;    case (czedd2e)  	`ddr3_ipcore_USER_ACTIVE: begin	kf21ee = 1;            kqc1167      = 0;	end        `ddr3_ipcore_CDL_READ   : begin                         of5eb1e      = 1;            kqc1167    = 0;        end        `ddr3_ipcore_CDL_READA  : begin                         ip4b608  = 1;            of5eb1e      = 1;            kqc1167    = 0;        end        `ddr3_ipcore_CDL_WRITE  : begin                         ykf58f5     = 1;            kqc1167    = 0;        end        `ddr3_ipcore_LOAD_MR : begin                            wj5b045       = 1;            jpd822c= 1;            kqc1167    = 0;        end        `ddr3_ipcore_CDL_WRITEA : begin                         ip4b608  = 1;            ykf58f5     = 1;            kqc1167    = 0;        end        `ddr3_ipcore_SEFL_REF_ENTRY : begin                     ba1ea4b  = 1;            jpd822c    = 1;            kqc1167        = 0;        end	`ddr3_ipcore_SEFL_REF_EXIT : begin                          ykf525b  = 1;            jpd822c    = 1;            kqc1167        = 0;        end        `ddr3_ipcore_PWRDN_ENTRY  : begin                       mgac7a9    = 1;            jpd822c    = 1;            kqc1167        = 0;        end        `ddr3_ipcore_PWRDN_EXIT  : begin                        rg63d49    = 1;            jpd822c    = 1;            kqc1167        = 0;        end        `ddr3_ipcore_ZQ_CAL_LONG : begin                        iea92d8   = 1;            jpd822c    = 1;            kqc1167        = 0;        end        `ddr3_ipcore_ZQ_CAL_SHORT : begin                       kq496c1  = 1;            jpd822c    = 1;            kqc1167        = 0;        end        default : begin	kf21ee   = 0;            of5eb1e          = 0;            ykf58f5         = 0;            mgac7a9    = 0;            rg63d49    = 0;            ba1ea4b  = 0;            ykf525b  = 0;            ip4b608      = 0;            wj5b045           = 0;            jpd822c    = 0;            iea92d8   = 0;            kq496c1  = 0;            kqc1167        = 1;        end    endcase
end



always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        hb40fcc               <= 1'b0;        an81f9              <= 1'b0;        kf7e67           <= 1'b0;        mre7e27         <= 1'b0;        ng3f13d         <= 1'b0;        kd7f9f8       <= 1'b0;        hbfcfc4       <= 1'b0;        pu11020        <= 1'b0;        co88103       <= 1'b0;        ipf89eb                <= 1'b0;        zk42d86             <= 1'b0;        uk2103f        <= 1'b0;    end    else if (ipc9cff && !cz7af84)begin        hb40fcc               <= qi98457;        an81f9              <= rtc22b9;        kf7e67           <= kddc45e;        mre7e27         <= ls115cf;        ng3f13d         <= yz8ae7b;        kd7f9f8       <= ps573dc;        hbfcfc4       <= ymb9ee2;        pu11020        <= rgcf711;        co88103       <= rt7b88b;        ipf89eb                <= uve22f5;        zk42d86             <= bn8bd63 ;        uk2103f        <= bl4043d;    end
end
always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        enccc45               <= 1'b0;        gd39988              <= 1'b0;        ps6622d           <= 1'b0;        ble9f9b         <= 1'b0;        fn4fcde         <= 1'b0;        xweba7e       <= 1'b0;        by5d3f3       <= 1'b0;        mg31eb3        <= 1'b0;        wl8f599       <= 1'b0;        vv7e6f6                <= 1'b0;        vx16c32             <= 1'b0;        su67331        <= 1'b0;    end        else if (ipc9cff && cz7af84) begin        enccc45               <= of5eb1e;        gd39988              <= ykf58f5;        ps6622d           <= ip4b608;        ble9f9b         <= mgac7a9;        fn4fcde         <= rg63d49;        xweba7e       <= ba1ea4b;        by5d3f3       <= ykf525b;        mg31eb3        <= iea92d8;        wl8f599       <= kq496c1;        vv7e6f6                <= wj5b045;        vx16c32             <= kqc1167 ;        su67331        <= kf21ee;    end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ip6aa2d    <= 1'b0;   else if (uv6affa)      ip6aa2d    <= 1'b1;   else if (mt85233)      ip6aa2d    <= 1'b0;   else      ip6aa2d    <= ip6aa2d;
end






















always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      
`ifdef ddr3_ipcore_EXT_AUTO_REF
       hq3fc7b       <= 1'b0;      
`else
       hofe3da          <= 16'b1;       lqf1ed3      <= 1'b0;       oh8f69b    <= 1'b0;       th7b4dd    <= 1'b0;       dmda6ef         <= 1'b0;       mrd377a           <= 16'd0;       db9bbd4       <= `ddr3_ipcore_AR_CNT;      
`endif
       oh90743       <= `ddr3_ipcore_AR_CNT;       ead4f84        <= 1'b0;       pua7c20       <= 1'b0;       kd7a9f0           <= 1'b0;       ks3e103         <= 1'b0;   end   else begin
      ks3e103         <= ((cmff55e | ks3e103)) & ~th61357;      
`ifdef ddr3_ipcore_EXT_AUTO_REF  //----------------------------
       hq3fc7b <= ext_auto_ref;       if (ohbbe1a && !ks3e103) begin          oh90743   <= dm4dd07;          ead4f84    <= 1'b1;       end       else if (dm57fd5) begin          ead4f84     <= 1'b0;       end       else begin          ead4f84    <= ead4f84;       end                       if (ohbbe1a && !ks3e103) begin          pua7c20   <= 1'b1;       end       else if (tj9abf) begin          pua7c20   <= 1'b0;       end       else begin          pua7c20   <= pua7c20;       end
      
`else  //internal auto refresh              
       mrd377a          <= trefi - `ddr3_ipcore_TREFI_ADJUST;
       if (lqf1ed3 || ks3e103 )           hofe3da  <= 16'd1;              else if ( ip6aa2d && !lqf1ed3 && !ks3e103 && !vka7f8f)          hofe3da  <= hofe3da+1;       oh8f69b  <= (hofe3da[7:0]  == mrd377a[7:0]);       th7b4dd  <= (hofe3da[15:8] == {mrd377a[15:8]});       lqf1ed3    <= oh8f69b & th7b4dd;
       if (mtabe09 || dmda6ef  || ks3e103) begin          db9bbd4 <= dm4dd07;       end       else if (lqf1ed3 && !kd7a9f0)          db9bbd4 <= db9bbd4-1;
       if (dm4dd07 == 4'b0001)          dmda6ef   <= lqf1ed3;       else          dmda6ef   <= (db9bbd4 == 4'd1) & lqf1ed3;
       if (dmda6ef && !ks3e103) begin          oh90743   <= dm4dd07;          ead4f84    <= 1'b1;       end       else if (dm57fd5) begin          ead4f84    <= 1'b0;       end       else begin          ead4f84    <= ead4f84;       end       if (dmda6ef && !ks3e103) begin          pua7c20   <= 1'b1;       end       else if (tj9abf) begin          pua7c20   <= 1'b0;       end       else begin          pua7c20   <= pua7c20;       end      
`endif
      kd7a9f0       <= ukff3f;   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ukff3f         <= 1'b0;   else if ((shd9540 && facaa05 && !ayffb55 && !blf6e70 && !ph1939f) && !do99661&& !qg59859)      ukff3f         <= ead4f84;   else if (dm57fd5)      ukff3f         <= 1'b0;   else      ukff3f         <= ukff3f;
end

`ifdef ddr3_ipcore_EXT_AUTO_REF  //
   assign ohbbe1a   = ext_auto_ref & ~hq3fc7b;   assign ext_auto_ref_ack = tj9abf;   assign al70cc9        = ohbbe1a;

`else              
   assign al70cc9        = ukff3f & ~kd7a9f0;

`endif











always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      nr64207         <= 1'b0;      xlc840          <= 1'b0;   end   else begin      if (dm57fd5 && uk21908 && !mg1fa67 ) begin         nr64207         <= 1'b1;         xlc840      <= 1'b0;      end      else if (dm57fd5 && uk21908 && mg1fa67 && !pf6baea ) begin         nr64207         <= 1'b1;         xlc840      <= 1'b1;      end      else if (dm57fd5 && uk21908 && mg1fa67 && pf6baea  && ps6622d) begin         nr64207         <= 1'b1;         xlc840      <= 1'b0;      end      else if (dm57fd5 && uk21908 && mg1fa67 && pf6baea  && !ps6622d) begin         nr64207         <= 1'b0;         xlc840      <= 1'b0;      end      else if (ph1939f && !rgdfda8) begin         xlc840      <= (je9935d & hoebabb) | (~je9935d & kf18004[2]);         nr64207         <= (~je9935d | hoebabb) &                                (qi98457 | rtc22b9);      end   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      yk4ce66         <= 1'b0;      hbe99cc          <= 1'b0;   end   else begin      if (dm57fd5 && kdfd339  && !ph81fe7 ) begin         yk4ce66         <= 1'b1;         hbe99cc      <= 1'b0;      end      else if (dm57fd5 && kdfd339  && ph81fe7 && !ps5d757 ) begin         yk4ce66         <= 1'b1;         hbe99cc      <= 1'b1;      end      else if (dm57fd5 && kdfd339  && ph81fe7 && ps5d757  && kf7e67) begin         yk4ce66         <= 1'b1;         hbe99cc      <= 1'b0;      end      else if (dm57fd5 && kdfd339 && ph81fe7 && ps5d757  && !kf7e67) begin         yk4ce66         <= 1'b0;         hbe99cc      <= 1'b0;      end      else if (ph1939f && rgdfda8) begin         hbe99cc      <= (je9935d & hoebabb) | (~je9935d & kf18004[2]);         yk4ce66         <= (~je9935d | hoebabb) &                                (of5eb1e | ykf58f5);      end   end
end

`ifdef ddr3_ipcore_DIR_SREF_EXT

assign cmce199  = gbdc262[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE];

`else


assign cmce199  = (uv7f53b & blf6e70) ? gbdc262[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE] : (uv7f53b && (xje3b83[2:0] == 3'b111) ) ? gbdc262[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE] + 1 : gbdc262[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE];

`endif



`ifdef ddr3_ipcore_CS_WIDTH_1

assign ip5bb74  = (uv7f53b & blf6e70) ?  xje3b83 : (uv7f53b) ? pua7740 : xje3b83;

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

assign ip5bb74  = (uv7f53b & blf6e70) ?  xje3b83 : (uv7f53b) ? {xje3b83[3],pua7740} : xje3b83;

`ifdef ddr3_ipcore_CS_WIDTH_4

assign ip5bb74  = (uv7f53b & blf6e70) ?  xje3b83 : (uv7f53b) ? {xje3b83[4:3],pua7740} : xje3b83;

`endif


`endif


`ifdef ddr3_ipcore_CS_WIDTH_1
   assign rtc7db9 = {2'b00,ip5bb74};

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2
   assign rtc7db9 = {1'b0,ip5bb74};

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4
   assign rtc7db9 = ip5bb74;

`endif


assign gq3edce = jr3dd40 || ((blf6e70 & (med10cf || bldd010)) | (uv7f53b & ph1939f &  (en6f5f0 || ale8087)));
row_addr_tab_ddr3_ipcore gdd71d (     .RdAddress    (rtc7db9),     .WrAddress    ({jr3dd40}?ip7503b:rtc7db9),     .Data         ({jr3dd40}?lsa81dc:cmce199),     .WrClock      (clk),     .WrClockEn    (gq3edce),     .WE           (1'b1),     .Q            (osdb655)
);
row_addr_tab_ddr3_ipcore pu30a9e (     .RdAddress    (db32e7b),     .WrAddress    ({jr3dd40}?ip7503b:rtc7db9),     .Data         ({jr3dd40}?lsa81dc:cmce199),     .WrClock      (clk),     .WrClockEn    (gq3edce),     .WE           (1'b1),     .Q            (wy973de)
);


 generate   for (qv771f=0; qv771f<8; qv771f=qv771f+1)   begin: mgb30ee    uk98771_ddr3_ipcore wjc3b89 (     .rst_n        (rst_n),     .bl71322     (qv771f[2:0]),     .me4c8b3    (rtc7db9),     .vx22ccf    (rtc7db9),     .cob33fe         (cmce199),     .jccff8a      (clk),     .dmfe294    (gq3edce),     .oh8a51a           (1'b1),     .rg528d5            ()  );  end 
endgenerate

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      os78fb7  <= {`ddr3_ipcore_ROW_WIDTH{1'b0}};   else      os78fb7  <= osdb655;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ohbb6ca  <= {`ddr3_ipcore_ROW_WIDTH{1'b0}};   else      ohbb6ca  <= gbdc262[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_BSIZE+`ddr3_ipcore_COL_WIDTH];
end



assign dm5d5db = |( ohbb6ca[7:0] ^ os78fb7[7:0]) ? 1'b1 : 1'b0;
assign oseaedb = |( ohbb6ca[`ddr3_ipcore_ROW_WIDTH - 1 :8] ^ os78fb7[`ddr3_ipcore_ROW_WIDTH - 1 :8]) ? 1'b1 : 1'b0;
assign hoebabb  = dm5d5db | oseaedb;




assign  kf18004 = 3'b0;
assign pf6baea = ~(~rgdfda8 & hoebabb);
assign ps5d757 = ~( rgdfda8 & hoebabb);





`ifdef ddr3_ipcore_CS_WIDTH_1


always @ (irab76e) begin   xj45b7a = 8'b0;   case (irab76e)        3'b000 : xj45b7a[0] = 1;      3'b001 : xj45b7a[1] = 1;      3'b010 : xj45b7a[2] = 1;      3'b011 : xj45b7a[3] = 1;      3'b100 : xj45b7a[4] = 1;      3'b101 : xj45b7a[5] = 1;      3'b110 : xj45b7a[6] = 1;      3'b111 : xj45b7a[7] = 1;      default : xj45b7a = 8'b0;   endcase
end
always @ (uv7f53b or xje3b83) begin   jr2dbd7 = 8'b0;   case ({uv7f53b,xje3b83})        4'b1000 : jr2dbd7[0] = 1;      4'b1001 : jr2dbd7[1] = 1;      4'b1010 : jr2dbd7[2] = 1;      4'b1011 : jr2dbd7[3] = 1;      4'b1100 : jr2dbd7[4] = 1;      4'b1101 : jr2dbd7[5] = 1;      4'b1110 : jr2dbd7[6] = 1;      4'b1111 : jr2dbd7[7] = 1;      default : jr2dbd7 = 8'b0;   endcase
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

always @ (irab76e) begin   xj45b7a = 16'b0;
   case (irab76e)        4'b0000 : xj45b7a[0] = 1;      4'b0001 : xj45b7a[1] = 1;      4'b0010 : xj45b7a[2] = 1;      4'b0011 : xj45b7a[3] = 1;      4'b0100 : xj45b7a[4] = 1;      4'b0101 : xj45b7a[5] = 1;      4'b0110 : xj45b7a[6] = 1;      4'b0111 : xj45b7a[7] = 1;      4'b1000 : xj45b7a[8] = 1;      4'b1001 : xj45b7a[9] = 1;      4'b1010 : xj45b7a[10] = 1;      4'b1011 : xj45b7a[11] = 1;      4'b1100 : xj45b7a[12] = 1;      4'b1101 : xj45b7a[13] = 1;      4'b1110 : xj45b7a[14] = 1;      4'b1111 : xj45b7a[15] = 1;      default : xj45b7a = 16'b0;   endcase
end
always @ (uv7f53b or xje3b83) begin   jr2dbd7 = 16'b0;   case ({uv7f53b,xje3b83})        5'b10000 : jr2dbd7[0] = 1;      5'b10001 : jr2dbd7[1] = 1;      5'b10010 : jr2dbd7[2] = 1;      5'b10011 : jr2dbd7[3] = 1;      5'b10100 : jr2dbd7[4] = 1;      5'b10101 : jr2dbd7[5] = 1;      5'b10110 : jr2dbd7[6] = 1;      5'b10111 : jr2dbd7[7] = 1;      5'b11000 : jr2dbd7[8] = 1;      5'b11001 : jr2dbd7[9] = 1;      5'b11010 : jr2dbd7[10] = 1;      5'b11011 : jr2dbd7[11] = 1;      5'b11100 : jr2dbd7[12] = 1;      5'b11101 : jr2dbd7[13] = 1;      5'b11110 : jr2dbd7[14] = 1;      5'b11111 : jr2dbd7[15] = 1;      default : jr2dbd7 = 16'b0;   endcase
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4

always @ (irab76e) begin   xj45b7a = 32'b0;   case (irab76e)        5'b00000 : xj45b7a[0] = 1;      5'b00001 : xj45b7a[1] = 1;      5'b00010 : xj45b7a[2] = 1;      5'b00011 : xj45b7a[3] = 1;      5'b00100 : xj45b7a[4] = 1;      5'b00101 : xj45b7a[5] = 1;      5'b00110 : xj45b7a[6] = 1;      5'b00111 : xj45b7a[7] = 1;      5'b01000 : xj45b7a[8] = 1;      5'b01001 : xj45b7a[9] = 1;      5'b01010 : xj45b7a[10] = 1;      5'b01011 : xj45b7a[11] = 1;      5'b01100 : xj45b7a[12] = 1;      5'b01101 : xj45b7a[13] = 1;      5'b01110 : xj45b7a[14] = 1;      5'b01111 : xj45b7a[15] = 1;      5'b10000 : xj45b7a[16] = 1;      5'b10001 : xj45b7a[17] = 1;      5'b10010 : xj45b7a[18] = 1;      5'b10011 : xj45b7a[19] = 1;      5'b10100 : xj45b7a[20] = 1;      5'b10101 : xj45b7a[21] = 1;      5'b10110 : xj45b7a[22] = 1;      5'b10111 : xj45b7a[23] = 1;      5'b11000 : xj45b7a[24] = 1;      5'b11001 : xj45b7a[25] = 1;      5'b11010 : xj45b7a[26] = 1;      5'b11011 : xj45b7a[27] = 1;      5'b11100 : xj45b7a[28] = 1;      5'b11101 : xj45b7a[29] = 1;      5'b11110 : xj45b7a[30] = 1;      5'b11111 : xj45b7a[31] = 1;      default : xj45b7a = 32'b0;   endcase
end

`endif

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      bl74ba7  <= {`ddr3_ipcore_BSIZE{1'b0}};      os6debe   <= {(`ddr3_ipcore_CS_WIDTH*8){1'b0}};   end   else if (ph1939f) begin      bl74ba7  <= xje3b83;      os6debe   <= xj45b7a;   end
end



assign gd292d7 = ~do8664d & kf18004[2] & (ec88679 || bldd010 || jr3dd40);
assign ui496bd  = ~yz9f709[3] & ( (~yz9f709[2] & yz9f709[1] & yz9f709[0]) | (yz9f709[2] & ~yz9f709[1] & ~yz9f709[0]));

assign kd4b5e8 = ~yz9f709[3] & ~yz9f709[2] & ( (~yz9f709[1] & yz9f709[0]) | (yz9f709[1] & ~yz9f709[0])); 

always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        nr5516d        <= {(`ddr3_ipcore_CS_WIDTH*`ddr3_ipcore_INT_BANK)-1{1'b0}};    end    else begin       for (gq3ba02=0; gq3ba02<`ddr3_ipcore_CS_WIDTH*`ddr3_ipcore_INT_BANK; gq3ba02=gq3ba02+1) begin          casex ({gqb9c33 , os6debe[gq3ba02], gd292d7, jr2dbd7[gq3ba02], xj45b7a[gq3ba02], ui496bd, (kd4b5e8 || bldd010)})          7'b111xxxx:   nr5516d[gq3ba02] <= 1'b0;             7'b1x01010:   nr5516d[gq3ba02] <= 1'b0;             7'b1x01001:   nr5516d[gq3ba02] <= 1'b1;             7'b1x00110:   nr5516d[gq3ba02] <= 1'b0;             7'b1x00101:   nr5516d[gq3ba02] <= 1'b1;             7'bxx000xx:   nr5516d[gq3ba02] <= tw865cf[gq3ba02];          default   :   nr5516d[gq3ba02] <= nr5516d[gq3ba02];          endcase       end    end
end



always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      nga8b6f        <= {(`ddr3_ipcore_CS_WIDTH*`ddr3_ipcore_INT_BANK)-1{1'b0}};   end   else begin      if (cmff55e) begin         if (kdfd339 && !ps6622d)            nga8b6f        <= xj45b7a;         else if (uk21908 && !kf7e67)            nga8b6f        <= xj45b7a;         else            nga8b6f    <= {(`ddr3_ipcore_CS_WIDTH*`ddr3_ipcore_INT_BANK){1'b0}};      end   end
end




assign nr6e974 = (ukff3f & ~kd7a9f0) | ((fnc839a | uv41cd6 | ipd6add) & ho576d9);
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      tw865cf           <= {(`ddr3_ipcore_CS_WIDTH*`ddr3_ipcore_INT_BANK)-1{1'b0}};   end   else begin      if (nr6e974)         tw865cf           <= {(`ddr3_ipcore_CS_WIDTH*`ddr3_ipcore_INT_BANK){1'b0}};      else if (cmff55e)         tw865cf	<= nga8b6f;      else if (dm57fd5)                  tw865cf      <=  nga8b6f;             else if (jr3dd40 || (ph1939f & (en6f5f0 || ale8087)))         if(!jr3dd40)  tw865cf      <= nr5516d;         else            tw865cf[ip7503b] <= 1;   end
end
assign mrc9aeb    = |(tw865cf);   
assign ho576d9 = blf6e70;


`ifdef ddr3_ipcore_CS_WIDTH_1

always @ (xje3b83 or tw865cf) begin   case (xje3b83)        3'b000 : do8664d = tw865cf[0];      3'b001 : do8664d = tw865cf[1];      3'b010 : do8664d = tw865cf[2];      3'b011 : do8664d = tw865cf[3];      3'b100 : do8664d = tw865cf[4];      3'b101 : do8664d = tw865cf[5];      3'b110 : do8664d = tw865cf[6];      3'b111 : do8664d = tw865cf[7];      default: do8664d = 1'b0;   endcase
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

always @ (xje3b83 or tw865cf) begin
   case (xje3b83)        4'b0000 : do8664d = tw865cf[0];      4'b0001 : do8664d = tw865cf[1];      4'b0010 : do8664d = tw865cf[2];      4'b0011 : do8664d = tw865cf[3];      4'b0100 : do8664d = tw865cf[4];      4'b0101 : do8664d = tw865cf[5];      4'b0110 : do8664d = tw865cf[6];      4'b0111 : do8664d = tw865cf[7];      4'b1000 : do8664d = tw865cf[8];      4'b1001 : do8664d = tw865cf[9];      4'b1010 : do8664d = tw865cf[10];      4'b1011 : do8664d = tw865cf[11];      4'b1100 : do8664d = tw865cf[12];      4'b1101 : do8664d = tw865cf[13];      4'b1110 : do8664d = tw865cf[14];      4'b1111 : do8664d = tw865cf[15];      default : do8664d = 1'b0;   endcase
end

`endif



`ifdef ddr3_ipcore_CS_WIDTH_4

MUX321_ddr3_ipcore sh54d72(	.D0  (tw865cf[0]),    .D1  (tw865cf[1]),    .D2  (tw865cf[2]),    .D3  (tw865cf[3]),        .D4  (tw865cf[4]),    .D5  (tw865cf[5]),    .D6  (tw865cf[6]),    .D7  (tw865cf[7]),        .D8  (tw865cf[8]),    .D9  (tw865cf[9]),    .D10 (tw865cf[10]),   .D11 (tw865cf[11]),        .D12 (tw865cf[12]),   .D13 (tw865cf[13]),   .D14 (tw865cf[14]),   .D15 (tw865cf[15]),        .D16 (tw865cf[16]),   .D17 (tw865cf[17]),   .D18 (tw865cf[18]),   .D19 (tw865cf[19]),        .D20 (tw865cf[20]),   .D21 (tw865cf[21]),   .D22 (tw865cf[22]),   .D23 (tw865cf[23]),        .D24 (tw865cf[24]),   .D25 (tw865cf[25]),   .D26 (tw865cf[26]),   .D27 (tw865cf[27]),        .D28 (tw865cf[28]),   .D29 (tw865cf[29]),   .D30 (tw865cf[30]),   .D31 (tw865cf[31]),        .SD1 (xje3b83[0]), .SD2 (xje3b83[1]), .SD3 (xje3b83[2]), .SD4 (xje3b83[3]),	.SD5 (xje3b83[4]), .Z   (do8664d)        );

`endif

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      je9935d  <= 1'b0;   else      je9935d  <= do8664d;
end
endmodule
`timescale 1 ns / 100 ps
module uk98771_ddr3_ipcore (
   input         rst_n,
   input [2:0]   bl71322,
   input   [5:0]  vx22ccf,
   input   [5:0]  me4c8b3,
   input   [`ddr3_ipcore_ROW_WIDTH-1:0]  cob33fe,
   input   jccff8a,
   input   dmfe294,
   input   oh8a51a,
   output  [`ddr3_ipcore_ROW_WIDTH-1:0]  rg528d5
);
reg  [`ddr3_ipcore_ROW_WIDTH-1:0]  tu69315;

always @ (posedge jccff8a or negedge rst_n) begin   if (!rst_n)      tu69315  <= {`ddr3_ipcore_ROW_WIDTH{1'b0}};   else if (dmfe294 && (bl71322 == vx22ccf))      tu69315  <= cob33fe;
end
assign rg528d5 = tu69315;
endmodule































`timescale 1 ns / 100 ps
module doe9c6_ddr3_ipcore (

   clk,
   rst_n,
   rtf6a57,
   alc65d7, 
   hd32ebd, 
   vxaa67b,
   dm48595,
   rib2a96,
   ngbdc37,
   hoee1bb, 
   al70dda, 
   do86ed5, 
   bn376aa,
   mtbb557,
   zkdaabd,
   jcd55eb,
   jraaf5b,
   tu57adf,  
   jebd6fb,
   xweb7da,
   yx5bed2,   
   ng358f2, 
   dzd7927, 
   tuda553,
   epb1e42,
   oh39435,
   zzaa6bd,  
   me535ee,
   nr5aa99,

   rgd54cf ,
   hqbdc2f ,
   jcfe692 ,
   cb9a49f  ,
   an85ed5 ,
   tja0e50 ,
   oh7286 ,
   rgdab57 ,
   fc2516f ,
   lsad5da,
   kd6aed3,
   by5769d ,
   sjbb4ea ,
   sja4d7c,
   ald3aaa,
   mg9d555
   );
input              rtf6a57;
input              clk;
input              rst_n;
input              alc65d7;
input              hd32ebd;
input              vxaa67b;
input              dm48595;
input              rib2a96;
input              ngbdc37;
input              hoee1bb;
input              al70dda;
input              do86ed5;
input              bn376aa;
input              mtbb557;
input              zkdaabd;
input              jcd55eb;
input              jebd6fb;
input              jraaf5b;
input              xweb7da;
input              tu57adf;
input              yx5bed2;
input              ng358f2 ;
input              dzd7927;
input              tuda553;
input [`ddr3_ipcore_AL_WIDTH-1:0] epb1e42;
input              oh39435;
input              zzaa6bd;
input              me535ee;
input              nr5aa99;
output             rgd54cf ;
output             hqbdc2f ;
output             jcfe692 ;
output             cb9a49f  ;
output             an85ed5 ;
output             tja0e50 ;
output             oh7286 ;
output             rgdab57 ;
output             fc2516f ;
output             lsad5da;
output             kd6aed3;
output             by5769d ;
output             sjbb4ea;
output             sja4d7c;
output             ald3aaa;
output             mg9d555;

`define ddr3_ipcore_IDLE 0 // 001 

`define ddr3_ipcore_NOP_C 1 // 002

`define ddr3_ipcore_PRE 2 // 004

`define ddr3_ipcore_PRE_WAIT 3 // 008

`define ddr3_ipcore_ACT 4 // 010

`define ddr3_ipcore_ACT_WAIT 5 // 020

`define ddr3_ipcore_WR 6 // 040

`define ddr3_ipcore_RD 7 // 080

`define ddr3_ipcore_RDW 8 // 100

`define ddr3_ipcore_WRW 9 // 200

`define ddr3_ipcore_USER_ACT 10
wire                rtf6a57;
wire                clk;
wire                rst_n;
wire [`ddr3_ipcore_AL_WIDTH-1:0] epb1e42;
reg  [10:0]          vv5f165, alf8b2e;
reg                 hqbdc2f, kf2cbab ;
reg                 jcfe692, aa2eae4 ;
reg                 cb9a49f, anab90c  ;
reg                 yk5c865, xwe4328  ;
reg                 an85ed5, ntca18;
reg                 tja0e50, zz2863d ;
reg                 qg431ef, ep18f79 ;
reg                 oh7286, ph3de66 ;
reg                 rgdab57 ;
reg                 ps799b8, yxccdc3 ;
reg                 fc2516f, tj370eb ;
reg                 zmb875f, wjc3afa ;
reg                 lsad5da, lqebea5;
reg                 by5769d, wwfa95e ;
reg                 sjbb4ea, fpa5780;
reg                 ald3aaa, mr5e039;
reg                 kd6aed3, gd80e60;
reg                 rgd54cf, wl3982d;
reg                 mg9d555, wj60b6c;
reg                 sja4d7c, jr2db21;
reg                 os6d90e;
reg                 dm6c870;
reg                 vv64382;
reg                 gq21c17;
reg                 nge0b8;
reg                 kd705c3;
reg                 aa82e1c;
reg                 cb170e0;
reg                 zmb8704;
reg                 wjc3822;
reg                 xl1c114, sue08a7;
reg                 fc4538;
wire                rv229c2;
reg                 ba14e17;
reg                 ria70ba;
reg                 zz385d2;
reg                 xjc2e96;
reg                 ep174b6;
wire                rvba5b4;
reg pfd2da7;




 

 



`define ddr3_ipcore_IDLE 0 // 001 


`define ddr3_ipcore_NOP_C 1 // 002


`define ddr3_ipcore_PRE 2 // 004


`define ddr3_ipcore_PRE_WAIT 3 // 008


`define ddr3_ipcore_ACT 4 // 010


`define ddr3_ipcore_ACT_WAIT 5 // 020


`define ddr3_ipcore_WR 6 // 040


`define ddr3_ipcore_RD 7 // 080


`define ddr3_ipcore_RDW 8 // 100


`define ddr3_ipcore_WRW 9 // 200


`define ddr3_ipcore_USER_ACT 10





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      pfd2da7 <= 1'b0;   else      pfd2da7  <= hd32ebd;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      zz385d2        <=  'b0 ;      xjc2e96        <=  'b0 ;      ep174b6        <=  'b0 ;   end   else begin      zz385d2        <=  kd6aed3 ;      xjc2e96        <=  zz385d2 ;      ep174b6        <=  xjc2e96 ;   end
end

assign rvba5b4  = xjc2e96 & ~ep174b6;

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      fc4538 <= 1'b0;   end   else if (hd32ebd || vxaa67b || rvba5b4) begin      fc4538  <= me535ee;   end
end


assign #0.1 rv229c2    = ~((me535ee ^ fc4538) & ~gd80e60);

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      os6d90e   <=  1'b0;   else if (jcd55eb && jcfe692)      os6d90e   <=  1'b1;
   else if (zmb875f || hqbdc2f|| yk5c865 || ps799b8 || tja0e50)      os6d90e   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wjc3822   <=  1'b0;   else if (jebd6fb && jcfe692)      wjc3822   <=  1'b1;
   else if (zmb875f || hqbdc2f || yk5c865 || qg431ef || oh7286)      wjc3822   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vv64382   <=  1'b0;   else if (rib2a96)      vv64382   <=  1'b1;   else if (ps799b8 || hqbdc2f)      vv64382   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      gq21c17   <=  1'b0;   else if (hd32ebd || vxaa67b)      gq21c17   <=  1'b1;   else if (yk5c865 || hqbdc2f)      gq21c17   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      nge0b8   <=  1'b0;   else if (dm48595)      nge0b8   <=  1'b1;   else if (qg431ef || hqbdc2f)      nge0b8   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kd705c3   <=  1'b0;   else if (alc65d7)      kd705c3   <=  1'b1;   else if (zmb875f || hqbdc2f)      kd705c3   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      dm6c870   <=  1'b0;   else if (dzd7927 )      dm6c870   <=  1'b1;   else      dm6c870   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      aa82e1c   <=  1'b0;   else if (mtbb557)      aa82e1c   <=  1'b1;   else if (yk5c865 || hqbdc2f)      aa82e1c   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      cb170e0   <=  1'b0;   else if (al70dda)      cb170e0   <=  1'b1;   else if (yk5c865)      cb170e0   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zmb8704   <=  1'b0;   else if (do86ed5)      zmb8704   <=  1'b1;   else if (zmb875f || yk5c865)      zmb8704   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ba14e17   <=  1'b0;   else if (nr5aa99 && mr5e039)      ba14e17   <=  1'b1;   else if (!nr5aa99)      ba14e17   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ria70ba   <=  1'b0;   else if (nr5aa99 && wj60b6c)      ria70ba   <=  1'b1;   else if (!nr5aa99)      ria70ba   <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      vv5f165   <=  10'b0;      hqbdc2f           <=  1'b0;      jcfe692            <=  1'b0;      cb9a49f            <=  1'b0;      yk5c865         <=  1'b0;      an85ed5       <=  1'b0;      tja0e50             <=  1'b0;      qg431ef          <=  1'b0;      oh7286             <=  1'b0;      ps799b8          <=  1'b0;      fc2516f            <=  1'b0;      zmb875f         <=  1'b0;      lsad5da       <=  1'b0;      by5769d            <=  1'b0;      sjbb4ea            <=  1'b0;      kd6aed3       <=  1'b0;      rgd54cf <=  1'b0;      ald3aaa        <=  1'b0;      mg9d555        <=  1'b0;      sja4d7c      <=  1'b1;      xl1c114       <=  1'b0;  end  else begin      vv5f165   <=  alf8b2e;      hqbdc2f           <=  kf2cbab;      jcfe692            <=  aa2eae4;      cb9a49f            <=  anab90c;      yk5c865         <=  xwe4328;      an85ed5       <=  ntca18;      tja0e50             <=  zz2863d;      qg431ef          <=  ep18f79;      oh7286             <=  ph3de66;      ps799b8          <=  yxccdc3;      fc2516f            <=  tj370eb;      zmb875f         <=  wjc3afa;      lsad5da       <=  lqebea5;      by5769d            <=  wwfa95e;      sjbb4ea            <=  fpa5780;      ald3aaa        <=  mr5e039;      kd6aed3       <=  gd80e60;      rgd54cf <=  wl3982d;      mg9d555        <=  wj60b6c;      sja4d7c      <=  jr2db21;      xl1c114       <=  sue08a7;  end end





always @ (vv5f165 or rtf6a57 or alc65d7 or hd32ebd  or vxaa67b or wjc3822 or         dm48595 or rib2a96  or ng358f2 or dm6c870 or vv64382         or ngbdc37 or hoee1bb or gq21c17         or bn376aa  or zkdaabd or         jebd6fb or jraaf5b or xweb7da or tu57adf or yx5bed2         or ald3aaa or mg9d555  or tuda553 or nge0b8         or kd705c3 or epb1e42 or oh39435         or os6d90e or aa82e1c or cb170e0         or jcfe692 or hqbdc2f or sja4d7c or lsad5da or an85ed5 or xl1c114 or zmb8704 or do86ed5 or rv229c2 or nr5aa99 or kd6aed3 or rgd54cf or ba14e17 or ria70ba) begin
alf8b2e = 'b0;
ph3de66 = 1'b0;
rgdab57 = 1'b0;
yxccdc3 = 1'b0;
zz2863d = 1'b0;
ep18f79 = 1'b0;
tj370eb = 1'b0;
wjc3afa = 1'b0;
anab90c = 1'b0;
xwe4328 = 1'b0;
wwfa95e = 1'b0;
fpa5780 = 1'b0;
sue08a7 = 1'b0;
aa2eae4 = jcfe692;
kf2cbab = hqbdc2f;
jr2db21 = sja4d7c;
mr5e039 = ald3aaa;
wj60b6c = mg9d555;
gd80e60 = kd6aed3;
wl3982d = rgd54cf;
lqebea5 = lsad5da;
ntca18 = an85ed5;
case (1)        vv5f165[`ddr3_ipcore_IDLE] : begin              kf2cbab = 1'b1;         aa2eae4 = 1'b0;         anab90c  = 1'b0;         xwe4328  = 1'b0;         ntca18=1'b0;         zz2863d = 1'b0;         ep18f79 = 1'b0;         ph3de66 = 1'b0;         rgdab57 = 1'b0;         yxccdc3 = 1'b0;         tj370eb = 1'b0;         wjc3afa = 1'b0;         lqebea5 = 1'b0;         wwfa95e = 1'b0;         fpa5780 = 1'b0;         mr5e039 = 1'b0;         wj60b6c = 1'b0;         gd80e60 = 1'b0;         wl3982d = 1'b0;         jr2db21 = 1'b1;         sue08a7 = 1'b0;         if (rtf6a57) begin              alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;              aa2eae4 = 1'b1;              kf2cbab = 1'b0;              jr2db21 = 1'b0;         end         else alf8b2e[`ddr3_ipcore_IDLE] = 1'b1;      end                         vv5f165[`ddr3_ipcore_NOP_C]: begin            if (alc65d7 || kd705c3 || kd6aed3)  begin              if (ald3aaa && (zkdaabd || os6d90e) ) begin                 alf8b2e[`ddr3_ipcore_PRE] = 1'b1;                 aa2eae4 = 1'b0;                 tj370eb = 1'b1;                 wjc3afa = 1'b1;                 mr5e039 = 1'b0;                 gd80e60 = 1'b0;                 jr2db21 = 1'b0;              end
             else if (mg9d555 && (jebd6fb || wjc3822) && (do86ed5 || zmb8704)) begin                 alf8b2e[`ddr3_ipcore_PRE] = 1'b1;                 aa2eae4 = 1'b0;                 tj370eb = 1'b1;                 wjc3afa = 1'b1;                 wj60b6c = 1'b0;                 gd80e60 = 1'b0;                 jr2db21 = 1'b0;              end              else if (!ald3aaa && !mg9d555 && (do86ed5 || zmb8704)) begin                 alf8b2e[`ddr3_ipcore_PRE] = 1'b1;                 aa2eae4 = 1'b0;                 tj370eb = 1'b1;                 wjc3afa = 1'b1;                 jr2db21 = 1'b0;              end              else begin                alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;                aa2eae4 = 1'b1;              end         end                   else if (hd32ebd || gq21c17) begin
              if (ald3aaa && (jraaf5b || !rv229c2)  && (hoee1bb || cb170e0)) begin

                 alf8b2e[`ddr3_ipcore_ACT] = 1'b1;                 aa2eae4 = 1'b0;                 anab90c = 1'b1;                 xwe4328 = 1'b1;                 mr5e039 = 1'b0;                 jr2db21 = 1'b0;              end
              else if (mg9d555 && (xweb7da || !rv229c2) && (hoee1bb || cb170e0)) begin

                 alf8b2e[`ddr3_ipcore_ACT] = 1'b1;                 aa2eae4 = 1'b0;                 anab90c = 1'b1;                 xwe4328 = 1'b1;                 wj60b6c = 1'b0;                 jr2db21 = 1'b0;              end              else if (!ald3aaa && !mg9d555) begin
                 alf8b2e[`ddr3_ipcore_ACT] = 1'b1;                 aa2eae4 = 1'b0;                 anab90c = 1'b1;                 xwe4328 = 1'b1;                 jr2db21 = 1'b0;              end              else begin                alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;                aa2eae4 = 1'b1;              end        end 
	else if (vxaa67b || gq21c17) begin	  if (ald3aaa && (jraaf5b || !rv229c2)  && (hoee1bb || cb170e0)) begin
			alf8b2e[`ddr3_ipcore_USER_ACT] = 1'b1; aa2eae4 = 1'b0; anab90c = 1'b1; xwe4328 = 1'b1; mr5e039 = 1'b0; jr2db21 = 1'b0;  end	  else if (mg9d555 && (xweb7da || !rv229c2) && (hoee1bb || cb170e0)) begin
			alf8b2e[`ddr3_ipcore_USER_ACT] = 1'b1; aa2eae4 = 1'b0; anab90c = 1'b1; xwe4328 = 1'b1; wj60b6c = 1'b0; jr2db21 = 1'b0;  end  else if (!ald3aaa && !mg9d555) begin			alf8b2e[`ddr3_ipcore_USER_ACT] = 1'b1; aa2eae4 = 1'b0; anab90c = 1'b1; xwe4328 = 1'b1; jr2db21 = 1'b0;  end  else begin	alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;	aa2eae4 = 1'b1;  end	end 
                else if (dm48595 || nge0b8) begin           if (ald3aaa ) begin                 alf8b2e[`ddr3_ipcore_WR] = 1'b1;                 aa2eae4 = 1'b0;                 zz2863d = 1'b1;                 ep18f79 = 1'b1;                 mr5e039 = 1'b0;                 jr2db21 = 1'b0;           end           else if (mg9d555 && yx5bed2) begin                 alf8b2e[`ddr3_ipcore_WR] = 1'b1;                 aa2eae4 = 1'b0;                 zz2863d = 1'b1;                 ep18f79 = 1'b1;                 wj60b6c = 1'b0;                 jr2db21 = 1'b0;           end           else if (!ald3aaa && !mg9d555) begin                 alf8b2e[`ddr3_ipcore_WR] = 1'b1;                 aa2eae4 = 1'b0;                 zz2863d = 1'b1;                 ep18f79 = 1'b1;                 jr2db21 = 1'b0;           end           else begin                alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;                aa2eae4 = 1'b1;           end        end                 else if (rib2a96 || vv64382) begin          if (ald3aaa && tu57adf) begin                 alf8b2e[`ddr3_ipcore_RD] = 1'b1;                 aa2eae4 = 1'b0;                 ph3de66 = 1'b1;                 rgdab57 = 1'b1;                 yxccdc3 = 1'b1;                 mr5e039 = 1'b0;                 jr2db21 = 1'b0;          end          else if (mg9d555 ) begin                 alf8b2e[`ddr3_ipcore_RD] = 1'b1;                 aa2eae4 = 1'b0;                 ph3de66 = 1'b1;                 rgdab57 = 1'b1;                 yxccdc3 = 1'b1;                 wj60b6c = 1'b0;                 jr2db21 = 1'b0;          end          else if (!ald3aaa && !mg9d555 ) begin                 alf8b2e[`ddr3_ipcore_RD] = 1'b1;                 aa2eae4 = 1'b0;                 ph3de66 = 1'b1;                 rgdab57 = 1'b1;                 yxccdc3 = 1'b1;                 jr2db21 = 1'b0;           end           else begin                alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;                aa2eae4 = 1'b1;           end        end 
        else if (dm6c870 && (os6d90e || wjc3822 ||cb170e0 ||zmb8704 )) begin	alf8b2e[`ddr3_ipcore_IDLE]=1'b1;	kf2cbab = 1'b1;	aa2eae4 = 1'b0;	jr2db21=1'b1;        end        else begin            alf8b2e[`ddr3_ipcore_NOP_C] = 1'b1;            aa2eae4 = 1'b1;        end      end                   vv5f165[`ddr3_ipcore_PRE] : begin              alf8b2e[`ddr3_ipcore_PRE_WAIT] = 1'b1;           tj370eb = 1'b0;           wjc3afa = 1'b0;           lqebea5 = 1'b1;      end                        vv5f165[`ddr3_ipcore_PRE_WAIT] : begin            if (hd32ebd || vxaa67b || gq21c17 || nr5aa99) begin            jr2db21 = 1'b0;             if ((bn376aa || aa82e1c) && (hoee1bb || cb170e0) )begin                 if(hd32ebd || pfd2da7 || nr5aa99)      alf8b2e[`ddr3_ipcore_ACT]=1'b1;                 else alf8b2e[`ddr3_ipcore_USER_ACT]=1'b1;                anab90c = 1'b1;                 xwe4328 = 1'b1;                 lqebea5 = 1'b0;           end           else begin              alf8b2e[`ddr3_ipcore_PRE_WAIT]=1'b1;              lqebea5 = 1'b1;           end         end 
         else if (dm6c870) begin             if (bn376aa || aa82e1c) begin	alf8b2e[`ddr3_ipcore_IDLE]=1'b1;	kf2cbab = 1'b1;	lqebea5 = 1'b0;	jr2db21 = 1'b1;             end             else begin              alf8b2e[`ddr3_ipcore_PRE_WAIT]=1'b1;              lqebea5 = 1'b1;             end         end          else begin              alf8b2e[`ddr3_ipcore_PRE_WAIT]=1'b1;              lqebea5 = 1'b1;         end      end                   vv5f165[`ddr3_ipcore_ACT] : begin     	anab90c = 1'b0;	xwe4328 = 1'b0;

                if (epb1e42 == 0)  begin                   alf8b2e[`ddr3_ipcore_ACT_WAIT]=1'b1;   ntca18 = 1'b1;                end	else begin                  if (dm48595 || nge0b8) begin                     alf8b2e[`ddr3_ipcore_WR]=1'b1;                     zz2863d = 1'b1;                     ep18f79 = 1'b1;                     mr5e039 = 1'b0;                  end                  else begin                    alf8b2e[`ddr3_ipcore_RD]=1'b1;                    ph3de66 = 1'b1;                    rgdab57 = 1'b1;                    yxccdc3 = 1'b1;                    wj60b6c = 1'b0;                 end              end           end 
         vv5f165[`ddr3_ipcore_USER_ACT] : begin     	anab90c = 1'b0;	xwe4328 = 1'b0;	alf8b2e[`ddr3_ipcore_NOP_C]=1'b1;       end                      vv5f165[`ddr3_ipcore_ACT_WAIT] : begin             if (dm48595 || nge0b8 || ba14e17) begin            mr5e039 = 1'b1;            if (ngbdc37 ) begin               wl3982d = 1'b1;               alf8b2e[`ddr3_ipcore_WR]=1'b1;               ntca18 = 1'b0;               zz2863d = 1'b1;               ep18f79 = 1'b1;               mr5e039 = 1'b0;            end            else begin              alf8b2e[`ddr3_ipcore_ACT_WAIT]=1'b1;              ntca18 = 1'b1;            end         end          else if (rib2a96  || vv64382  || ria70ba) begin           wj60b6c = 1'b1;           if (ngbdc37  ) begin              wl3982d = 1'b1;              alf8b2e[`ddr3_ipcore_RD]=1'b1;              ntca18 = 1'b0;              ph3de66 = 1'b1;              rgdab57 = 1'b1;              yxccdc3 = 1'b1;              wj60b6c = 1'b0;           end           else begin              alf8b2e[`ddr3_ipcore_ACT_WAIT]=1'b1;              ntca18 = 1'b1;           end         end          else  begin            alf8b2e[`ddr3_ipcore_ACT_WAIT]=1'b1;            ntca18 = 1'b1;         end
      end                  vv5f165[`ddr3_ipcore_WR] : begin                   wl3982d = 1'b0;         if (tuda553 || ng358f2) begin	alf8b2e[`ddr3_ipcore_NOP_C]=1'b1;	zz2863d = 1'b0;	ep18f79 = 1'b0;	aa2eae4 = 1'b1;	mr5e039 = 1'b1;	wj60b6c = 1'b0;         end         else begin	alf8b2e[`ddr3_ipcore_WRW]=1'b1;	zz2863d = 1'b0;	ep18f79 = 1'b0;	fpa5780 = 1'b1;	aa2eae4 = 1'b0;         end
      end                           vv5f165[`ddr3_ipcore_WRW] : begin                 if (ng358f2) begin	alf8b2e[`ddr3_ipcore_NOP_C]= 1'b1;	aa2eae4 = 1'b1;	fpa5780 = 1'b0;	mr5e039 = 1'b1;	wj60b6c = 1'b0;         end else if (nr5aa99) begin	mr5e039 = 1'b1;	gd80e60 = 1'b1;	alf8b2e[`ddr3_ipcore_NOP_C]= 1'b1;         end         else  begin	alf8b2e[`ddr3_ipcore_WR]= 1'b1;	zz2863d = 1'b1;	ep18f79 = 1'b1;	fpa5780 = 1'b0;	aa2eae4 = 1'b0;         end
      end                  vv5f165[`ddr3_ipcore_RD] : begin                      wl3982d = 1'b0;         if (tuda553 || ng358f2) begin	alf8b2e[`ddr3_ipcore_NOP_C]=1'b1;	aa2eae4 = 1'b1;	ph3de66  = 1'b0;	rgdab57 = 1'b0;	yxccdc3 = 1'b0;	wj60b6c = 1'b1;	mr5e039 = 1'b0;         end         else  begin               if (!xl1c114 && oh39435 ) begin                   sue08a7 = 1'b1;                  alf8b2e[`ddr3_ipcore_RD]=1'b1;               end       else begin                  sue08a7 = 1'b0;                  alf8b2e[`ddr3_ipcore_RDW]=1'b1;                  wwfa95e = 1'b1 ;                  ph3de66 = 1'b0;                  rgdab57 = 1'b0;                  yxccdc3 = 1'b0;                  mr5e039 = 1'b0;                  aa2eae4 = 1'b0;               end         end      end
                          vv5f165[`ddr3_ipcore_RDW] : begin                  if (ng358f2) begin	alf8b2e[`ddr3_ipcore_NOP_C]=1'b1;	aa2eae4 = 1'b1;	wwfa95e = 1'b0;	wj60b6c = 1'b1;         end
 else if (nr5aa99) begin	wj60b6c = 1'b1;	gd80e60 = 1'b1;	alf8b2e[`ddr3_ipcore_NOP_C]= 1'b1;         end         else begin	alf8b2e[`ddr3_ipcore_RD]=1'b1;	ph3de66 = 1'b1;	rgdab57 = 1'b1;	yxccdc3 = 1'b1;	wwfa95e = 1'b0;	aa2eae4 = 1'b0;         end      end
      default : begin         alf8b2e[`ddr3_ipcore_IDLE]=1'b1;         kf2cbab = 1'b1;         aa2eae4 = 1'b0;
      end
endcase
end

endmodule































`timescale 1 ns / 100 ps
module th64e73_ddr3_ipcore (

   clk,
   rst_n,
   rtf6a57,
   
   
   uk21908,			 
   xlc840,			 
   nr64207,	
   uk2103f,	 
   an81f9,			 
   hb40fcc,			 
   kf7e67,			 
   do3f33c,			 
   hbf99e3,			 
   mrccf1f,
   ay678fd,
   wl3c7e9,
   zxe3f4c,	 
   mg1fa67,	 

   
   kdfd339,			 
   hbe99cc,			 
   yk4ce66,	
   su67331,		 
   gd39988,			 
   enccc45,			 
   ps6622d,			 
   gq3116a,			 
   uk88b50,			 
   pf45a81,
   xl2d40f,
   cz6a07f,
   nr503fc,    
   ph81fe7,	 

   dzd7927,
   jr3d74f,
   wwdedff,
   
   epb1e42,
   kf8f215,
   lq790ad,
   pfc856a,
   vi42b56,
   mg15ab2,
   baad590,
   ip6ac83,
   kq5641d,
   qgc43c2,
   param_trcd, 
   param_trp,  
   param_tras, 
   param_trc,  
   param_trrd,  
   param_trtp, 
   param_twtr,
   tw1174a,
   nrf6ff9,
   zmb7fce,
   tjbfe72,
   ykff396,
   thf9cb1,
   cmce58f,
   yk72c79,
   je963c8,   
   nr5aa99,   

   rgd54cf,
   nt163cf,
   kfb1e7e,
   jcfe692,
   cb9a49f,
   tja0e50,
   oh7286,
   fc2516f,
   sja4d7c,
   mef0d07,
   alf250f,
   fp943e9,
   gqfa7c,
   lq5d84d,			 
   zxec26a,
   lqca1ac,
   oh39435,
   fp8e464,
   zz91939,
   ng358f2,
   coac793,
   ls1e4cb,
   xjc841a ,
   rd_odd,

   ux1203a  ,
   vxaa67b    
);
input                           clk;
input                           rst_n;
input                           rtf6a57;
input                           uk21908;
input                           xlc840;
input                           nr64207;
input                           uk2103f;
input                           an81f9;
input                           hb40fcc;
input                           kf7e67;
input [4:0]                     do3f33c;
input [`ddr3_ipcore_CS_WIDTH-1:0]           hbf99e3;
input [`ddr3_ipcore_COL_WIDTH -1:0]         mrccf1f;
input [`ddr3_ipcore_BANK_WIDTH -1 :0]       ay678fd;
input [`ddr3_ipcore_ROW_WIDTH -1:0]         wl3c7e9;
input                           kdfd339;
input                           hbe99cc;
input                           yk4ce66;
input                           su67331;
input                           gd39988;
input                           enccc45;
input                           ps6622d;
input [4:0]                     gq3116a;
input [`ddr3_ipcore_CS_WIDTH-1:0]           uk88b50;
input [`ddr3_ipcore_COL_WIDTH -1:0]         pf45a81;
input [`ddr3_ipcore_BANK_WIDTH -1 :0]       xl2d40f;
input [`ddr3_ipcore_ROW_WIDTH -1:0]         cz6a07f;
input                           dzd7927;
input                           jr3d74f;
input                           wwdedff;
input [2:0]                     zxe3f4c;
input [2:0]                     nr503fc;
input                           mg1fa67;
input                           ph81fe7;
input                           tw1174a;
input [`ddr3_ipcore_AL_WIDTH-1:0]           epb1e42;
input [`ddr3_ipcore_CL_WIDTH-1:0]           kf8f215;
input                           lq790ad;
input [`ddr3_ipcore_CWL_WIDTH-1:0]          pfc856a;
input                           vi42b56;
input                           mg15ab2;
input                           baad590;
input                           ip6ac83;
input                           kq5641d;
input   [2:0]                   qgc43c2;
input                           nrf6ff9;
input                           zmb7fce;
input                           tjbfe72;
input                           ykff396;
input                           thf9cb1 ;
input                           cmce58f ;
input                           yk72c79;
input                           je963c8;
input                           nr5aa99 ;
input   [`ddr3_ipcore_TRCD_WIDTH-1:0]       param_trcd;
input   [`ddr3_ipcore_TRP_WIDTH-1:0]        param_trp;
input   [`ddr3_ipcore_TRAS_WIDTH-1:0]       param_tras;
input   [`ddr3_ipcore_TRC_WIDTH-1:0]        param_trc;
input   [`ddr3_ipcore_TRRD_WIDTH-1:0]       param_trrd;
input   [`ddr3_ipcore_TRTP_WIDTH-1:0]       param_trtp;
input   [`ddr3_ipcore_TWTR_WIDTH-1:0]       param_twtr;
output                          vxaa67b;
output                          rgd54cf ;
output [`ddr3_ipcore_RL_WIDTH-1:0]          nt163cf;
output [`ddr3_ipcore_WL_WIDTH-1:0]          kfb1e7e;
output                          jcfe692 ;
output                          cb9a49f  ;
output                          tja0e50 ;
output                          oh7286 ;
output                          fc2516f ;
output                          sja4d7c;
output [`ddr3_ipcore_CS_WIDTH -1:0]         mef0d07;
output [`ddr3_ipcore_COL_WIDTH :0]          alf250f;
output [`ddr3_ipcore_BANK_WIDTH -1 :0]        fp943e9;
output [`ddr3_ipcore_ROW_WIDTH -1:0]        gqfa7c;
output                          lq5d84d;
output                          zxec26a;
output [2:0]                    ls1e4cb;
output                          lqca1ac;
output                          oh39435;
output                          fp8e464;
output                          zz91939;
output [5:0]                    coac793;
output                          ng358f2;
output                          xjc841a;
output                          rd_odd;
output                          ux1203a;
wire   [5:0]                    coac793;
wire                            rgd54cf;
wire   [`ddr3_ipcore_RL_WIDTH-1:0]          nt163cf;
wire   [`ddr3_ipcore_WL_WIDTH-1:0]          kfb1e7e;
wire   [`ddr3_ipcore_TRCD_WIDTH-1:0]        param_trcd;
wire   [`ddr3_ipcore_TRP_WIDTH-1:0]         param_trp;
wire   [`ddr3_ipcore_TRAS_WIDTH-1:0]        param_tras;
wire   [`ddr3_ipcore_TRC_WIDTH-1:0]         param_trc;
wire   [`ddr3_ipcore_TRTP_WIDTH-1:0]        param_trtp;
wire   [`ddr3_ipcore_TWTR_WIDTH-1:0]        param_twtr;
wire   [4:0]                    do3f33c;
wire   [`ddr3_ipcore_COL_WIDTH -1:0]        mrccf1f;
wire   [`ddr3_ipcore_BANK_WIDTH -1 :0]      ay678fd;
wire   [`ddr3_ipcore_ROW_WIDTH -1:0]        wl3c7e9;
wire   [`ddr3_ipcore_CS_WIDTH -1:0]         mef0d07;
wire   [4:0]                    gq3116a;
wire   [`ddr3_ipcore_COL_WIDTH -1:0]        pf45a81;
wire   [`ddr3_ipcore_BANK_WIDTH -1 :0]      xl2d40f;
wire   [`ddr3_ipcore_ROW_WIDTH -1:0]        cz6a07f;
wire   [`ddr3_ipcore_COL_WIDTH :0]          alf250f;
wire   [`ddr3_ipcore_BANK_WIDTH -1 :0]      fp943e9;
wire   [`ddr3_ipcore_ROW_WIDTH -1:0]        gqfa7c;
wire   [`ddr3_ipcore_AL_WIDTH-1:0]          epb1e42;
wire   [`ddr3_ipcore_CL_WIDTH-1:0]          kf8f215;
wire   [`ddr3_ipcore_CWL_WIDTH-1:0]         pfc856a;
wire   [2:0]                    qgc43c2;
wire [`ddr3_ipcore_CS_WIDTH-1:0]            uk88b50;
wire [`ddr3_ipcore_CS_WIDTH-1:0]            hbf99e3;
wire                            kd6aed3;

























doe9c6_ddr3_ipcore bnaf1d2(
   .clk(clk),   .rst_n(rst_n),   .rtf6a57(rtf6a57),   .alc65d7(alc65d7),   .hd32ebd(hd32ebd),   .vxaa67b (vxaa67b ),   .dm48595(dm48595),   .rib2a96(rib2a96),   .ngbdc37(ngbdc37),   .hoee1bb(hoee1bb),   .al70dda(al70dda),   .do86ed5(do86ed5),   .bn376aa(bn376aa),   .mtbb557(mtbb557),   .zkdaabd(zkdaabd),   .jcd55eb(jcd55eb),   .jraaf5b(jraaf5b),   .tu57adf(tu57adf),   .jebd6fb(jebd6fb),   .xweb7da(xweb7da),   .yx5bed2(yx5bed2),   .ng358f2(ng358f2),   .dzd7927(dzd7927),   .tuda553(tuda553),   .epb1e42(epb1e42),   .oh39435(oh39435),   .zzaa6bd(zzaa6bd),   .me535ee(me535ee),   .nr5aa99(nr5aa99),
   .rgd54cf(rgd54cf) ,   .hqbdc2f(hqbdc2f) ,   .jcfe692(jcfe692) ,   .cb9a49f(cb9a49f)  ,   .an85ed5(an85ed5 ) ,   .tja0e50(tja0e50 ) ,   .oh7286(oh7286 ) ,   .rgdab57(rgdab57 ) ,   .fc2516f(fc2516f ) ,   .lsad5da(lsad5da ),   .kd6aed3(kd6aed3 ),   .by5769d(by5769d ) ,   .sjbb4ea(sjbb4ea ) ,   .sja4d7c(sja4d7c),   .ald3aaa(ald3aaa),   .mg9d555(mg9d555)   );




end31ae_ddr3_ipcore ou98d74(
   .clk(clk),   .rst_n(rst_n),   .param_trcd( param_trcd ),   .param_trp( param_trp ),   .param_twr( qgc43c2),   .param_tras( param_tras ),   .param_trc( param_trc ),   .param_trrd( param_trrd ),   .param_trtp( param_trtp ),   .param_twtr( param_twtr ),   .hd32ebd(hd32ebd),   .vxaa67b (vxaa67b ),   .cb9a49f(cb9a49f),   .an85ed5(an85ed5),   .fc2516f(fc2516f),   .lsad5da(lsad5da),   .jcfe692(jcfe692),   .tja0e50(tja0e50),   .oh7286(oh7286),   .sjbb4ea(sjbb4ea),   .by5769d(by5769d),   .coac793(coac793),   .zzaa6bd(zzaa6bd),   .shedc96(shedc96),   .epb1e42(epb1e42),   .kf8f215(kf8f215),   .lq790ad(lq790ad),   .pfc856a(pfc856a),   .vi42b56(vi42b56),   .nr5aa99(nr5aa99),
   .nt163cf(nt163cf),   .kfb1e7e(kfb1e7e),   .ngbdc37(ngbdc37),   .hoee1bb(hoee1bb),   .al70dda(al70dda),   .do86ed5(do86ed5),   .bn376aa(bn376aa),   .mtbb557(mtbb557),   .zkdaabd(zkdaabd),   .jcd55eb(jcd55eb),   .jraaf5b(jraaf5b),   .tu57adf(tu57adf),   .jebd6fb(jebd6fb),   .xweb7da(xweb7da),   .yx5bed2(yx5bed2),   .ng358f2(ng358f2),   .tuda553(tuda553),   .xjc841a(xjc841a),   .rd_odd(rd_odd),
   .ux1203a(ux1203a)
);





ba35d19_ddr3_ipcore mtae8cb(
 .ald3aaa(ald3aaa),   .mg9d555(mg9d555),   .jraaf5b(jraaf5b),   .xweb7da(xweb7da),   .clk(clk ),   .rst_n(rst_n ),   .tw1174a(tw1174a) ,      .uk21908(uk21908 ),
   .xlc840(xlc840 ),
   .nr64207(nr64207 ),   .uk2103f(uk2103f),
   .an81f9(an81f9 ),
   .hb40fcc(hb40fcc ),
   .kf7e67(kf7e67 ),
   .do3f33c(do3f33c ),
   .hbf99e3(hbf99e3 ),
   .mrccf1f(mrccf1f ),   .ay678fd(ay678fd ),   .wl3c7e9(wl3c7e9 ),   .jr3d74f(jr3d74f),   .zxe3f4c(zxe3f4c),   .mg1fa67(mg1fa67),
      .kdfd339(kdfd339 ),
   .hbe99cc(hbe99cc ),
   .yk4ce66(yk4ce66 ),   .su67331(su67331),
   .gd39988(gd39988 ),
   .enccc45(enccc45 ),
   .ps6622d(ps6622d ),
   .gq3116a(gq3116a ),
   .uk88b50(uk88b50 ),
   .pf45a81(pf45a81 ),   .xl2d40f(xl2d40f ),   .cz6a07f(cz6a07f ),   .nr503fc(nr503fc),   .ph81fe7(ph81fe7),   .fc2516f(fc2516f ),   .oh7286(oh7286 ),      .tja0e50(tja0e50 ),   .ng358f2(ng358f2 ),   .tuda553(tuda553 ),   .mg15ab2(mg15ab2),   .baad590(baad590),   .ip6ac83(ip6ac83),   .kq5641d(kq5641d),   .wwdedff(wwdedff),   .ux1203a(ux1203a),   .nrf6ff9(nrf6ff9),   .zmb7fce(zmb7fce),   .tjbfe72(tjbfe72),   .ykff396(ykff396),   .thf9cb1(thf9cb1),   .cmce58f(cmce58f),   .yk72c79(yk72c79),   .je963c8(je963c8),   .epb1e42(epb1e42),   .kd6aed3(kd6aed3 ),    .lq5d84d(lq5d84d ),
   .zxec26a(zxec26a ),   .je2a9f3(hd32ebd ),   .nga7cdc (vxaa67b ),   .alc65d7(alc65d7 ),   .rib2a96(rib2a96 ),   .dm48595(dm48595 ),   .zzaa6bd(zzaa6bd ),   .me535ee(me535ee ),   .shedc96(shedc96 ),   .bna56d6(bna56d6 ),     .coac793(coac793 ),   .mef0d07(mef0d07 ),   .alf250f(alf250f ),   .fp943e9(fp943e9 ),   .gqfa7c(gqfa7c ),   .lqca1ac(lqca1ac),   .oh39435(oh39435),   .ls1e4cb(ls1e4cb),   .fp8e464(fp8e464),   .zz91939(zz91939)   );
endmodule
























`timescale 1 ns / 100 ps
module ba35d19_ddr3_ipcore (

	ald3aaa,
	mg9d555,
	jraaf5b,
	xweb7da,
   clk,
   rst_n,
   tw1174a,
   
   uk21908,			 
   xlc840,			 
   nr64207,
   uk2103f,			 
   an81f9,			 
   hb40fcc,			 
   kf7e67,			 
   do3f33c,			 
   hbf99e3,			 
   mrccf1f,
   ay678fd,
   wl3c7e9,		 
   
   kdfd339,			 
   hbe99cc,			 
   yk4ce66,	
   su67331,		 
   gd39988,			 
   enccc45,			 
   ps6622d,			 
   gq3116a,			 
   uk88b50,			 
   pf45a81,
   xl2d40f,
   cz6a07f, 
   fc2516f,
   oh7286,
   tja0e50,
   ng358f2,
   tuda553,
   mg15ab2,
   baad590,
   ip6ac83,
   kq5641d,
   jr3d74f,
   wwdedff,
   zxe3f4c,
   nr503fc,
   mg1fa67,
   ph81fe7,
   ux1203a,
   nrf6ff9,
   zmb7fce,
   tjbfe72,
   ykff396,
   thf9cb1,
   cmce58f, 
   yk72c79,
   je963c8,
   epb1e42,
   kd6aed3,
 
   lq5d84d,			 
   zxec26a,   
   je2a9f3,
   nga7cdc,
   alc65d7,
   rib2a96,
   dm48595,
   ls1e4cb, 
   zzaa6bd,
   me535ee,
   shedc96,
   bna56d6,
   coac793,
   mef0d07,
   alf250f,
   fp943e9,
   gqfa7c,
   lqca1ac,
   oh39435,
   fp8e464,
   zz91939
   );
input                   clk;
input                   rst_n;
input                   uk21908;
input                   xlc840;
input                   nr64207;
input                   uk2103f;
input                   an81f9;
input                   hb40fcc;
input                   kf7e67;
input [4:0]             do3f33c;
input [`ddr3_ipcore_CS_WIDTH-1:0]    hbf99e3;
input [`ddr3_ipcore_COL_WIDTH -1:0] mrccf1f;
input [`ddr3_ipcore_BANK_WIDTH -1 :0]  ay678fd;
input [`ddr3_ipcore_ROW_WIDTH -1:0] wl3c7e9;
input                   mg15ab2;
input                   baad590;
input                   ip6ac83;
input                   kq5641d;
input                   kdfd339;
input                   hbe99cc;
input                   yk4ce66;
input                   su67331;
input                   gd39988;
input                   enccc45;
input                   ps6622d;
input [4:0]             gq3116a;
input [`ddr3_ipcore_CS_WIDTH-1:0]   uk88b50;
input [`ddr3_ipcore_COL_WIDTH -1:0] pf45a81;
input [`ddr3_ipcore_BANK_WIDTH -1 :0]  xl2d40f;
input [`ddr3_ipcore_ROW_WIDTH -1:0] cz6a07f;
input                   fc2516f;
input                   oh7286;
input                   tja0e50;
input                   ng358f2;
input                   tuda553;
input                   jr3d74f;
input                   wwdedff;
input [2:0]             zxe3f4c;
input [2:0]             nr503fc;
input                   mg1fa67;
input                   ph81fe7;
input                   ux1203a;
input                   tw1174a;
input                   nrf6ff9;
input                   zmb7fce;
input                   tjbfe72;
input                   ykff396;
input                   thf9cb1;
input                   cmce58f;
input                   yk72c79;
input                   je963c8;
input [`ddr3_ipcore_AL_WIDTH-1:0]   epb1e42;
input                   kd6aed3;
input                   ald3aaa;
input                   mg9d555;
input                   jraaf5b;
input	xweb7da;
output                  lq5d84d;
output                  zxec26a;
output                  je2a9f3;
output                  nga7cdc;
output                  alc65d7;
output                  rib2a96;
output                  dm48595;
output [2:0]            ls1e4cb;
output                  zzaa6bd;
output                  me535ee;
output                  shedc96;
output                  bna56d6;
output [5:0]            coac793;
output [`ddr3_ipcore_CS_WIDTH -1 :0]  mef0d07;
output [`ddr3_ipcore_COL_WIDTH :0]  alf250f;
output [`ddr3_ipcore_BANK_WIDTH -1 :0]  fp943e9;
output [`ddr3_ipcore_ROW_WIDTH -1:0]  gqfa7c;
output                   lqca1ac;
output                   oh39435;
output                   fp8e464;
output                   zz91939;
parameter sj2793 = 4;

`define ddr3_ipcore_IDLEI 0  // 1d  01h

`define ddr3_ipcore_Q0 1   // 2d  02h

`define ddr3_ipcore_Q1 2   // 4d  04h

`define ddr3_ipcore_ACTI 3  // 8d  08h

`define ddr3_ipcore_PREI 4  // 16d 10h 

`define ddr3_ipcore_RDI 5  // 32d 20h

`define ddr3_ipcore_WRI 6  // 64d 40h

`define ddr3_ipcore_Q0_ACTI_WAIT 7

`define ddr3_ipcore_Q1_ACTI_WAIT 8
reg [8:0]               vx13c9d, bn9e4ef;
reg                     fp8e464, xy93bf5;
reg                     zz91939, uiefd58;
reg                     hd32ebd, qgf560e, yzab070, fa58384 ;
reg                     vxaa67b, lse119, uv708cb, jr8465d;
reg                     alc65d7, nt19774, qgcbba7;
reg                     rib2a96, lqee9c2, ld74e13;
reg                     dm48595, tj384fa, blc27d6;
reg                     ph13eb7, ep9f5bf;
reg                     sufadfc, shd6fe0;
reg                     bab7f05, jrbf82a;
reg                     zxfc156, uie0ab6;
reg                     xl1c114, sue08a7;
reg                     me56c03;
reg                     ecb6019;
reg [2:0]               ls1e4cb;
reg                     zzaa6bd;
reg                     shedc96;
reg [`ddr3_ipcore_CS_WIDTH -1 :0]   mef0d07;
reg [5:0]               coac793;
reg                     qt4e9fd;
reg                     fn74fec;
reg                     ria7f67;
reg [`ddr3_ipcore_COL_WIDTH :0]     alf250f;
reg [`ddr3_ipcore_BANK_WIDTH -1 :0] fp943e9, bleced5;
reg [`ddr3_ipcore_ROW_WIDTH -1:0]   gqfa7c;
reg [`ddr3_ipcore_AL_WIDTH-1:0]     gq3b570;
reg [`ddr3_ipcore_BANK_WIDTH -1 :0] dmdab81;
reg                     lqca1ac;
reg                     oh39435;
reg                     lq5d84d, zxec26a;
reg                     ngb526;
reg                     ld5a933, ayd499f;
reg                     kfa4cf8, ux267c4;
reg                     bna56d6;
reg [2:0]               ux9f124;
reg [2:0]               shf8924;
reg                     me535ee;
reg                     ie24929;
wire                    co24948;
reg                     je2a9f3;
reg                     nga7cdc;
reg wl29003,tu4801d;
reg dz400ea,ym756;
reg[3:0] nt3ab0;
reg[2:0] cb1d586;

`ifdef ddr3_ipcore_ECP3_SP2

`else

`endif //SP2

`ifdef ddr3_ipcore_ECP3_SP2                                                                   

`else

`endif











`define ddr3_ipcore_IDLEI 0  // 1d  01h


`define ddr3_ipcore_Q0 1   // 2d  02h


`define ddr3_ipcore_Q1 2   // 4d  04h


`define ddr3_ipcore_ACTI 3  // 8d  08h


`define ddr3_ipcore_PREI 4  // 16d 10h 


`define ddr3_ipcore_RDI 5  // 32d 20h


`define ddr3_ipcore_WRI 6  // 64d 40h


`define ddr3_ipcore_Q0_ACTI_WAIT 7


`define ddr3_ipcore_Q1_ACTI_WAIT 8







always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin	wl29003 <= 0;	tu4801d <= 0;	dz400ea <= 0;	ym756 <= 0;
   end   else begin	wl29003 <= uk2103f;	tu4801d <= wl29003;	dz400ea <= su67331;	ym756 <= dz400ea;
   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	cb1d586 <= 0;	else if((uk2103f && !wl29003)||(su67331 && !dz400ea) )	cb1d586 <= cb1d586 + 1;	else if(an81f9 || gd39988 || hb40fcc || enccc45)	cb1d586 <= 0;
end







always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       je2a9f3         <=  'b0 ;   nga7cdc    <=  'b0 ;   end   else begin       je2a9f3         <=  (epb1e42 == 0) ? qgf560e  : hd32ebd ;   nga7cdc    <=  (epb1e42 == 0) ? lse119 : vxaa67b;   end

end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       gq3b570          <=  'h0 ;   else       gq3b570          <=  epb1e42 ;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       lq5d84d          <=  1'b0 ;   else if (uk21908  && fp8e464 && (ld74e13 || blc27d6 || uv708cb))       lq5d84d          <=  1'b1 ;   else       lq5d84d          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       zxec26a          <=  1'b0 ;   else if (kdfd339  && zz91939 && (ld74e13  || blc27d6 || uv708cb))       zxec26a          <=  1'b1 ;   else       zxec26a          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ld5a933          <=  1'b0 ;   else if (uk21908  && fp8e464 && (ld74e13 || blc27d6 || uv708cb))
       ld5a933          <=  1'b1 ;   else if (zxec26a || (kfa4cf8 && !tw1174a ))       ld5a933          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ayd499f          <=  1'b0 ;   else if (kdfd339  && zz91939 && (ld74e13  || blc27d6 || uv708cb))
       ayd499f          <=  1'b1 ;   else if (lq5d84d || (ux267c4 && !tw1174a ))       ayd499f          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       kfa4cf8          <=  1'b0 ;   else       kfa4cf8          <=  ld5a933 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ux267c4          <=  1'b0 ;   else       ux267c4          <=  ayd499f ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    shedc96   <=  1'b0 ;   else    shedc96   <=  !zzaa6bd ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    fa58384    <=  1'b0 ;   else    fa58384    <=  hd32ebd ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    jr8465d    <=  1'b0 ;   else    jr8465d    <=  vxaa67b ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mef0d07        <=  'b0 ;   else if (fp8e464 && uk21908 )       mef0d07        <=  hbf99e3 ;   else if (zz91939 && kdfd339)       mef0d07        <=  uk88b50 ;
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      coac793        <=  'b0 ;   else if (fp8e464 && uk21908  ) begin      if (do3f33c == 0)          coac793        <=  6'h20 ;      else          coac793        <=  do3f33c ;   end   else if (zz91939 && kdfd339)  begin      if (gq3116a == 0)          coac793        <=  6'h20 ;      else          coac793        <=  gq3116a ;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ecb6019        <=  'b0 ;      me56c03        <=  'b0 ;   end   else if ((tj384fa || lqee9c2) && ( |coac793[5:1] )) begin      ecb6019        <=  'b1 ;      me56c03        <=  'b1 ;   end   else if ( ux1203a || tuda553 ) begin      ecb6019        <=  'b0 ;      me56c03        <=  'b0 ;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)         ngb526        <=   1'b0;   else if (qgcbba7) ngb526        <=   1'b1;   else if (fc2516f)       ngb526        <=   1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      alf250f        <=  'b0 ;   else if ((fp8e464 && uk21908) || (jr3d74f && !tw1174a))      alf250f        <=  {kf7e67, mrccf1f} ;   else if ((zz91939 && kdfd339) || (wwdedff && !tw1174a))      alf250f        <=  {ps6622d,pf45a81};
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ie24929        <=  'b0 ;   else      ie24929        <=  kd6aed3 ;
end

assign co24948  = kd6aed3 & ~ie24929;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      fp943e9        <=  'b0 ;   else if ((fp8e464 && uk21908) || (jr3d74f && !tw1174a))      fp943e9        <=  ay678fd ;   else if ((zz91939 && kdfd339) || (wwdedff && !tw1174a))      fp943e9        <=  xl2d40f ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      dmdab81        <=  'b0 ;   else if ((fp8e464 && uk21908) || (jr3d74f && !tw1174a))      dmdab81        <=  ay678fd ;   else if ((zz91939 && kdfd339) || (wwdedff && !tw1174a))      dmdab81        <=  xl2d40f ;   else if (co24948)      dmdab81        <=  dmdab81 + 1 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ux9f124        <=  'b0 ;   else if (xy93bf5 && uk21908)      ux9f124        <=  ay678fd ;   else if (uiefd58 && kdfd339)      ux9f124        <=  xl2d40f ;   else if (co24948)      ux9f124        <=  ux9f124 + 1 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      shf8924        <=  'b0 ;   else      shf8924        <=  ux9f124 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      me535ee        <=  1'b1 ;   else if ((ux9f124 == shf8924) && ((uk21908 || kdfd339) && tw1174a))      me535ee        <=  (me535ee ) ;   else if ((ux9f124 != shf8924) && ((uk21908 || kdfd339) && tw1174a))      me535ee        <=  !me535ee ;   else   me535ee    <=  me535ee ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      bna56d6        <=  'b0 ;   else if ((an81f9 || hb40fcc) && uk21908)      bna56d6        <=  mg1fa67 ;   else if ((gd39988 || enccc45) && kdfd339)      bna56d6        <=  ph81fe7 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      bleced5        <=  'b0 ;   else      bleced5        <=  dmdab81 ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zzaa6bd        <=  1'b1 ;   else if ((dmdab81 == bleced5) && (((uk21908 || kdfd339) && tw1174a) || ((jr3d74f || wwdedff ) && !tw1174a)))      zzaa6bd        <=  (zzaa6bd ) ;   else if ((dmdab81 != bleced5) && (((uk21908 || kdfd339) && tw1174a) || ((jr3d74f || wwdedff )&& !tw1174a)))      zzaa6bd        <=  !zzaa6bd ;   else   zzaa6bd        <=  zzaa6bd ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ls1e4cb        <=  'b0 ;   else if ( jr3d74f)      ls1e4cb        <=  zxe3f4c ;   else if ( wwdedff)      ls1e4cb        <=  nr503fc ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      gqfa7c        <=  'b0 ;   else if (fp8e464 && uk21908)      gqfa7c        <=  wl3c7e9 ;   else if (zz91939 && kdfd339)      gqfa7c        <=  cz6a07f ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      lqca1ac        <=  'b0 ;   else if (fp8e464 && uk21908)      lqca1ac        <=  mg15ab2 ;   else if (zz91939 && kdfd339)      lqca1ac        <=  ip6ac83 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      oh39435        <=  'b0 ;   else if (fp8e464 && uk21908)      oh39435        <=  baad590 ;   else if (zz91939 && kdfd339)      oh39435        <=  kq5641d ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      qt4e9fd   <=  'b0 ;      fn74fec   <=  'b0 ;      ria7f67   <=  'b0 ;   end   else if ( yzab070 || ld74e13 || blc27d6 ) begin      qt4e9fd   <=  'b1 ;      fn74fec   <=  'b1 ;      ria7f67   <=  'b1 ;   end   else if ((tuda553 && (tja0e50 || oh7286)) || (!tuda553 && ng358f2)) begin      qt4e9fd   <=  'b0 ;      fn74fec   <=  'b0 ;      ria7f67   <=  'b0 ;   end
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      vx13c9d           <=  7'b0 ;      fp8e464              <=  1'b0;      zz91939              <=  1'b0;      alc65d7       <=  1'b0;      qgcbba7     <=  1'b0;      hd32ebd          <=  1'b0;      vxaa67b     <=  1'b0;      yzab070        <=  1'b0;      uv708cb   <=  1'b0;      rib2a96            <=  1'b0;      ld74e13          <=  1'b0;      dm48595           <=  1'b0;      blc27d6         <=  1'b0;      ph13eb7          <=  1'b0;      bab7f05          <=  1'b0;      sufadfc          <=  1'b0;      zxfc156          <=  1'b0;      xl1c114       <=  1'b0;      nt3ab0   <=  0;   end   else begin      vx13c9d           <=  bn9e4ef ;      fp8e464              <=  xy93bf5;      zz91939              <=  uiefd58;      alc65d7       <=  nt19774;      qgcbba7     <=  nt19774;      hd32ebd          <=  qgf560e;      vxaa67b     <=  lse119;      yzab070        <=  qgf560e;      uv708cb   <=  lse119;      dm48595           <=  tj384fa;      blc27d6         <=  tj384fa;      rib2a96            <=  lqee9c2;      ld74e13          <=  lqee9c2;      ph13eb7          <=  ep9f5bf;      bab7f05          <=  jrbf82a;      sufadfc          <=  shd6fe0;      zxfc156          <=  uie0ab6;      xl1c114       <=  sue08a7;      if(vx13c9d[`ddr3_ipcore_Q0_ACTI_WAIT] || vx13c9d[`ddr3_ipcore_Q1_ACTI_WAIT]  ) nt3ab0 <= nt3ab0 + 1;      else nt3ab0 <= 0;   end
end





always @ (vx13c9d or uk21908  or kdfd339  or nrf6ff9 or zmb7fce or cmce58f or je963c8 or yk72c79 or          ld5a933 or ayd499f  or dm48595 or tw1174a or qt4e9fd or fn74fec or ria7f67 or tjbfe72 or ykff396          or nr64207 or yk4ce66 or uk2103f or su67331 or xlc840 or hbe99cc or ngb526 or gq3116a          or an81f9 or gd39988 or hb40fcc or enccc45 or ecb6019  or me56c03 or do3f33c or          ph13eb7 or sufadfc or bab7f05 or zxfc156 or zxec26a or lq5d84d or  thf9cb1          or fp8e464 or zz91939 or lqca1ac or xl1c114 or nt3ab0) begin
bn9e4ef = 7'b0;
qgf560e = 1'b0;
lse119 = 1'b0;
nt19774 = 1'b0;
tj384fa = 1'b0;
lqee9c2 = 1'b0;
sue08a7 = 1'b0;
xy93bf5 = fp8e464;
uiefd58 = zz91939;
jrbf82a = bab7f05;
shd6fe0 = sufadfc;
uie0ab6 = zxfc156;
ep9f5bf = ph13eb7;
case (1)        vx13c9d[`ddr3_ipcore_IDLEI] :  begin                        xy93bf5 = 1'b0;                        uiefd58 = 1'b0;                        qgf560e = 1'b0;                        lse119 = 1'b0;                        nt19774 = 1'b0;                        tj384fa = 1'b0;                        lqee9c2 = 1'b0;                        ep9f5bf = 1'b0;                        jrbf82a = 1'b0;                        shd6fe0 = 1'b0;                        uie0ab6 = 1'b0;                        sue08a7 = 1'b0;                        if (uk21908 && tw1174a && !ria7f67) begin                                                    bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                            xy93bf5 = 1'b1;                        end                        else if (kdfd339 && tw1174a && !ria7f67) begin                                                    bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                            uiefd58 = 1'b1;                        end                        else bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                end


 vx13c9d[`ddr3_ipcore_Q0_ACTI_WAIT] : begin	if(nt3ab0 == sj2793) begin	lse119 = 1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	xy93bf5 = 1'b1;                    end                    else begin	bn9e4ef[`ddr3_ipcore_Q0_ACTI_WAIT] = 1'b1;                    end end
  vx13c9d[`ddr3_ipcore_Q1_ACTI_WAIT] : begin	if(nt3ab0 == sj2793) begin	lse119 = 1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	uiefd58 = 1'b1;                    end                    else begin	bn9e4ef[`ddr3_ipcore_Q1_ACTI_WAIT] = 1'b1;                    end end




`ifdef ddr3_ipcore_ECP3_SP2
   vx13c9d[`ddr3_ipcore_Q0] :  begin
                   if (tw1174a && kdfd339  && !qt4e9fd) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       ep9f5bf = 1'b0;                       uie0ab6 = 1'b0;                       if (!xl1c114 && lqca1ac && ykff396 && !hbe99cc  && !cmce58f && !ecb6019 && (gq3116a == 1)) begin                        sue08a7 = 1'b1;                        bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                       end                       else if (xl1c114 && lqca1ac && ykff396 && !hbe99cc  && !cmce58f && !ecb6019 && (gq3116a == 1)) begin                        sue08a7 = 1'b0;                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        uiefd58 = 1'b1;                        xy93bf5 = 1'b0;                       end                       else if (zmb7fce && !hbe99cc && !cmce58f && !ecb6019 && (gq3116a == 1)) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        uiefd58 = 1'b1;                        xy93bf5 = 1'b0;                       end                       else bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                    end
                  else   if (!tw1174a || ld5a933) begin                         bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                         ep9f5bf = 1'b0;                         jrbf82a = 1'b0;                         shd6fe0 = 1'b0;                         uie0ab6 = 1'b0;                    end
                    else  if (tw1174a && (uk21908 )) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       if (xlc840 && !zxfc156) begin                        bn9e4ef[`ddr3_ipcore_PREI] = 1'b1;                        nt19774 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if ((nr64207 || uk2103f ) && !ph13eb7 && !ngb526) begin                        if(nr64207)begin	qgf560e =1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	xy93bf5 = 1'b1;                        end                        else if((ald3aaa && jraaf5b) || (mg9d555 && xweb7da) || (~ald3aaa && ~mg9d555)) begin	if(cb1d586 != 2)begin	lse119 = 1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	xy93bf5 = 1'b1;	end	else begin	lse119 = 1'b0;	bn9e4ef[`ddr3_ipcore_Q0_ACTI_WAIT] = 1'b1;	xy93bf5 = 1'b0;	end end                       end                       else if (hb40fcc && !sufadfc  && !ecb6019 && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (an81f9 && !bab7f05 && !ecb6019  && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        xy93bf5 = 1'b1;                       end                       else bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                    end
                    else bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                end

`else
   vx13c9d[`ddr3_ipcore_Q0] :  begin
                   if (tw1174a && kdfd339  && !qt4e9fd) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       ep9f5bf = 1'b0;                       uie0ab6 = 1'b0;
                      if (ykff396 && !hbe99cc  && !cmce58f && !ecb6019 && (gq3116a == 1)) begin                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        uiefd58 = 1'b1;                        xy93bf5 = 1'b0;                       end                       else if (zmb7fce && !hbe99cc && !cmce58f && !ecb6019 && (gq3116a == 1)) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        uiefd58 = 1'b1;                        xy93bf5 = 1'b0;                       end                       else bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                    end
                  else   if (!tw1174a || ld5a933) begin                         bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                         ep9f5bf = 1'b0;                         jrbf82a = 1'b0;                         shd6fe0 = 1'b0;                         uie0ab6 = 1'b0;                    end
                    else  if (tw1174a && (uk21908 )) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       if (xlc840 && !zxfc156) begin                        bn9e4ef[`ddr3_ipcore_PREI] = 1'b1;                        nt19774 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if ((nr64207 || uk2103f)&& !ph13eb7 && !ngb526) begin                        if(nr64207)begin	qgf560e =1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	xy93bf5 = 1'b1;                        end                        else if((ald3aaa && jraaf5b) || (mg9d555 && xweb7da) || (~ald3aaa && ~mg9d555)) begin	if(cb1d586 != 2)begin	lse119 = 1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	xy93bf5 = 1'b1;	end	else begin	lse119 = 1'b0;	bn9e4ef[`ddr3_ipcore_Q0_ACTI_WAIT] = 1'b1;	xy93bf5 = 1'b0;	end end                       end                       else if (hb40fcc && !sufadfc  && !ecb6019 && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (an81f9 && !bab7f05 && !ecb6019  && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        xy93bf5 = 1'b1;                       end                       else bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                    end
                    else bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                end

`endif //SP2
   vx13c9d[`ddr3_ipcore_ACTI] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                     qgf560e = 1'b0;                     lse119 = 1'b0;                     ep9f5bf = 1'b1;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                     qgf560e = 1'b0;                     lse119 = 1'b0;                     ep9f5bf = 1'b1;                 end                end
   vx13c9d[`ddr3_ipcore_WRI] :  begin                    if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                     tj384fa = 1'b0;                     jrbf82a = 1'b1;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                     tj384fa = 1'b0;                     jrbf82a = 1'b1;                 end                end  vx13c9d[`ddr3_ipcore_RDI] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                     lqee9c2 = 1'b0;                     shd6fe0 = 1'b1;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                     lqee9c2 = 1'b0;                     shd6fe0 = 1'b1;                 end                end  vx13c9d[`ddr3_ipcore_PREI] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0] = 1'b1;                     nt19774 = 1'b0;                     uie0ab6 = 1'b1;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                     nt19774 = 1'b0;                     uie0ab6 = 1'b1;                 end                end




`ifdef ddr3_ipcore_ECP3_SP2                                                                   
   vx13c9d[`ddr3_ipcore_Q1] :  begin                   if (tw1174a && uk21908 && !fn74fec) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       ep9f5bf = 1'b0;                       uie0ab6 = 1'b0;                       if (!xl1c114 && lqca1ac && tjbfe72 && !xlc840  && !thf9cb1 && !me56c03 && (do3f33c == 1)) begin                        sue08a7 = 1'b1;                        bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                       end                       else if (xl1c114 && lqca1ac && tjbfe72 && !xlc840  && !thf9cb1 && !me56c03 && (do3f33c == 1)) begin                        sue08a7 = 1'b0;                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        xy93bf5 = 1'b1;                        uiefd58 = 1'b0;                       end                       else if (nrf6ff9 && !xlc840  && !thf9cb1 && !me56c03 && (do3f33c == 1)) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        xy93bf5 = 1'b1;                        uiefd58 = 1'b0;                       end                       else bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                    end                    else  if (!tw1174a || ayd499f ) begin                         bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                         ep9f5bf = 1'b0;                         jrbf82a = 1'b0;                         shd6fe0 = 1'b0;                         uie0ab6 = 1'b0;                    end
                    else  if (tw1174a && (kdfd339 )) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       if (hbe99cc && !zxfc156) begin                        bn9e4ef[`ddr3_ipcore_PREI] = 1'b1;                        nt19774 =1'b1;                        uiefd58 = 1'b1;                       end                       else if ((yk4ce66 || su67331) && !ph13eb7 && !ngb526) begin                        if(yk4ce66)begin	qgf560e =1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	uiefd58 = 1'b1;                        end                        else if((ald3aaa && jraaf5b) || (mg9d555 && xweb7da) || (~ald3aaa && ~mg9d555)) begin	if(cb1d586 != 2)begin	lse119 = 1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	uiefd58 = 1'b1;	end	else begin	lse119 = 1'b0;	bn9e4ef[`ddr3_ipcore_Q1_ACTI_WAIT] = 1'b1;	uiefd58 = 1'b0;	end end                       end                       else if (enccc45 && !sufadfc  && !me56c03 && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        uiefd58 = 1'b1;                       end                       else if (gd39988 && !bab7f05 && !me56c03  && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        uiefd58 = 1'b1;                       end                       else bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                    end                    else bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;
                end

`else
   vx13c9d[`ddr3_ipcore_Q1] :  begin                                      if (tw1174a && uk21908 && !fn74fec) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       ep9f5bf = 1'b0;                       uie0ab6 = 1'b0;                      if (tjbfe72 && !xlc840  && !thf9cb1 && !me56c03 && (do3f33c == 1)) begin                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        xy93bf5 = 1'b1;                        uiefd58 = 1'b0;                       end                       else if (nrf6ff9 && !xlc840  && !thf9cb1 && !me56c03 && (do3f33c == 1)) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        xy93bf5 = 1'b1;                        uiefd58 = 1'b0;                       end                       else bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                    end                    else  if (!tw1174a || ayd499f ) begin                         bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;                         ep9f5bf = 1'b0;                         jrbf82a = 1'b0;                         shd6fe0 = 1'b0;                         uie0ab6 = 1'b0;                    end
                    else  if (tw1174a && (kdfd339 )) begin                       jrbf82a = 1'b0;                       shd6fe0 = 1'b0;                       if (hbe99cc && !zxfc156) begin                        bn9e4ef[`ddr3_ipcore_PREI] = 1'b1;                        nt19774 =1'b1;                        uiefd58 = 1'b1;                       end                       else if ((yk4ce66 || su67331) && !ph13eb7 && !ngb526) begin
                        if(yk4ce66)begin	qgf560e =1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	uiefd58 = 1'b1;                        end                        else if((ald3aaa && jraaf5b) || (mg9d555 && xweb7da) || (~ald3aaa && ~mg9d555)) begin	if(cb1d586 != 2)begin	lse119 = 1'b1;	bn9e4ef[`ddr3_ipcore_ACTI] = 1'b1;	uiefd58 = 1'b1;	end	else begin	lse119 = 1'b0;	bn9e4ef[`ddr3_ipcore_Q1_ACTI_WAIT] = 1'b1;	uiefd58 = 1'b0;	end end
                       end                       else if (enccc45 && !sufadfc  && !me56c03 && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_RDI] = 1'b1;                        lqee9c2 =1'b1;                        uiefd58 = 1'b1;                       end                       else if (gd39988 && !bab7f05 && !me56c03  && !ngb526) begin                        bn9e4ef[`ddr3_ipcore_WRI] = 1'b1;                        tj384fa =1'b1;                        uiefd58 = 1'b1;                       end                       else bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;                    end                    else bn9e4ef[`ddr3_ipcore_Q1] = 1'b1;
                end

`endif

   default : begin                   bn9e4ef[`ddr3_ipcore_IDLEI] = 1'b1;             end
endcase
end
endmodule






























`timescale 1 ns / 100 ps
module wj65f36_ddr3_ipcore (

   clk,
   rst_n,
   qia9c25,
   of70945,
   hb45bde,
   lf907b,
   zkca6a3,
   fc2516f,
   cb9a49f,
   dm48595,
   rib2a96,
   jcfe692,
   vv7bca9,
   qvabc43,
   wjf2a70,
   vx948e7,
   gb6f7be,
   ykdefa6,
   ls1e4cb,
   fpaa935,
   hq83a6e,
   gd1d372,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
   pfe9b95,
   xwe40df,
   xy206fb,
   zz37db,
   xy1bedf,
   tudf6fb,
   jcfb7da,
   aydbed3,
   rgdf699,
   mef0d07,
   tuf1b3a,
   cme50bf,
   nr5f942,
   wl_act,
   wy15761,
   gd398ab,
   encc55d,
   kq62aec, 
   coac793,
   ng358f2,
   lqca1ac, 

   ux1203a, 
   
   tw1174a,
   rgd54cf,
   

   ddr_cs_n,
   ddr_ras_n,
   ddr_cas_n,
   ddr_we_n,
   ddr_ba,
   ddr_addr,
   ddr_cke,
   nr5aa99,

   mirror_on
   );
input                          clk;
input                          rst_n;
input                          qia9c25;
input                          of70945;
input                          hb45bde;
input                          lf907b;
input                          zkca6a3;
input                          fc2516f;
input                          cb9a49f;
input                          dm48595;
input                          rib2a96;
input                          jcfe692;
input                          vv7bca9;
input                          wjf2a70;
input                          vx948e7;
input                          gb6f7be;
input                          ykdefa6;
input                          xwe40df;
input                          xy206fb;
input                          zz37db;
input                          xy1bedf;
input                          tudf6fb;
input                          jcfb7da;
input                          aydbed3;
input                          rgdf699;
input                          fpaa935;
input [`ddr3_ipcore_ROW_WIDTH-1:0]         hq83a6e;
input [`ddr3_ipcore_COL_WIDTH :0]          gd1d372;
input [15:0]                   addr_init_0;
input [15:0]                   addr_init_1;
input [15:0]                   addr_init_2;
input [15:0]                   addr_init_3;
input [`ddr3_ipcore_BANK_WIDTH-1:0]         pfe9b95;
input                          qvabc43;
input [`ddr3_ipcore_CS_WIDTH-1:0]          mef0d07;
input                          tuf1b3a;
input                          cme50bf;
input                          nr5f942;
input                          wl_act;
input                          gd398ab;
input                          encc55d;
input [`ddr3_ipcore_CS_WIDTH-1:0]          kq62aec;
input [15:0]                   wy15761;
input                          lqca1ac;
input [5:0]                    coac793;
input                          ng358f2;
input [2:0]                    ls1e4cb;
input                          ux1203a;
input                          tw1174a;
input                          rgd54cf;
output [`ddr3_ipcore_CS_WIDTH-1 :0]        ddr_cs_n;
output                         ddr_ras_n;
output                         ddr_cas_n;
output                         ddr_we_n;
output [`ddr3_ipcore_BANK_WIDTH-1:0]       ddr_ba;

`ifdef ddr3_ipcore_ROW_WIDTH_12
output [`ddr3_ipcore_ROW_WIDTH:0]          ddr_addr ;

`else
output [`ddr3_ipcore_ROW_WIDTH-1:0]        ddr_addr ;

`endif
output [`ddr3_ipcore_CKE_WIDTH -1:0]       ddr_cke;
output                         nr5aa99;
output                         mirror_on;
parameter  wy2b432 =     5'h10   ;
parameter  rt5a190 =     5'h08   ;
parameter  tud0c86 =   5'h04   ;
parameter  fc86432 =    5'h02   ;
parameter  vx32193 =     5'h01   ;
parameter  qv90c9f =   7'h40   ;
parameter  hq864fc =   7'h20   ;
parameter  lf327e3 =   7'h10   ;
parameter  ng93f1f =   7'h08   ;
parameter  oh9f8fb =  7'h04   ;
parameter  blfc7dd =  7'h02   ;
parameter  nre3eee =   7'h01   ;
parameter  uk1f777  =  9'h100   ;
parameter  rgfbbb8  =  9'h080   ;
parameter  lddddc2  =  9'h040   ;
parameter  xweee16  =  9'h020   ;
parameter  ay770b3  =  9'h010   ;
parameter  dob8599  =  9'h008   ;
parameter  dzc2cca  =  9'h004   ;
parameter  bn16656  =  9'h002   ;
parameter  qib32b6  =   9'h001   ;
reg [`ddr3_ipcore_CS_WIDTH-1 :0]   ba995b1, zkcad8b ;
reg                    ww56c5a, gqb62d1  ;
reg                    anb1689, bn8b44c ;
reg                    th5a267, icd133e ;
reg [`ddr3_ipcore_BANK_WIDTH-1:0]   zm899f1, ay4cf8b ;

`ifdef ddr3_ipcore_ROW_WIDTH_12
reg [`ddr3_ipcore_ROW_WIDTH:0]   ic67c59, gq3e2c9 ;

`else
reg [`ddr3_ipcore_ROW_WIDTH-1:0]   ic67c59, gq3e2c9 ;

`endif
reg [`ddr3_ipcore_CS_WIDTH-1 :0]   ay59257, shc92b9 ;
reg                    su495cc, vv4ae60  ;
reg                    rg57306, oub9832 ;
reg                    qtcc191, en60c8c ;
reg [`ddr3_ipcore_BANK_WIDTH-1:0]   zz6464, zz32327 ;

`ifdef ddr3_ipcore_ROW_WIDTH_12
reg [`ddr3_ipcore_ROW_WIDTH:0]   xl9193f, ls8c9fe ;

`else
reg [`ddr3_ipcore_ROW_WIDTH-1:0]   xl9193f, ls8c9fe ;

`endif
reg [`ddr3_ipcore_CS_WIDTH-1 :0]   je3fcf7, xwfe7ba ;
reg                    ldf3dd3, lf9ee9e  ;
reg                    czf74f7, vxba7bd ;
reg                    uvd3def, tj9ef7d ;
reg [`ddr3_ipcore_BANK_WIDTH-1:0]   off7bef, hqbdf7c ;

`ifdef ddr3_ipcore_ROW_WIDTH_12
reg [`ddr3_ipcore_ROW_WIDTH:0]   kqefbe3, ay7df19 ;

`else
reg [`ddr3_ipcore_ROW_WIDTH-1:0]   kqefbe3, ay7df19 ;

`endif
wire [`ddr3_ipcore_CS_WIDTH-1 :0]   ddr_cs_n ;
wire                    ddr_ras_n  ;
wire                    ddr_cas_n ;
wire                    ddr_we_n ;
wire [`ddr3_ipcore_BANK_WIDTH-1:0]   ddr_ba ;
wire                    tw1174a ;

`ifdef ddr3_ipcore_ROW_WIDTH_12
wire [`ddr3_ipcore_ROW_WIDTH:0]   ddr_addr ;

`else
wire [`ddr3_ipcore_ROW_WIDTH-1:0]   ddr_addr ;

`endif
reg [`ddr3_ipcore_ROW_WIDTH-1:0]   wwe0c50 ;
reg [`ddr3_ipcore_CKE_WIDTH -1:0]  ddr_cke;
reg                    ec31407;
reg                    gd8a038;
reg                    hb501c5, sj80e2f ;
reg                    ux717d, lf38bed;
reg                    rgc5f6f, ls2fb7b;
wire                   mirror_on;
wire                  uveded9;
wire   [4:0]          cmd;
wire   [6:0]           xj7b664;
wire   [8:0]           icdb327;
wire                   ald9938;
wire                   ofcc9c4;
wire                   th64e25;
wire                   ph2712e;
wire                   jr38976;

`ifdef ddr3_ipcore_COL_WIDTH_EQ_12
wire [13:0]            ayc4bb7;

`else
wire [12:0]            ayc4bb7;

`endif
wire [2:0]             ls1e4cb;
wire [`ddr3_ipcore_COL_WIDTH-1:0]   fa76e51 ;
wire                    ngb728a;
wire                    uv7f53b;
reg                     tuca298;
wire                    nr5aa99;
reg                     kf8a61d;
wire                    kq530ed;

`ifdef ddr3_ipcore_COL_WIDTH_EQ_12

`else 

`ifdef ddr3_ipcore_COL_WIDTH_EQ_11

`else

`endif

`endif
reg      ks98768;
reg      uvc3b41;
wire     gd1da0c;
reg      kded064;
reg      ay68325;
reg      al41929;
reg      hdc94d;
wire     pf64a6f;

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_COL_WIDTH_EQ_11

`endif

`ifdef ddr3_ipcore_COL_WIDTH_EQ_12

`endif

`ifdef ddr3_ipcore_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ipcore_COL_WIDTH_EQ_11

`endif

`ifdef ddr3_ipcore_COL_WIDTH_EQ_12

`endif

`ifdef ddr3_ipcore_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif







`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif



`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif



assign ddr_cs_n =(fpaa935 || wl_act)? ay59257 : ((tw1174a)? ba995b1 : je3fcf7 );



assign ddr_ras_n =(su495cc * ww56c5a * ldf3dd3);
assign ddr_cas_n =(rg57306 * anb1689 * czf74f7);
assign ddr_we_n  =(qtcc191 * th5a267 * uvd3def);
assign ddr_ba =(fpaa935 || wl_act)? zz6464 : ((tw1174a)? zm899f1 : off7bef );
assign ddr_addr =(fpaa935 || wl_act)? xl9193f : ((tw1174a)? ic67c59 : kqefbe3);

assign                 mirror_on = ux717d || rgc5f6f;


`ifdef ddr3_ipcore_COL_WIDTH_EQ_12


`else


`endif

assign                 ald9938 = xwe40df || tudf6fb;
assign                 ofcc9c4 = xy206fb || jcfb7da;
assign                 th64e25 = zz37db || aydbed3;
assign                 ph2712e = xy1bedf || rgdf699;
assign                 jr38976 = qia9c25 || of70945;
assign   cmd = {fc2516f, cb9a49f, dm48595, rib2a96, jcfe692};
assign   xj7b664 = {ald9938 ,ofcc9c4 ,th64e25 ,ph2712e ,((gd398ab || encc55d) && wl_act),(fpaa935 && tuf1b3a ), vx948e7};
assign   icdb327 = {ykdefa6,jr38976, hb45bde, lf907b, zkca6a3, qvabc43, vv7bca9, wjf2a70, gb6f7be};




`ifdef ddr3_ipcore_COL_WIDTH_EQ_12
     assign  ayc4bb7  =  {gd1d372[11],lqca1ac,gd1d372[10],gd1d372[`ddr3_ipcore_COL_WIDTH],gd1d372[9:0]};

`else 
  
`ifdef ddr3_ipcore_COL_WIDTH_EQ_11
     assign  ayc4bb7  =  {lqca1ac,gd1d372[10],gd1d372[`ddr3_ipcore_COL_WIDTH],gd1d372[9:0]};  
`else
     assign  ayc4bb7  =  {lqca1ac,1'b0,        gd1d372[`ddr3_ipcore_COL_WIDTH],gd1d372[9:0]};  
`endif


`endif

assign ngb728a = dm48595 | rib2a96;


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       uvc3b41    <=  1'b0;   else if (ks98768 && ux1203a)       uvc3b41    <=  1'b1;   else if (ng358f2)       uvc3b41    <=  1'b0;
end

assign gd1da0c    =  uvc3b41 & ngb728a;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       hb501c5         <=  1'b0;       sj80e2f        <=  1'b0;       ks98768        <=  1'b0;       kded064   <=  1'b0;       ay68325  <=  1'b0;       al41929     <=  1'b0;       hdc94d    <=  1'b0;   end   else begin       hb501c5         <=  ux1203a;       sj80e2f        <=  hb501c5;       ks98768        <=  uv7f53b;       kded064   <=  gd1da0c;       ay68325  <=  kded064;       al41929     <=  uvc3b41;       hdc94d    <=  al41929;   end
end

assign pf64a6f = uvc3b41 | al41929 | hdc94d;



assign uveded9 = (lqca1ac) ? ((hb501c5 & ~pf64a6f) | (gd1da0c & pf64a6f)) : ((sj80e2f & ~pf64a6f) | (gd1da0c & pf64a6f));

assign kq530ed = (hb501c5 & ~pf64a6f) | (gd1da0c & pf64a6f);







always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       wwe0c50    <=  {`ddr3_ipcore_ROW_WIDTH{1'b0}};    else if (coac793 > 1)        if ((dm48595 || rib2a96))  begin            if (lqca1ac) wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] <=  wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] +8;            else wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0]     <=  wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] +4;        end
        else if (!ng358f2 && gd8a038)            wwe0c50    <=  wwe0c50;        else if (ng358f2  ) begin            wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] <=  gd1d372[`ddr3_ipcore_COL_WIDTH -1:0];            wwe0c50[`ddr3_ipcore_ROW_WIDTH -1]   <=  gd1d372[`ddr3_ipcore_COL_WIDTH];        end	else if  (!gd8a038 && !gd1d372[`ddr3_ipcore_COL_WIDTH] ) begin            wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] <=  gd1d372[`ddr3_ipcore_COL_WIDTH -1:0];            wwe0c50[`ddr3_ipcore_ROW_WIDTH -1]   <=  1'b0;	end        else if  (!gd8a038 && gd1d372[`ddr3_ipcore_COL_WIDTH] ) begin            wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] <=  gd1d372[`ddr3_ipcore_COL_WIDTH -1:0];            wwe0c50[`ddr3_ipcore_ROW_WIDTH -1]   <=  1'b0;            	end
   else       wwe0c50    <=  gd1d372;
end assign fa76e51 = (lqca1ac == 1'b1) ? (wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] +8) : (wwe0c50[`ddr3_ipcore_COL_WIDTH -1:0] +4);
 assign uv7f53b   = ((fa76e51 == 'h0) && ngb728a && !(hb501c5 || sj80e2f)) ? 1'b1 : 1'b0; assign nr5aa99    = uv7f53b | tuca298;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       tuca298    <=  1'b0;   else if (uv7f53b)       tuca298    <=  1'b1;   else if (rgd54cf)       tuca298    <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ddr_cke    <=  {`ddr3_ipcore_CKE_WIDTH{1'b0}};   else if (tuf1b3a)       ddr_cke    <=  {`ddr3_ipcore_CKE_WIDTH{1'b1}};   else if (cme50bf)       ddr_cke    <=  {`ddr3_ipcore_CKE_WIDTH{1'b0}};   else if (nr5f942 && !cme50bf)       ddr_cke    <=  {`ddr3_ipcore_CKE_WIDTH{1'b1}};
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       gd8a038    <=  1'b0;   else if ( ng358f2)       gd8a038    <=  1'b0;   else if ((coac793 > 1) && (dm48595 || rib2a96))       gd8a038    <=  1'b1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ec31407    <=  1'b0;   else if ( wl_act && (gd398ab || encc55d))       ec31407    <=  1'b1;   else if ( !(gd398ab || encc55d))       ec31407    <=  1'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       ay59257    <=  'b1;       su495cc   <=  'b1;       rg57306   <=  'b1;       qtcc191    <=  'b1;       zz6464      <=  'b0;       xl9193f    <=  'b0;       ux717d     <=  'b0;    end    else begin       ay59257    <=  shc92b9  ;       su495cc   <=  vv4ae60 ;       rg57306   <=  oub9832 ;       qtcc191    <=  en60c8c ;       zz6464      <=  zz32327   ;       xl9193f    <=  ls8c9fe ;       ux717d     <=  lf38bed;    end
end
always @ (xj7b664 or ald9938 or ofcc9c4 or th64e25 or ph2712e or gd398ab or fpaa935           or tuf1b3a  or mef0d07 or kq62aec or wy15761 or ddr_ba or ddr_addr or zz6464 or xl9193f           or addr_init_0 or addr_init_1 or addr_init_2 or addr_init_3 or tudf6fb or jcfb7da or aydbed3 or rgdf699           ) begin

shc92b9  = {`ddr3_ipcore_CS_WIDTH{1'b1}};
vv4ae60 = 'h1;
oub9832 = 'h1;
en60c8c  = 'h1;
zz32327  =  'h0;
ls8c9fe  =  'h0;
lf38bed = 'h0;      case (xj7b664)        qv90c9f : begin         vv4ae60 =  'h0;         oub9832 =  'h0;         en60c8c  =  'h0;         ls8c9fe  =  addr_init_0;         zz32327    =  3'b0 ;         if (tudf6fb) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b01;

`else 
         shc92b9  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         shc92b9  = 4'b1010;   
`else
         shc92b9  = 1'b0;   
`endif


`endif
         end       end       hq864fc : begin         vv4ae60 =  'h0;         oub9832 =  'h0;         en60c8c  =  'h0;         ls8c9fe  =  addr_init_1;         zz32327    =  3'b001 ;         if (jcfb7da) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b01;

`else 
         shc92b9  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         shc92b9  = 4'b1010;   
`else
         shc92b9  = 1'b0;   
`endif


`endif
         end
       end       lf327e3 : begin         vv4ae60 =  'h0;         oub9832 =  'h0;         en60c8c  =  'h0;         ls8c9fe  =  addr_init_2;         zz32327    =  3'b010 ;         if (aydbed3) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b01;

`else 
         shc92b9  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         shc92b9  = 4'b1010;   
`else
         shc92b9  = 1'b0;   
`endif


`endif
         end
       end
       ng93f1f : begin         vv4ae60 =  'h0;         oub9832 =  'h0;         en60c8c  =  'h0;         ls8c9fe  =  addr_init_3;         zz32327    =  3'b011 ;         if (rgdf699) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b01;

`else 
         shc92b9  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         shc92b9  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         shc92b9  = 4'b1010;   
`else
         shc92b9  = 1'b0;   
`endif


`endif
         end
       end
       oh9f8fb : begin           vv4ae60 =  'h0;           oub9832 =  'h0;           en60c8c  =  'h0;           ls8c9fe  =  wy15761;           if (gd398ab)             zz32327    =  3'b001 ;           else             zz32327    =  3'b010 ;


`ifdef ddr3_ipcore_CS_WIDTH_2
          if (!kq62aec[1])             lf38bed = 1'b1;          else             lf38bed = 1'b0; 
`else
       
`ifdef ddr3_ipcore_CS_WIDTH_4
             if (!kq62aec[1] || !kq62aec[3])                lf38bed = 1'b1;             else                lf38bed = 1'b0;        
`else
                lf38bed = 1'b0;        
`endif


`endif
           shc92b9  =  kq62aec;       end       blfc7dd : begin

         shc92b9  = {`ddr3_ipcore_CS_WIDTH{1'b0}} ;         vv4ae60 =  'h1;         oub9832 =  'h1;         en60c8c  =  'h1;         zz32327    =   zz6464;         ls8c9fe  =   xl9193f;       end       nre3eee : begin         shc92b9  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         vv4ae60 =  'h1;         oub9832 =  'h1;         en60c8c  =  'h0;         ls8c9fe  = 'h400 ;       end       default: begin

         shc92b9  = {`ddr3_ipcore_CS_WIDTH{1'b1}} ;         vv4ae60 =  'h1;         oub9832 =  'h1;         en60c8c  =  'h1;         zz32327    =  zz6464 ;         ls8c9fe  =  xl9193f;       end      endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       ba995b1    <=  'b1;       ww56c5a   <=  'b1;       anb1689   <=  'b1;       th5a267    <=  'b1;       zm899f1      <=  'b0;       ic67c59    <=  'b0;    end    else begin       ba995b1    <=  zkcad8b  ;       ww56c5a   <=  gqb62d1 ;       anb1689   <=  bn8b44c ;       th5a267    <=  icd133e ;       zm899f1      <=  ay4cf8b   ;       ic67c59    <=  gq3e2c9 ;    end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       kf8a61d    <=  'b0;    else if ((cmd == rt5a190) && (nr5aa99 == 1'b1))       kf8a61d    <=  'b1;    else if (ng358f2)       kf8a61d    <=  'b0;
end

always @ (cmd or coac793 or ng358f2 or wwe0c50           or kq530ed or lqca1ac or mef0d07 or ls1e4cb or zm899f1           or ic67c59 or hq83a6e or gd1d372 or pfe9b95 or  uveded9 or ayc4bb7 or nr5aa99 or kf8a61d or uv7f53b) begin
zkcad8b  = {`ddr3_ipcore_CS_WIDTH{1'b1}};
gqb62d1 = 'h1;
bn8b44c = 'h1;
icd133e  = 'h1;
ay4cf8b  =  'h0;
gq3e2c9  =  'h0;      case (cmd)        wy2b432 : begin         zkcad8b  =  mef0d07;         gqb62d1 =  'h0;         bn8b44c =  'h1;         icd133e  =  'h0;         ay4cf8b    =  pfe9b95 ;          gq3e2c9  =  0;
         ay4cf8b    =  (nr5aa99 == 1'b1) ? pfe9b95 + 1 : pfe9b95 ;        end       rt5a190 : begin         zkcad8b  =  mef0d07;         gqb62d1 =  'h0;         bn8b44c =  'h1;         icd133e  =  'h1;
         ay4cf8b    =  (nr5aa99 == 1'b1) ? pfe9b95 + 1 : pfe9b95 ;         gq3e2c9  =  ((nr5aa99 == 1'b1) && (pfe9b95 == 3'h7)) ? hq83a6e+1 : hq83a6e;       end       tud0c86 : begin         zkcad8b  =  mef0d07;         gqb62d1 =  'h1;         bn8b44c =  'h0;         icd133e  =  'h0;
         ay4cf8b    =  (kf8a61d) ? pfe9b95 + 1 : pfe9b95 ;
 if( coac793 >1) begin            gq3e2c9[9:0] =  wwe0c50[9:0];            gq3e2c9[12]  = lqca1ac;            
`ifdef ddr3_ipcore_COL_WIDTH_EQ_11
            gq3e2c9[11]  = wwe0c50[10];            
`endif
            
`ifdef ddr3_ipcore_COL_WIDTH_EQ_12
            gq3e2c9[11]  = wwe0c50[10];            gq3e2c9[13]  = wwe0c50[11];            
`endif

            if (kq530ed || wwe0c50[`ddr3_ipcore_ROW_WIDTH - 1] || uv7f53b) begin               gq3e2c9[10]  =  gd1d372[`ddr3_ipcore_COL_WIDTH];                      end            else begin               gq3e2c9[10]  =  1'b0;            end end         else begin            
`ifdef ddr3_ipcore_COL_WIDTH_EQ_12
            gq3e2c9[13:0]  = ayc4bb7;            
`else
            gq3e2c9[12:0]  = ayc4bb7;            
`endif
         end       end
       fc86432 : begin         zkcad8b  =  mef0d07;         gqb62d1 =  'h1;         bn8b44c =  'h0;         icd133e  =  'h1;
         ay4cf8b    =  (kf8a61d) ? pfe9b95 + 1 : pfe9b95 ; if( coac793 >1) begin            gq3e2c9[9:0]  =  wwe0c50[9:0];            gq3e2c9[12]  = lqca1ac   ;            
`ifdef ddr3_ipcore_COL_WIDTH_EQ_11
            gq3e2c9[11]  = wwe0c50[10];            
`endif
            
`ifdef ddr3_ipcore_COL_WIDTH_EQ_12
            gq3e2c9[11]  = wwe0c50[10];            gq3e2c9[13]  = wwe0c50[11];            
`endif

            if (uveded9 || wwe0c50[`ddr3_ipcore_ROW_WIDTH -1] || uv7f53b) begin               gq3e2c9[10]  =  gd1d372[`ddr3_ipcore_COL_WIDTH];                      end            else    begin               gq3e2c9[10]  =  1'b0;            end         end         else begin            
`ifdef ddr3_ipcore_COL_WIDTH_EQ_12
            gq3e2c9[13:0]  = ayc4bb7;            
`else
            gq3e2c9[12:0]  = ayc4bb7;            
`endif
         end       end
       vx32193 : begin         zkcad8b  = {`ddr3_ipcore_CS_WIDTH{1'b0}} ;         gqb62d1 =  'h1;         bn8b44c =  'h1;         icd133e  =  'h1;         ay4cf8b    =   zm899f1;         gq3e2c9  =   ic67c59;       end       default: begin         zkcad8b  = {`ddr3_ipcore_CS_WIDTH{1'b0}} ;         gqb62d1 =  'h1;         bn8b44c =  'h1;         icd133e  =  'h1;         ay4cf8b    =  zm899f1 ;         gq3e2c9  =  ic67c59;       end      endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       je3fcf7    <=  'b1;       ldf3dd3   <=  'b1;       czf74f7   <=  'b1;       uvd3def    <=  'b1;       off7bef      <=  'b0;       kqefbe3    <=  'b0;       rgc5f6f    <=  'b0;    end    else begin       je3fcf7    <=  xwfe7ba  ;       ldf3dd3   <=  lf9ee9e ;       czf74f7   <=  vxba7bd ;       uvd3def    <=  tj9ef7d ;       off7bef      <=  hqbdf7c   ;       kqefbe3    <=  ay7df19 ;       rgc5f6f    <=  ls2fb7b;    end
end

always @ (icdb327 or mef0d07 or ls1e4cb or off7bef or kqefbe3           or gd1d372 or pfe9b95 or of70945) begin
xwfe7ba  = {`ddr3_ipcore_CS_WIDTH{1'b1}};
lf9ee9e = 'h1;
vxba7bd = 'h1;
tj9ef7d  = 'h1;
hqbdf7c  =  'h0;
ay7df19  =  'h0;
ls2fb7b = 1'b0;      case (icdb327)        rgfbbb8  : begin         lf9ee9e =  'h0;         vxba7bd =  'h0;         tj9ef7d  =  'h0;         hqbdf7c    =  pfe9b95 ;         ay7df19  =  {ls1e4cb,gd1d372[9:0]};
         if (of70945) begin          ls2fb7b = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         xwfe7ba  = 2'b01;

`else 
         xwfe7ba  = 4'b0101;

`endif
         end         else begin          ls2fb7b = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         xwfe7ba  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         xwfe7ba  = 4'b1010;   
`else
         xwfe7ba  = 1'b0;   
`endif


`endif
         end
       end       lddddc2  : begin         xwfe7ba  =  'h0;         lf9ee9e =  'h0;         vxba7bd =  'h0;         tj9ef7d  =  'h1;         ay7df19  =  'h600 ;       end       xweee16  : begin         xwfe7ba  =  'h0;         lf9ee9e =  'h0;         vxba7bd =  'h0;         tj9ef7d  =  'h1;         ay7df19  =  'h600 ;       end       ay770b3  : begin         xwfe7ba  =  'h0;         lf9ee9e =  'h1;         vxba7bd =  'h1;         tj9ef7d  =  'h1;         ay7df19  =  'h600 ;       end       dob8599  : begin         lf9ee9e =  'h0;         vxba7bd =  'h1;         tj9ef7d  =  'h0;         hqbdf7c    =  pfe9b95 ;         ay7df19[10] = 1'b1;         xwfe7ba  =  'b0;       end       dzc2cca  : begin         xwfe7ba  =  'h0;         lf9ee9e =  'h1;         vxba7bd =  'h1;         tj9ef7d  =  'h1;         ay7df19  =  'h600 ;       end       bn16656  : begin         xwfe7ba  = 'h0;         lf9ee9e =  'h1;         vxba7bd =  'h1;         tj9ef7d  =  'h1;         ay7df19  =  'h600 ;       end       qib32b6  : begin         xwfe7ba  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         lf9ee9e =  'h1;         vxba7bd =  'h1;         tj9ef7d  =  'h0;         ay7df19  = 'h400 ;       end       uk1f777  : begin         xwfe7ba  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         lf9ee9e =  'h1;         vxba7bd =  'h1;         tj9ef7d  =  'h0;         ay7df19  =  'h0 ;      end       default: begin         xwfe7ba  = {`ddr3_ipcore_CS_WIDTH{1'b0}} ;         lf9ee9e =  'h1;         vxba7bd =  'h1;         tj9ef7d  =  'h1;         hqbdf7c    =  off7bef ;         ay7df19  =  kqefbe3;       end      endcase
end

endmodule































`timescale 1 ns / 100 ps
module ls11171_ddr3_ipcore (

   clk,
   rst_n,
   datain,
   dmsel,
   tja0e50,
   oh7286,
   oh39435,
   nt163cf,
   kfb1e7e,
   DataRdy2Data,

   wl_act,
   zm11cc,
   ux8e62,
   

  datain_valid,      
  ddr_dq_out,
  dqs_out,        
  dqs_out_en,     
  dqs_out_en_erly, 
  dq_out_en,      
  ddr_dqm,
  pio_read,
  cal_bc4 
   );
input                                 clk;
input                                 rst_n;
input   [`ddr3_ipcore_DSIZE -1:0]                 datain;
input   [`ddr3_ipcore_USER_DM -1:0]               dmsel;
input                                 tja0e50;
input                                 oh7286;
input                                 oh39435;
input [`ddr3_ipcore_RL_WIDTH-1:0]                 nt163cf;
input [`ddr3_ipcore_WL_WIDTH-1:0]                 kfb1e7e;
input   [1:0]        DataRdy2Data;
input                                 wl_act;
input                                 zm11cc;
input [`ddr3_ipcore_DQS_WIDTH-1:0]                ux8e62;
output                                datain_valid;
output  [`ddr3_ipcore_DSIZE -1:0]                 ddr_dq_out;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]              dqs_out;
output                                dqs_out_en;
output                                dqs_out_en_erly;
output                                dq_out_en;
output  [`ddr3_ipcore_USER_DM -1:0]               ddr_dqm;
output                                pio_read;
output                                cal_bc4 ;
reg [3:0]                             nt16806;
reg [3:0]                             ohb4037;
reg [3:0]                             jra01bc;
reg [3:0]                             oude7;
reg [3:0]                             ph6f39;
reg [3:0]                             tj379ce;
reg [3:0]                             ukbce76;
reg [3:0]                             mre73b1;
reg [3:0]                             kf39d8c;
reg [3:0]                             iccec65;
reg [`ddr3_ipcore_DSIZE -1:0]                     ddr_dq_out  ;
reg [`ddr3_ipcore_USER_DM -1:0]                   ddr_dqm ;
reg                                   fc8ca1d,yx650eb,hd2875d ;
reg                                   cm43aef;
reg                                   dqs_out_en ;
wire                                  dqs_out_en_erly   ;
reg [`ddr3_ipcore_RL_WIDTH-1:0]                   ne5de2b;
reg [`ddr3_ipcore_WL_WIDTH-1:0]                   meef15a;
reg                                   me78ad0;
reg                                   zkc5681;
reg                                   sw2b40a;
reg                                   ld5a050;
reg                                   xwd0286;
reg                                   rv81433;
reg                                   gqa19e;
reg                                   hb50cf1;
reg                                   ng8678e;
reg                                   gd33c73;
reg                                   xl9e39c;
reg                                   psf1ce6;
reg                                   vx8e733;
reg                                   vi7399f;
reg                                   ls9ccfa;
wire                                  zxe67d2;
wire                                  kf33e96;
wire                                  cb9f4b4;
wire                                  cmfa5a4;
wire                                  zxd2d21;
wire                                  fc9690f;
wire                                  cbb487b;
wire                                  uxa43dd;
wire                                  ym21eed;
wire                                  aaf768;
reg                                   ld7bb41;
reg                                   pfdda0e;
reg                                   ened076;
reg                                   ea683b5;
reg                                   gb41da9;
reg                                   baed4d;
reg                                   ne76a6a;
reg                                   bnb5352;
reg                                   gqa9a96;
reg                                   rg4d4b0;
wire                                  mr6a582;
wire                                  ne52c14;
wire                                  ng960a3;
wire                                  lfb051a;
wire                                  ie828d6;
wire                                  ng146b0;
wire                                  mga3583;
wire                                  ie1ac18;
wire                                  end60c1;
wire                                  rvb060c;
wire                                  fc83066;
wire                                  ux18333;
wire                                  datain_valid;
reg                                   lfcce9;
reg                                   tu6674f, oh33a7a;
reg  [`ddr3_ipcore_DQS_WIDTH-1:0]                 dqs_out ;
wire                                  pfe9ea1;
wire                                  nr4f50e;
wire                                  pio_read  ;
wire                                  dq_out_en ;
reg                                   uxa1de1, vkef0c, qg77862, wybc310, xwe1880;
reg                                   vxc402, qg62016, ou100b0;
reg                                   wl80581;
wire                                  cal_bc4 ;
reg                                   xl16064 ;
wire                                  ntb0326, bn81936;
  









assign ntb0326 =  !(fc8ca1d || yx650eb);
assign bn81936 =  !fc8ca1d ;
assign      zxe67d2 = ((nt16806 == meef15a) && meef15a != 0 );
assign      kf33e96 = ((ohb4037 == meef15a) && meef15a != 0 );
assign      cb9f4b4 = ((jra01bc == meef15a) && meef15a != 0 );
assign      cmfa5a4 = ((oude7 == meef15a) && meef15a != 0 );
assign      zxd2d21 = ((ph6f39 == meef15a) && meef15a != 0 );


assign      mr6a582 = (nt16806 == 4'b0 ) ? 0: 1;
assign      ne52c14 = (ohb4037 == 4'b0 ) ? 0: 1;
assign      ng960a3 = (jra01bc == 4'b0 ) ? 0: 1;
assign      lfb051a = (oude7 == 4'b0 ) ? 0: 1;
assign      ie828d6 = (ph6f39 == 4'b0 ) ? 0: 1;
assign      ng146b0 = !mr6a582 && !ne52c14 && !ng960a3 && !lfb051a && !ie828d6 ;

assign      mga3583 = (tj379ce == 4'b0 ) ? 0: 1;
assign      ie1ac18 = (ukbce76 == 4'b0 ) ? 0: 1;
assign      end60c1 = (mre73b1 == 4'b0 ) ? 0: 1;
assign      rvb060c = (kf39d8c == 4'b0 ) ? 0: 1;
assign      fc83066 = (iccec65 == 4'b0 ) ? 0: 1;
assign      fc9690f = (nt16806 == (kfb1e7e - 3));
assign      cbb487b = (ohb4037 == (kfb1e7e - 3));
assign      uxa43dd = (jra01bc == (kfb1e7e - 3));
assign      ym21eed = (oude7 == (kfb1e7e - 3));
assign      aaf768 = (ph6f39 == (kfb1e7e - 3));

assign      ux18333 = !mga3583 && !ie1ac18 && !end60c1 && !rvb060c && !fc83066 ;
assign      pfe9ea1=me78ad0 || zkc5681 || sw2b40a || ld5a050 || xwd0286;
                                       
assign      cal_bc4 = vkef0c;
assign      nr4f50e=zxe67d2 || kf33e96 || cb9f4b4 || cmfa5a4 || zxd2d21;



assign      datain_valid = lfcce9;
assign      pio_read = ld7bb41 || pfdda0e || ened076 || ea683b5 || gb41da9;
assign      dqs_out_en_erly = !dqs_out[0];
assign      dq_out_en = dqs_out_en;




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin        ddr_dq_out    <=  'b0;        ddr_dqm       <=  'b0;   end  else if ((DataRdy2Data == 0) && datain_valid) begin        ddr_dq_out    <=  datain;        ddr_dqm       <=  dmsel;   end   else if ((DataRdy2Data == 1) && (fc8ca1d || yx650eb)) begin        ddr_dq_out    <=  datain;        ddr_dqm       <=  dmsel;   end   else if ((DataRdy2Data == 2 ) &&  (fc8ca1d || yx650eb))  begin        ddr_dq_out    <=  datain;        ddr_dqm       <=  dmsel;   end   else begin        ddr_dq_out    <=  ddr_dq_out ;        ddr_dqm       <=  ddr_dqm;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ne5de2b  <=  'b0;   else if (nt163cf > 2)	ne5de2b  <=  (nt163cf-2);
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	meef15a  <=  'b0;   else if (kfb1e7e > 2)	meef15a  <=  (kfb1e7e-2);
end






always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	nt16806  <=  'b0;  else if (me78ad0)	nt16806  <=  'b0;  else if ((tja0e50 && (ng146b0 ||ie828d6)) || mr6a582)     nt16806  <= nt16806 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ohb4037  <=  'b0;   else if (zkc5681)	ohb4037  <=  'b0;   else if ((tja0e50 && mr6a582) || ne52c14)     ohb4037  <= ohb4037 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	jra01bc  <=  'b0;   else if (sw2b40a)	jra01bc  <=  'b0;   else if ((tja0e50 && ne52c14) || ng960a3)     jra01bc  <= jra01bc + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	oude7  <=  'b0;  else if (ld5a050)	oude7  <=  'b0;   else if ((tja0e50 && ng960a3) || lfb051a)     oude7  <= oude7 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ph6f39  <=  'b0;   else if (xwd0286)	ph6f39  <=  'b0;   else if ((tja0e50 && lfb051a) ||  ie828d6)     ph6f39  <= ph6f39 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	tj379ce  <=  'b0;   else if (ld7bb41)	tj379ce  <=  'b0;   else if ((oh7286 && (ux18333 || fc83066)) || mga3583)     tj379ce  <= tj379ce + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ukbce76  <=  'b0;   else if (pfdda0e)	ukbce76  <=  'b0;   else if ((oh7286 && mga3583) || ie1ac18)     ukbce76  <= ukbce76 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	mre73b1  <=  'b0;  else if (ened076)	mre73b1  <=  'b0;   else if ((oh7286 && ie1ac18) || end60c1)     mre73b1  <= mre73b1 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	kf39d8c  <=  'b0;   else if (ea683b5)	kf39d8c  <=  'b0;   else if ((oh7286 && end60c1) || rvb060c)     kf39d8c  <= kf39d8c + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	iccec65  <=  'b0;   else if (gb41da9)	iccec65  <=  'b0;   else if ((oh7286 && rvb060c) || fc83066)     iccec65  <= iccec65 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	fc8ca1d  <=  'b0;   else if (pfe9ea1)	fc8ca1d  <=  'b1;   else	fc8ca1d  <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	cm43aef  <=  'b0;   else if (nr4f50e)	cm43aef  <=  'b1;   else	cm43aef  <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin  if (!rst_n) begin	dqs_out <=  'b0;            dqs_out_en <=  1'b1;  end  else if ( wl_act && zm11cc)  begin           dqs_out <= ux8e62;           dqs_out_en <= 1'b0;  end  else  case(kfb1e7e)     3:  if (vkef0c) begin                dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || cm43aef}};                dqs_out_en <= !fc8ca1d ;          end          else   begin               dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || yx650eb || cm43aef}};               dqs_out_en <= !(fc8ca1d || yx650eb);         end     4:  if (wybc310) begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || cm43aef}};              dqs_out_en <= !fc8ca1d ;          end          else   begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || yx650eb || cm43aef}};              dqs_out_en <= !(fc8ca1d || yx650eb);         end     5: if (xwe1880) begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || cm43aef}};              dqs_out_en <= !fc8ca1d ;          end          else  begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || yx650eb || cm43aef}};              dqs_out_en <= !(fc8ca1d || yx650eb);          end     6:  if (vxc402) begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || cm43aef}};              dqs_out_en <= !fc8ca1d ;          end          else  begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || yx650eb || cm43aef}};              dqs_out_en <= !(fc8ca1d || yx650eb);         end     7: if (qg62016) begin              dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || cm43aef}};              dqs_out_en <= !fc8ca1d ;        end        else  begin             dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || yx650eb || cm43aef}};             dqs_out_en <= !(fc8ca1d || yx650eb);        end     default:if (vkef0c)  begin             dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || cm43aef}};             dqs_out_en <= !fc8ca1d ;          end          else    begin             dqs_out <= {`ddr3_ipcore_DQS_WIDTH{fc8ca1d || yx650eb || cm43aef}};             dqs_out_en <= !(fc8ca1d || yx650eb);          end  endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     yx650eb  <=  'b0;     hd2875d  <=  'b0;   end   else begin     yx650eb  <=  fc8ca1d;     hd2875d  <=  (fc8ca1d || yx650eb);   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     ld7bb41  <=  1'b0;     baed4d  <=  1'b0;   end   else if ((tj379ce == ne5de2b)&& (|tj379ce))  begin     ld7bb41  <=  1'b1;     baed4d  <=  1'b1;   end   else begin     ld7bb41  <=  1'b0;     baed4d  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     pfdda0e  <=  1'b0;     ne76a6a  <=  1'b0;   end   else if ((ukbce76 == ne5de2b) && (|ukbce76)) begin     pfdda0e  <=  1'b1;     ne76a6a  <=  1'b1;   end   else begin     pfdda0e  <=  1'b0;     ne76a6a  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     ened076  <=  1'b0;     bnb5352  <=  1'b0;   end   else if ((mre73b1 == ne5de2b)  && (|mre73b1))begin     ened076  <=  1'b1;     bnb5352  <=  1'b1;   end   else begin     ened076  <=  1'b0;     bnb5352  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     ea683b5  <=  1'b0;     gqa9a96  <=  1'b0;   end   else if ((kf39d8c == ne5de2b) && (|kf39d8c)) begin     ea683b5  <=  1'b1;     gqa9a96  <=  1'b1;   end   else begin     ea683b5  <=  1'b0;     gqa9a96  <=  1'b0;  end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     gb41da9  <=  1'b0;     rg4d4b0  <=  1'b0;   end   else if ((iccec65 == ne5de2b) && (|iccec65))begin     gb41da9  <=  1'b1;     rg4d4b0  <=  1'b1;   end   else begin     gb41da9  <=  1'b0;     rg4d4b0  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	me78ad0  <=  1'b0;   else if ((nt16806 == meef15a) && (|nt16806) )     me78ad0  <=  1'b1;   else	me78ad0  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     zkc5681  <=  1'b0;   else if ((ohb4037 == meef15a) && (|ohb4037) )     zkc5681  <=  1'b1;   else     zkc5681  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     sw2b40a  <=  1'b0;   else if ((jra01bc == meef15a) && (|jra01bc) )     sw2b40a  <=  1'b1;   else     sw2b40a  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     ld5a050  <=  1'b0;   else if ((oude7 == meef15a) && (|oude7) )     ld5a050  <=  1'b1;   else     ld5a050  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     xwd0286  <=  1'b0;   else if ((ph6f39 == meef15a) && (|ph6f39) )     xwd0286  <=  1'b1;   else     xwd0286  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	wl80581 <=  1'b0;   else if (tja0e50 && fc8ca1d)	wl80581 <=  1'b1;   else	wl80581 <=  1'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vkef0c <=  1'b0;   else if (tja0e50  || oh7286)      vkef0c <=  oh39435;   else      vkef0c <=  vkef0c;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin      qg77862 <=  1'b0;      wybc310 <=  1'b0;      xwe1880 <=  1'b0;      vxc402 <=  1'b0;      qg62016 <=  1'b0;      ou100b0 <=  1'b0;   end   else begin      qg77862 <=  vkef0c;      wybc310 <=  qg77862;      xwe1880 <=  wybc310;      vxc402 <=  xwe1880;      qg62016 <=  vxc402;      ou100b0 <=  qg62016;  end
end
always @ (negedge rst_n or posedge clk) begin if (!rst_n) begin     tu6674f  <= 1'b0;     oh33a7a  <= 1'b0; end else begin     tu6674f <= tja0e50;     oh33a7a <= tu6674f; end
end

always @ (negedge rst_n or posedge clk) begin if (!rst_n)     xl16064  <= 1'b0;  else if (!pio_read) begin  case (nt163cf)   3: xl16064  <= (vkef0c);   4: xl16064  <= (qg77862);   5:  xl16064  <= (qg77862);   6: xl16064  <= (wybc310);   7: xl16064  <= (xwe1880);   8: xl16064  <= (vxc402);   9: xl16064  <= (qg62016);   10: xl16064  <= (ou100b0);   default:xl16064  <= (vkef0c); endcase
end
end
always @ (negedge rst_n or posedge clk) begin if (!rst_n) begin      rv81433 <=  1'b0;      gqa19e <=  1'b0;      hb50cf1 <=  1'b0;      ng8678e <=  1'b0;      gd33c73 <=  1'b0;      xl9e39c <=  1'b0;      psf1ce6 <=  1'b0;      vx8e733 <=  1'b0;      vi7399f <=  1'b0;      ls9ccfa <=  1'b0;
 end else if (kfb1e7e > 3) begin      rv81433 <=  fc9690f ;      gqa19e <=  cbb487b ;      hb50cf1 <=  uxa43dd ;      ng8678e <=  ym21eed ;      gd33c73 <=  aaf768 ;      xl9e39c <=  rv81433 ;      psf1ce6 <=  gqa19e ;      vx8e733 <=  hb50cf1 ;      vi7399f <=  ng8678e ;      ls9ccfa <=  gd33c73 ; end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      lfcce9 <=  1'b0;   else begin   case(kfb1e7e)     3: case({DataRdy2Data, oh39435})        3'b011: lfcce9 <=  tu6674f;        3'b010: lfcce9 <=  tu6674f || oh33a7a;        3'b101: lfcce9 <=  tja0e50;        3'b100: lfcce9 <=  tja0e50 || tu6674f ;        default : lfcce9 <=  1'b0;        endcase     5: case({DataRdy2Data, qg77862})        3'b011: lfcce9 <=  (rv81433 || gqa19e || hb50cf1 ||ng8678e ||gd33c73 );        3'b010: lfcce9 <=  (rv81433 || xl9e39c || gqa19e || psf1ce6 ||                      hb50cf1 || vx8e733 || ng8678e || vi7399f ||                      gd33c73 || ls9ccfa  );        3'b101: lfcce9 <=  (fc9690f ||cbb487b || uxa43dd ||ym21eed || aaf768  );        3'b100: lfcce9 <=  (fc9690f || rv81433 ||cbb487b || gqa19e ||                          uxa43dd || hb50cf1 || ym21eed || ng8678e ||                          aaf768 || gd33c73  )  ;        default : lfcce9 <=  1'b0;        endcase      4: case({DataRdy2Data, vkef0c})        3'b011: lfcce9 <=  (rv81433 || gqa19e || hb50cf1 ||ng8678e ||gd33c73 );        3'b010: lfcce9 <=  (rv81433 || xl9e39c || gqa19e || psf1ce6 ||                      hb50cf1 || vx8e733 || ng8678e || vi7399f ||                      gd33c73 || ls9ccfa  );        3'b101: lfcce9 <=  (fc9690f ||cbb487b || uxa43dd ||ym21eed || aaf768  );        3'b100: lfcce9 <=  (fc9690f || rv81433 ||cbb487b || gqa19e ||                          uxa43dd || hb50cf1 || ym21eed || ng8678e ||                          aaf768 || gd33c73  )  ;        default : lfcce9 <=  1'b0;        endcase      6: case({DataRdy2Data, wybc310})        3'b011: lfcce9 <=  (rv81433 || gqa19e || hb50cf1 ||ng8678e ||gd33c73 );        3'b010: lfcce9 <=  (rv81433 || xl9e39c || gqa19e || psf1ce6 ||                      hb50cf1 || vx8e733 || ng8678e || vi7399f ||                      gd33c73 || ls9ccfa  );        3'b101: lfcce9 <=  (fc9690f ||cbb487b || uxa43dd ||ym21eed || aaf768  );        3'b100: lfcce9 <=  (fc9690f || rv81433 ||cbb487b || gqa19e ||                          uxa43dd || hb50cf1 || ym21eed || ng8678e ||                          aaf768 || gd33c73  )  ;        default : lfcce9 <=  1'b0;        endcase      7: case({DataRdy2Data, xwe1880})        3'b011: lfcce9 <=  (rv81433 || gqa19e || hb50cf1 ||ng8678e ||gd33c73 );        3'b010: lfcce9 <=  (rv81433 || xl9e39c || gqa19e || psf1ce6 ||                      hb50cf1 || vx8e733 || ng8678e || vi7399f ||                      gd33c73 || ls9ccfa  );        3'b101: lfcce9 <=  (fc9690f ||cbb487b || uxa43dd ||ym21eed || aaf768  );        3'b100: lfcce9 <=  (fc9690f || rv81433 ||cbb487b || gqa19e ||                          uxa43dd || hb50cf1 || ym21eed || ng8678e ||                          aaf768 || gd33c73  )  ;        default : lfcce9 <=  1'b0;        endcase       default:case({DataRdy2Data, oh39435})        3'b011: lfcce9 <=  tu6674f;        3'b010: lfcce9 <=  tu6674f || oh33a7a;        3'b101: lfcce9 <=  tja0e50;        3'b100: lfcce9 <=  tja0e50 || tu6674f ;        default : lfcce9 <=  1'b0;        endcase   endcase   end
end
endmodule































`timescale 1 ns / 100 ps
module end31ae_ddr3_ipcore (

   clk,
   rst_n,
   param_trcd,
   param_trp,
   param_twr,
   param_tras,
   param_trc,
   param_trrd,
   param_trtp,
   param_twtr,
   hd32ebd,
   vxaa67b,
   cb9a49f,
   an85ed5,
   fc2516f,
   lsad5da,
   jcfe692,
   tja0e50,
   oh7286,
   sjbb4ea,
   by5769d,
   
   coac793,
   zzaa6bd,
   shedc96,
   epb1e42, 
   kf8f215,
   lq790ad,
   pfc856a,
   vi42b56,   
   nr5aa99,   
   

   nt163cf, 
   kfb1e7e,
   ngbdc37,
   hoee1bb,
   al70dda,
   do86ed5, 
   bn376aa,
   mtbb557,
   zkdaabd,
   jcd55eb,
   jraaf5b,
   tu57adf,
      
   jebd6fb,
   xweb7da,
   yx5bed2,
   ng358f2, 
   tuda553,
   xjc841a,
   rd_odd,

   ux1203a
);
input                           clk;
input                           rst_n;
input                           hd32ebd;
input                           vxaa67b;
input                           cb9a49f;
input                           an85ed5;
input                           fc2516f;
input                           lsad5da;
input                           jcfe692;
input                           tja0e50;
input                           oh7286;
input                           sjbb4ea;
input                           by5769d;
input [5:0]                     coac793;
input                           zzaa6bd;
input                           shedc96;
input [`ddr3_ipcore_AL_WIDTH-1:0]           epb1e42;
input [`ddr3_ipcore_CL_WIDTH-1:0]           kf8f215;
input                           lq790ad;
input [`ddr3_ipcore_CWL_WIDTH-1:0]          pfc856a;
input                           vi42b56;
input                           nr5aa99;
input   [`ddr3_ipcore_TRCD_WIDTH-1:0]       param_trcd;
input   [`ddr3_ipcore_TRP_WIDTH-1:0]        param_trp;
input   [2:0]                   param_twr;
input   [`ddr3_ipcore_TRAS_WIDTH-1:0]       param_tras;
input   [`ddr3_ipcore_TRC_WIDTH-1:0]        param_trc;
input   [`ddr3_ipcore_TRRD_WIDTH-1:0]       param_trrd;
input   [`ddr3_ipcore_TRTP_WIDTH-1:0]       param_trtp;
input   [`ddr3_ipcore_TWTR_WIDTH-1:0]       param_twtr;
output [`ddr3_ipcore_RL_WIDTH-1:0]          nt163cf;
output [`ddr3_ipcore_WL_WIDTH-1:0]          kfb1e7e;
output                          ngbdc37 ;
output                          hoee1bb ;
output                          al70dda ;
output                          do86ed5 ;
output                          bn376aa ;
output                          mtbb557 ;
output                          zkdaabd ;
output                          jcd55eb ;
output                          jraaf5b ;
output                          tu57adf ;
output                          jebd6fb ;
output                          xweb7da ;
output                          yx5bed2 ;
output                          ng358f2 ;
output                          tuda553 ;
output                          xjc841a;
output                          rd_odd ;
output                          ux1203a;
reg     [`ddr3_ipcore_TRCD_WIDTH-1:0]       vka21d1;
reg     [`ddr3_ipcore_TRCD_WIDTH-1:0]       co10e8a;
reg     [`ddr3_ipcore_TRP_WIDTH-1:0]        ym87450;
reg     [`ddr3_ipcore_TWR_WIDTH+4 :0]       pu3a281;
reg     [`ddr3_ipcore_TWR_WIDTH+4 :0]       wwd140b;
reg     [`ddr3_ipcore_TWR_WIDTH+4 :0]       ir8a059;
reg     [`ddr3_ipcore_TRAS_WIDTH-1:0]       xj502cd;
reg     [`ddr3_ipcore_TRC_WIDTH-1:0]        rv8166f;
reg     [`ddr3_ipcore_TRRD_WIDTH-1:0]       hqb37e;
reg     [`ddr3_ipcore_TRTP_WIDTH+3:0]       me59bf3;
reg     [`ddr3_ipcore_TRTP_WIDTH+3:0]       hbcdf98;
reg     [`ddr3_ipcore_TWTR_WIDTH+3:0]       of6fcc7;
reg     [`ddr3_ipcore_TWTR_WIDTH+3:0]       jp7e63d;
reg     [`ddr3_ipcore_RL_WIDTH-1:0]         dzf31ef;
reg     [`ddr3_ipcore_RL_WIDTH-1:0]         aa98f7f;
reg     [`ddr3_ipcore_RL_WIDTH-1:0]         pfc7bf8;
reg     [`ddr3_ipcore_RL_WIDTH-1:0]         tj3dfc6;
reg                             cmefe37;
reg                             qt7f1b9;
reg                             gbf8dcd;
reg     [`ddr3_ipcore_CL_WIDTH-1:0]         enc6e6d;
reg     [`ddr3_ipcore_CL_WIDTH-1:0]         jr3736c;
reg     [`ddr3_ipcore_CWL_WIDTH-1:0]        wyb9b67;
reg     [`ddr3_ipcore_RL_WIDTH-1:0]         nt163cf;
reg     [`ddr3_ipcore_WL_WIDTH-1:0]         kfb1e7e;
reg     [5:0]                   rg6ce78;
reg                             ng358f2;
reg                             sj39e10;
reg                             vicf085;
reg                             ui7842b;
reg                             jpc2158;
reg                             xweb7da;
reg                             yx5bed2;
wire                            xjc841a;
reg                             by58e20, xjc7102;
reg                             jr38817, ayc40bf;
reg                             tuda553;
reg                             ux1203a;
reg                             ir17e1c;
reg                             bnbf0e5;
reg                             qtf872f;
reg                             czc397c;
reg                             tj1cbe4;
reg                             ice5f26;
reg                             do2f930;
reg                             xw7c983;
reg                             ngbdc37;
reg                             hoee1bb;
reg                             al70dda;
reg                             zkdaabd;
reg                             jcd55eb;
reg                             bn376aa;
reg                             mtbb557;
reg                             jraaf5b;
reg                             tu57adf ;
reg                             jebd6fb;
reg                             do86ed5;
wire                            rd_odd;
reg                             zkcad23;
reg                             ww5691a;
reg                             irb48d1;
reg                             qva468d;

`ifdef ddr3_ipcore_ECP3_SP2

`else

`endif
























always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      zkcad23 <= 1'b1;   end   else if (cb9a49f) begin      zkcad23 <= zzaa6bd;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ww5691a <= 1'b1;      irb48d1        <= 1'b0;   end   else begin      ww5691a <= zkcad23;      irb48d1        <= cb9a49f;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      qva468d    <= 1'b0;   end   else if (irb48d1) begin      qva468d    <= ~(zkcad23 ^ ww5691a);   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      vka21d1 <=  'b0;      sj39e10 <=  'b0;   end   else if (ir17e1c) begin      vka21d1 <=  'b0;      sj39e10 <=  'b0;   end   else if ( (cb9a49f && !sj39e10 ) || |vka21d1 )  begin      vka21d1 <=  vka21d1 + 1;      sj39e10 <=  'b1;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)           co10e8a <=  'b0;   else if (bnbf0e5) co10e8a <=  'b0;   else if ((cb9a49f && sj39e10) || |co10e8a )      co10e8a <=  co10e8a + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                            ir17e1c <=  1'b0;   else if (vka21d1 == (param_trcd -2)) ir17e1c <=  1'b1;   else                                   ir17e1c <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                            bnbf0e5 <=  1'b0;   else if (co10e8a == (param_trcd -2)) bnbf0e5 <=  1'b1;   else                                   bnbf0e5 <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                xj502cd <=  'b0;   else if (czc397c )       xj502cd <=  'b0;   else if (cb9a49f || |xj502cd)  xj502cd <=  xj502cd + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                          czc397c <=  1'b0;
   else if (xj502cd == (param_tras -3)) czc397c <=  1'b1;   else                                 czc397c <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 rv8166f <=  'b0;   else if (al70dda)          rv8166f <=  'b0;   else if (cb9a49f && |rv8166f)    rv8166f <=  'b1;   else if ((cb9a49f || |rv8166f) ) rv8166f <=  rv8166f + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 hqb37e <=  'b0;   else if (al70dda)          hqb37e <=  'b0;   else if (cb9a49f && |hqb37e)    hqb37e <=  'b1;    else if ((cb9a49f || |hqb37e) ) hqb37e <=  hqb37e + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin          hoee1bb <=  1'b0;          al70dda <=  1'b0;   end
   else if (( qva468d && (rv8166f  == param_trc  -2)) ||            (!qva468d && (hqb37e >= param_trrd -1) && !al70dda))  begin         hoee1bb <=  1'b1;         al70dda <=  1'b1;   end   else begin         hoee1bb <=  1'b0;         al70dda <=  1'b0;   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               ym87450 <=  'b0;   else if (mtbb557 )       ym87450 <=  'b0;   else if (fc2516f || |ym87450)  ym87450 <=  ym87450 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin         bn376aa <=  1'b0;         mtbb557 <=  1'b0;   end
   else if (ym87450 == (param_trp -1)) begin        bn376aa <=  1'b1;        mtbb557 <=  1'b1;   end   else begin       bn376aa <=  1'b0;       mtbb557 <=  1'b0;   end
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      pu3a281 <=  'b0;   else if ((qtf872f && !(tja0e50 || sjbb4ea)) || (!nr5aa99 && !ng358f2 && !tuda553 && (tja0e50 || sjbb4ea)) )      pu3a281 <=  'b0;   else if ((tja0e50 || sjbb4ea) && |pu3a281 )      pu3a281 <=  'b1;     else if (((tja0e50 && (tuda553 || nr5aa99) ) || ((tja0e50 || sjbb4ea) && ng358f2 && !tuda553))|| |pu3a281)      pu3a281 <=  pu3a281 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      of6fcc7 <=  'b0;     
     else if ((ice5f26 && !tja0e50) || (!ng358f2 && !tuda553 && (tja0e50 || sjbb4ea)) )      of6fcc7 <=  'b0;          else if (tja0e50 &&  tuda553 &&  |of6fcc7)      of6fcc7 <=  'b1;                    else if (((tja0e50 && tuda553 ) || ((tja0e50 || sjbb4ea) && ng358f2 && !tuda553))|| |of6fcc7)      of6fcc7 <=  of6fcc7 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               me59bf3 <=  'b0;   else if (tj1cbe4 )      me59bf3 <=  'b0;   else if (oh7286 && |me59bf3)  me59bf3 <=  'b1;   else if (oh7286 || |me59bf3)  me59bf3 <=  me59bf3 + 1;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)             dzf31ef <=  'b0;   else if (do2f930 )  dzf31ef <=  'b0;   else if (oh7286 && |dzf31ef) dzf31ef <=  'b1;   else if (oh7286 || |dzf31ef) dzf31ef <=  dzf31ef + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                           do2f930 <=  1'b0;
   else if ((dzf31ef == (aa98f7f )) && !oh7286)   do2f930 <=  1'b1;   else                                  do2f930 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)             pfc7bf8 <=  'b0;   else if (xw7c983 )   pfc7bf8 <=  'b0;   else if (oh7286 && |pfc7bf8  )   pfc7bf8 <=  'b1;   else if (oh7286 || |pfc7bf8 )  pfc7bf8 <=  pfc7bf8 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                        xw7c983 <=  1'b0;   else if (pfc7bf8 == (tj3dfc6 -2) && !oh7286)  xw7c983 <=  1'b1;   else                               xw7c983 <=  1'b0;
end








always @ (negedge rst_n or posedge clk) begin   if (!rst_n)   ngbdc37 <=  'b0;   else if (shedc96 ) begin       if (ir17e1c || bnbf0e5)            ngbdc37 <=  'b1;       else if ( tja0e50 || oh7286)  ngbdc37 <=  'b0;   end   else if (vka21d1 == (param_trcd -2)) ngbdc37 <=  1'b1;   else if (co10e8a == (param_trcd -2)) ngbdc37 <=  1'b1;   else                                   ngbdc37 <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          vicf085 <=  'b0;   else if (qtf872f )   vicf085 <=  'b1;   else if (tja0e50 || cb9a49f)  vicf085 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        ui7842b <=  'b0;   else if (ice5f26)ui7842b <=  'b1;   else if (fc2516f || lsad5da || cb9a49f || an85ed5 || tja0e50 || oh7286)     ui7842b <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        jpc2158 <=  'b0;   else if (tj1cbe4)jpc2158 <=  'b1;   else if (fc2516f || lsad5da || cb9a49f || an85ed5 || tja0e50 || oh7286)     jpc2158 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)            do86ed5 <=  1'b0;   else if (czc397c)    do86ed5 <=  1'b1;      else                   do86ed5 <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          xweb7da <=  'b0;   else if (do2f930)xweb7da <=  'b1;
   else if (cb9a49f || oh7286)  xweb7da <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                  yx5bed2 <=  'b0;   else if (xw7c983)         yx5bed2 <=  'b1;   else if (tja0e50 || fc2516f || cb9a49f || oh7286)   yx5bed2 <=  'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 tuda553 <=  'b0;   else if (coac793 == 'b1)  tuda553 <=  'b1;   else                        tuda553 <=  'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          rg6ce78 <=  'b0;   else if (!nr5aa99 && (jcfe692 || cb9a49f)) rg6ce78 <=  coac793;   else if (( oh7286 || tja0e50 ) && !tuda553)     rg6ce78 <=  rg6ce78 - 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)              ng358f2 <=  'b0;   else if (tuda553) ng358f2 <=  'b0;   else if ((rg6ce78 == 'h1) && (oh7286 ||tja0e50))     ng358f2 <=  'b1;   else                     ng358f2 <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               ux1203a <=  'b0;   else if (tuda553)  ux1203a <=  'b0;   else if ((rg6ce78 == 'h2) && (oh7286 ||tja0e50))     ux1203a <=  'b1;   else                      ux1203a <=  'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       cmefe37 <=  1'b0;       qt7f1b9 <=  1'b0;       gbf8dcd <=  1'b0;   end   else begin   case(epb1e42)    0: begin        cmefe37 <=  1'b1;        qt7f1b9 <=  1'b0;        gbf8dcd <=  1'b0;       end    1: begin        cmefe37 <=  1'b0;        qt7f1b9 <=  1'b1;        gbf8dcd <=  1'b0;      end    2: begin       cmefe37 <=  1'b0;       qt7f1b9 <=  1'b0;       gbf8dcd <=  1'b1;       end    default:begin        cmefe37 <=  1'b1;        qt7f1b9 <=  1'b0;        gbf8dcd <=  1'b0;       end   endcase   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       jr3736c <=  'b0;   else              jr3736c <=  kf8f215;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wyb9b67 <=  'b0;   else             wyb9b67 <=  pfc856a;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     kfb1e7e <=  'b0;     by58e20 <= 1'b0;   end   else if (qt7f1b9) begin     if (vi42b56 || lq790ad)         kfb1e7e <=  jr3736c +2;     else         kfb1e7e <=  jr3736c +3;     if (tja0e50 || sjbb4ea)         if (vi42b56)  by58e20 <= lq790ad;         else by58e20 <= !lq790ad;     else if (oh7286 || by5769d)   by58e20 <= 1'b0;     else by58e20 <= 1'b0;
   end   else if (gbf8dcd) begin     if (vi42b56)       if (lq790ad) kfb1e7e <= jr3736c +1 ;       else  kfb1e7e <= jr3736c +2 ;     else kfb1e7e <= jr3736c +2 ;     if (tja0e50 || sjbb4ea)       if (vi42b56) by58e20 <= !lq790ad;       else by58e20 <= lq790ad;     else if (oh7286 || by5769d)        by58e20 <= 1'b0;     else by58e20 <= 1'b0;   end   else begin     kfb1e7e <=   wyb9b67;     if (tja0e50 || sjbb4ea)        by58e20 <= vi42b56;     else if (oh7286 || by5769d)        by58e20 <= 1'b0;     else by58e20 <= 1'b0;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     nt163cf <=  'b0;     jr38817 <= 1'b0;   end   else if (qt7f1b9) begin    if (lq790ad) begin     nt163cf <= (jr3736c + jr3736c - 1);     if (oh7286 || by5769d)        jr38817 <= 1'b1;     else if (tja0e50 || sjbb4ea)        jr38817 <= 1'b0;     else jr38817 <= 1'b0;    end    else begin     nt163cf <= (jr3736c + jr3736c );     if (oh7286 || by5769d)        jr38817 <= 1'b1;     else if (tja0e50 || sjbb4ea)        jr38817 <= 1'b0;     else jr38817 <= 1'b0;    end   end   else if (gbf8dcd) begin    if (lq790ad) begin     nt163cf <= (jr3736c + jr3736c - 2);     jr38817 <= 1'b0;    end    else begin     nt163cf <= (jr3736c + jr3736c - 1);        jr38817 <= 1'b0;    end   end   else begin     nt163cf <=   jr3736c;     if (oh7286 || by5769d)        jr38817 <= lq790ad;     else if (tja0e50 || sjbb4ea)        jr38817 <= 1'b0;     else jr38817 <= 1'b0;   end
end

 always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     enc6e6d <= 1'b0;   else if (cmefe37)     enc6e6d <= 1'b0;   else     enc6e6d <= jr3736c - 1;
end


 always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     ayc40bf <= 1'b0;     xjc7102 <= 1'b0;   end   else begin     ayc40bf <= jr38817 ;     xjc7102 <= by58e20;   end
end
assign  rd_odd = jr38817 || ayc40bf;
assign  xjc841a = by58e20 || xjc7102;



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  wwd140b <= 'b0;   else begin	wwd140b	<= (param_twr +kfb1e7e +4 );	ir8a059	<=	(param_twr +kfb1e7e +3 );	end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin             qtf872f <= 1'b0;             zkdaabd <= 1'b0;             jcd55eb <= 1'b0;   end
   else  if (!tja0e50 && (pu3a281 == ir8a059)) begin          qtf872f <= 1'b1;          zkdaabd <= 1'b1;          jcd55eb <= 1'b1;   end   else   begin         qtf872f <= 1'b0;         zkdaabd <= 1'b0;         jcd55eb <= 1'b0;  end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          jraaf5b <=  'b0; 	else if (qtf872f ||(pu3a281 == ir8a059))   jraaf5b <=  'b1;
   else if (tja0e50 || cb9a49f)  jraaf5b <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  hbcdf98 <= 'b0;
   else         hbcdf98 <= param_trtp + enc6e6d;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin            tj1cbe4 <= 'b0;   end   else if (me59bf3 == (hbcdf98 -1)) begin      tj1cbe4 <= 1'b1;   end   else begin         tj1cbe4 <= 'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        jebd6fb <=  'b0;   else if (tj1cbe4 || (me59bf3 == (hbcdf98 -1)))jebd6fb <=  'b1;   else if (fc2516f || lsad5da || cb9a49f || an85ed5 || tja0e50 || oh7286)     jebd6fb <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  jp7e63d <= 'b0;   else         jp7e63d <=  (param_twtr + kfb1e7e +2) ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ice5f26 <= 'b0;   end
   else  if ((of6fcc7 == (jp7e63d -2)) && !tja0e50)begin       ice5f26 <=  1'b1 ;   end   else begin      ice5f26 <=  1'b0 ;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        tu57adf <=  'b0;
   else if ( (ice5f26  || (of6fcc7 == jp7e63d -2)) && !tja0e50 ) tu57adf <=  'b1;   else if (fc2516f || lsad5da || cb9a49f || an85ed5 || tja0e50 || oh7286)     tu57adf <=  'b0;
end


`ifdef ddr3_ipcore_ECP3_SP2

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  tj3dfc6 <= 'b0;   else         tj3dfc6 <=  (nt163cf- kfb1e7e +4) ;
end

`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  tj3dfc6 <= 'b0;   else         tj3dfc6 <=  (nt163cf- kfb1e7e +3) ;
end

`endif

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  aa98f7f <= 'b0;   else         aa98f7f <=  (nt163cf +2) ;
end
endmodule






















`timescale 1 ns / 100 ps
module xlbf0e4_ddr3_ipcore (

    clk,			              
    rst_n,	
    thf9cb1,
    cmce58f,
    yk72c79,
    je963c8,
    tjbfe72,
    ykff396,
    nrf6ff9,
    zmb7fce,
    xybd531,
    eaea98a,

    gb54c51,
    eca628c,
    dm57fd5,
    tj9abf,
    
    uk21908,
    kdfd339,
    
    lq5d84d,
    zxec26a,
    

    nr64207,
    yk4ce66,
    uk2103f,
    su67331,
    hb40fcc,
    enccc45,
    an81f9,
    gd39988,
    xlc840,
    hbe99cc,
    me494c0,
    zx4a600    
    
);
input                                 clk;
input                                 rst_n;
input                                 thf9cb1;
input                                 cmce58f;
input	yk72c79;
input                                 je963c8;
input                                 tjbfe72;
input                                 ykff396;
input                                 nrf6ff9;
input                                 zmb7fce;
input                                 xybd531;
input                                 eaea98a;
input                                 uk21908;
input                                 kdfd339;
input                                 lq5d84d;
input                                 zxec26a;
input                                 gb54c51;
input [3:0]                           eca628c;
input                                 dm57fd5;
input                                 tj9abf;
output                                me494c0;
output                                zx4a600;
output                                nr64207;
output                                yk4ce66;
output                                uk2103f;
output                                su67331;
output                                hb40fcc;
output                                enccc45;
output                                an81f9;
output                                gd39988 ;
output                                xlc840;
output                                hbe99cc;
reg                                   nr64207, mga935b;
reg                                   yk4ce66, ho4d6c9;
reg                                   uk2103f, gb5b256;
reg                                   su67331, uvc95a5;
reg                                   hb40fcc, os56966;
reg                                   enccc45, zza598d;
reg                                   an81f9, xw66374;
reg                                   gd39988, qi8dd11 ;
wire                                  xlc840;
wire                                  hbe99cc;
wire                                  lsa227e;
wire                                  gb54c51;
reg [3:0]                             vk89f93;
wire                                  dm57fd5;
reg                                   jp7e4de;
reg                                   czf26f7;
wire                                  zx4a600;
reg                                   me494c0;
reg                                   uidef57;
reg [`ddr3_ipcore_TRFC_WIDTH-1:0]                 wjf7ab9;




assign   zx4a600 = lsa227e;
assign   xlc840 = xybd531;
assign   hbe99cc = eaea98a;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      zza598d  <= 'b0;   else if ( ykff396 && kdfd339)      zza598d  <= 'b1;   else       zza598d  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      enccc45  <= 'b0;   else      enccc45  <= zza598d;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      os56966  <= 'b0;   else if ( tjbfe72 && uk21908)      os56966  <= 'b1;   else       os56966  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      hb40fcc  <= 'b0;   else      hb40fcc  <= os56966;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      xw66374  <= 'b0;   else if ( nrf6ff9 && uk21908)      xw66374  <= 'b1;   else      xw66374  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      an81f9  <= 'b0;   else      an81f9  <= xw66374;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      qi8dd11  <= 'b0;   else if ( zmb7fce && kdfd339)      qi8dd11  <= 'b1;   else      qi8dd11  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      gd39988  <= 'b0;   else      gd39988  <= qi8dd11;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      mga935b         <= 1'b0;   else if (thf9cb1 && lq5d84d)      mga935b         <= 1'b0;   else if (thf9cb1 && uk21908)      mga935b         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      nr64207  <= 'b0;   else      nr64207  <= mga935b;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ho4d6c9         <= 1'b0;   else if (cmce58f && zxec26a)      ho4d6c9         <= 1'b0;   else if (cmce58f && kdfd339)      ho4d6c9         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      yk4ce66  <= 'b0;   else      yk4ce66  <= ho4d6c9;
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      gb5b256         <= 1'b0;   else if (yk72c79 && lq5d84d)      gb5b256         <= 1'b0;   else if (yk72c79 && uk21908)      gb5b256         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      uk2103f  <= 'b0;   else      uk2103f  <= gb5b256;
end



always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      uvc95a5         <= 1'b0;   else if (je963c8 && zxec26a)      uvc95a5         <= 1'b0;   else if (je963c8 && kdfd339)      uvc95a5         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      su67331  <= 'b0;   else      su67331  <= uvc95a5;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      uidef57        <= 1'b0;   else if (vk89f93>0)      uidef57        <= 1'b1;   else      uidef57        <= 1'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)     vk89f93   <= 'b0;   else if (eca628c >1 && gb54c51 && !uidef57)     vk89f93   <= eca628c;   else if (tj9abf && uidef57)     vk89f93   <= vk89f93 -1;   else if (!uidef57)     vk89f93   <= 'b0;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      jp7e4de <= 1'b0;   else if ((vk89f93 ==1) && uidef57 && dm57fd5)      jp7e4de <= 1'b1;   else     jp7e4de <= 1'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      czf26f7 <= 1'b0;   else if ((vk89f93 ==1) && uidef57 && tj9abf)      czf26f7 <= 1'b1;   else     czf26f7 <= 1'b0;
end
assign      lsa227e = (wjf7ab9 == `ddr3_ipcore_TRFC); 
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wjf7ab9 <=  'b0;   else if ( lsa227e )      wjf7ab9 <=  'b0;   else if ((eca628c  >1 && czf26f7 )|| (eca628c  < 2 && tj9abf  )|| |wjf7ab9)      wjf7ab9 <=  wjf7ab9 + 1;
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      me494c0 <=  'b0;   else if (eca628c  >1)      me494c0 <=  jp7e4de;   else      me494c0 <=  dm57fd5;
end
endmodule






























`timescale 1 ns / 100 ps
module mre2932_ddr3_ipcore (

   clk,
   rst_n,
   fpaa935,
   sja4d7c,
   ri35f25,
   jr3d74f,
   wwdedff,
   uk21908,
   kdfd339,
   ukff3f,
   

   lq73511,
   ykd445d,
   tw1174a,
   ps5d29e,
   vv4a79f
   );
input           clk;
input           rst_n;
input           fpaa935;
input           sja4d7c;
input           ri35f25;
input           jr3d74f;
input           wwdedff;
input           uk21908;
input           kdfd339;
input           ukff3f;
output          lq73511;
output          ykd445d;
output          tw1174a;
output          ps5d29e;
output          vv4a79f;

`define ddr3_ipcore_IDLE_M 0

`define ddr3_ipcore_FLOW 1

`define ddr3_ipcore_SPECL 2

`define ddr3_ipcore_INIT 3
reg [3:0]       go5376c, hd9bb60;
reg             tw1174a, qted83e;
reg             ps5d29e, wj60fa3;
reg             vv4a79f, sw3e8e4;
reg             lq73511, eca3902;
reg             ykd445d, lqe408e;
reg             fc20473, kf239b;
wire            hq11cdd;











`define ddr3_ipcore_IDLE_M 0


`define ddr3_ipcore_FLOW 1


`define ddr3_ipcore_SPECL 2


`define ddr3_ipcore_INIT 3




assign          hq11cdd = ri35f25 || kf239b;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      fc20473           <=  'b0 ;   else if (ykd445d)      fc20473           <=  'b1 ;  else if (ri35f25)      fc20473           <=  'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kf239b           <=  'b0 ;   else      kf239b           <=  ri35f25 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      go5376c           <=  4'b0 ;      tw1174a           <=  1'b0 ;      ps5d29e        <=  1'b0 ;      vv4a79f          <=  1'b0 ;      ykd445d   <=  1'b0 ;      lq73511      <=  1'b0 ;   end   else begin      go5376c           <=  hd9bb60 ;      tw1174a           <=  qted83e ;      ps5d29e        <=  wj60fa3 ;      vv4a79f          <=  sw3e8e4 ;      ykd445d   <=  lqe408e ;      lq73511      <=  eca3902 ;   end
end







always @ (go5376c or jr3d74f or wwdedff or ukff3f or          uk21908 or kdfd339 or sja4d7c or fpaa935 or ri35f25          or fc20473 or hq11cdd or tw1174a or ps5d29e or vv4a79f or ykd445d or lq73511) begin
hd9bb60 = 4'b0;
qted83e = tw1174a;
wj60fa3 = ps5d29e;
sw3e8e4 = vv4a79f;
lqe408e = ykd445d;
eca3902 = lq73511;
case (1)        go5376c[`ddr3_ipcore_IDLE_M] :  begin                    qted83e = 1'b0;                    wj60fa3 = 1'b0;                    sw3e8e4 = 1'b0;
                    if (fpaa935) begin                      hd9bb60[`ddr3_ipcore_INIT] = 1'b1;                    end                    else hd9bb60[`ddr3_ipcore_IDLE_M] = 1'b1;                  end



   go5376c[`ddr3_ipcore_FLOW] :  begin                    if (sja4d7c) begin                      if (jr3d74f || wwdedff || ukff3f) begin                         hd9bb60[`ddr3_ipcore_SPECL] = 1'b1;                         qted83e = 1'b0;                         wj60fa3 = 1'b0;                         sw3e8e4 = 1'b1;                         lqe408e = 1'b1;                      end                      else begin                         eca3902 = 1'b0;                         hd9bb60[`ddr3_ipcore_FLOW] = 1'b1;                      end                    end                    else begin                      eca3902 = 1'b0;                      hd9bb60[`ddr3_ipcore_FLOW] = 1'b1;                    end                  end



   go5376c[`ddr3_ipcore_SPECL] : begin                   if (!fc20473 && ((uk21908 || kdfd339 ) && !wwdedff  && !jr3d74f)) begin                         hd9bb60[`ddr3_ipcore_FLOW] = 1'b1;                         qted83e = 1'b1;                         wj60fa3 = 1'b1;                         sw3e8e4 = 1'b0;                         eca3902 = 1'b1;                         lqe408e = 1'b0;                   end                   else if (!fc20473 && !hq11cdd && (jr3d74f || wwdedff || ukff3f)) begin                         hd9bb60[`ddr3_ipcore_SPECL] = 1'b1;                         qted83e = 1'b0;                         wj60fa3 = 1'b0;                         sw3e8e4 = 1'b1;                         lqe408e = 1'b1;                    end                    else begin                      lqe408e = 1'b0;                      hd9bb60[`ddr3_ipcore_SPECL] = 1'b1;                    end                  end



   go5376c[`ddr3_ipcore_INIT] :  begin                   if (!fpaa935) begin                      if (jr3d74f || wwdedff || ukff3f) begin                        hd9bb60[`ddr3_ipcore_SPECL] = 1'b1;                        sw3e8e4 = 1'b1;                        lqe408e = 1'b1;                      end                      else if ((uk21908 || kdfd339) && !wwdedff  && !jr3d74f) begin                        hd9bb60[`ddr3_ipcore_FLOW] = 1'b1;                        qted83e = 1'b1;                        wj60fa3 = 1'b1;                        eca3902 = 1'b1;                      end                      else hd9bb60[`ddr3_ipcore_INIT] = 1'b1;                  end                  else hd9bb60[`ddr3_ipcore_INIT] = 1'b1;                  end
        default : begin                    hd9bb60[`ddr3_ipcore_IDLE_M] = 1'b1;                    eca3902 = 1'b0;                    lqe408e = 1'b0;                 end endcase end

endmodule   





























`timescale 1 ns / 100 ps
module sj26cb7_ddr3_ipcore (
    
    sclk,			   
    rst_n,
    init_done,
    wl_act,
    zmbda9a,
    lde6148,
    ba30a46,
    zxf633d,
    xy8cf7d,
    wjd3b04,
    zz3df59,
    ldec128,
    kd60947,
    tw4a3c,
    ba251e3,
    fp28f1b,

    
    mem_odt_out,
    cntl_odt_out

    );
input                        sclk;
input                        rst_n;
input                        init_done;
input                        wl_act;
input   [`ddr3_ipcore_CS_WIDTH-1 : 0]    zmbda9a;
input                        lde6148;
input                        ba30a46;
input                        zxf633d;
input                        xy8cf7d;
input                        wjd3b04;
input                        zz3df59;
input   [3:0]                ldec128;
input   [1:0]                kd60947;
input   [`ddr3_ipcore_CS_WIDTH-1 : 0]    tw4a3c;
input                        ba251e3;
input                        fp28f1b;
output  [`ddr3_ipcore_CS_WIDTH-1 : 0]    mem_odt_out;
output                       cntl_odt_out;

`define ddr3_ipcore_LOW 1'b0
parameter    vx3dcf5   = 2;
parameter    tuee7af   = 3;
wire  [`ddr3_ipcore_CS_WIDTH-1 : 0]      mem_odt_out;
reg                          cntl_odt_out;
reg                          uif5e97;
reg                          jraf4b9;
reg                          qt7a5ce;
reg                          hbd2e75;
reg                          qi973af;
reg   [1:0]                  gqb9d78;
reg   [1:0]                  cmcebc1;
reg                          wj75e08;
reg                          zzaf045;
reg                          me7822e;
reg                          uic1170;
reg                          gd8b80;
reg                          hb45c05;
reg                          ie2e02f;
reg                          ip70178;
reg                          mt80bc4;
reg                          wy5e25;
reg                          zm2f129;

`ifdef ddr3_ipcore_CS_WIDTH_1
wire  [`ddr3_ipcore_CS_WIDTH-1 : 0]      me7894a;
wire                         ykc4a51;

`else
reg   [`ddr3_ipcore_CS_WIDTH-1 : 0]      me7894a;
reg                          ykc4a51;

`endif
reg                          th4a25d;
reg                          gb512ef;
wire  [1:0]                  je8977d;
wire                         al4bbea;
wire  [1:0]                  fa5df54;
wire                         ayefaa2;
wire                         yk7d511;
wire                         meea888;
reg   [3:0]                  sh54441;
reg                          baa220d;
wire  [`ddr3_ipcore_CS_WIDTH-1 : 0]      zm1106a;
wire                         ec88353;
wire                         mr41a98;
reg   [`ddr3_ipcore_CS_WIDTH-1 : 0]      yzd4c5;

`ifdef ddr3_ipcore_CS_WIDTH_4  // Both slots have double ranks

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`ifdef ddr3_ipcore_DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

`else //Both slot1 and slot2 have single rank 

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1 // One slot with one rank

`endif


























`define ddr3_ipcore_LOW 1'b0













`ifdef ddr3_ipcore_CS_WIDTH_1


`else


`endif




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      yzd4c5 <= {`ddr3_ipcore_CS_WIDTH{1'b0}};   end   else begin      yzd4c5 <= tw4a3c;   end
end


always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      th4a25d <= 1'b0;   end   else if (zxf633d) begin      th4a25d <= 1'b1;   end   else if (gqb9d78 == 2'b01) begin      th4a25d <= 1'b0;   end
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      gb512ef <= 1'b0;   end   else if (xy8cf7d) begin      gb512ef <= 1'b1;   end   else if (cmcebc1 == 2'b01) begin      gb512ef <= 1'b0;   end
end








always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      uif5e97    <= 1'b0;      jraf4b9    <= 1'b0;      qt7a5ce   <= 1'b0;   end   else begin      uif5e97    <=  lde6148 & ~ba30a46 & ~qt7a5ce;      jraf4b9    <=  lde6148 &  ba30a46 & ~qt7a5ce;            qt7a5ce   <=  lde6148 &  mr41a98 & ~fp28f1b;   end
end
assign mr41a98  = 1'b0;  




assign  je8977d         = wjd3b04 ? `ddr3_ipcore_TODTH4 : `ddr3_ipcore_TODTH8 ;


assign  fa5df54         = wjd3b04 ? vx3dcf5 : tuee7af ;

always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)
      gqb9d78     <= 2'b0;      else if (zxf633d)      gqb9d78     <= je8977d;   else if (wl_act)      gqb9d78     <= 2'b0;   else if (gqb9d78 != 2'b0)      gqb9d78     <= gqb9d78 - 1'b1;
end

assign yk7d511 = |(gqb9d78);
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)
      cmcebc1     <= 2'b0;      else if (xy8cf7d)      cmcebc1     <= fa5df54;   else if (wl_act)      cmcebc1     <= 2'b0;   else if (cmcebc1 != 2'b0)      cmcebc1     <= cmcebc1 - 1'b1;
end

assign meea888 = |(cmcebc1) ;











always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      sh54441 <= 4'h0;   else      sh54441 <= ldec128 + kd60947 - 2;
end
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n) begin      wj75e08  <= `ddr3_ipcore_LOW;      zzaf045  <= `ddr3_ipcore_LOW;      me7822e  <= `ddr3_ipcore_LOW;      uic1170  <= `ddr3_ipcore_LOW;      gd8b80  <= `ddr3_ipcore_LOW;      hb45c05  <= `ddr3_ipcore_LOW;      ie2e02f  <= `ddr3_ipcore_LOW;      ip70178  <= `ddr3_ipcore_LOW;      mt80bc4  <= `ddr3_ipcore_LOW;      wy5e25 <= `ddr3_ipcore_LOW;   end   else begin      wj75e08  <= meea888;      zzaf045  <= wj75e08;      me7822e  <= zzaf045;      uic1170  <= me7822e;      gd8b80  <= uic1170;      hb45c05  <= gd8b80;      ie2e02f  <= hb45c05;      ip70178  <= ie2e02f;      mt80bc4  <= ip70178;      wy5e25 <= mt80bc4;   end
end
always @ (sh54441 or          me7822e or uic1170 or gd8b80 or hb45c05 or  ie2e02f or ip70178 or mt80bc4 or wy5e25) begin   case (sh54441[3:0])      4'd3:  zm2f129 = me7822e;      4'd4:  zm2f129 = uic1170;      4'd5:  zm2f129 = gd8b80;      4'd6:  zm2f129 = hb45c05;      4'd7:  zm2f129 = ie2e02f;      4'd8:  zm2f129 = ip70178;      4'd9:  zm2f129 = mt80bc4;      4'd10: zm2f129 = wy5e25;      default : zm2f129 = 1'b0;   endcase
end
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      baa220d <=  1'b0 ;   else            baa220d <=  1'b0 ;
end








`ifdef ddr3_ipcore_CS_WIDTH_4  // Both slots have double ranks


 always @ (gb512ef or th4a25d or yzd4c5) begin   begin
      case ({gb512ef,th4a25d,yzd4c5})         6'b011110 : begin                   me7894a  = 4'b1001;     ykc4a51 = 1'b0;             end         6'b011101 : begin               me7894a  = 4'b1001;         ykc4a51 = 1'b0;             end         6'b011011 : begin               me7894a  = 4'b0110;         ykc4a51 = 1'b0;             end         6'b010111 : begin               me7894a  = 4'b0110;         ykc4a51 = 1'b0;             end         6'b101110 : begin               me7894a  = 4'b1000;         ykc4a51 = 1'b1;             end         6'b101101 : begin               me7894a  = 4'b1000;         ykc4a51 = 1'b1;             end         6'b101011 : begin               me7894a  = 4'b0010;         ykc4a51 = 1'b1;             end         6'b100111 : begin               me7894a  = 4'b0010;         ykc4a51 = 1'b1;             end         default   : begin             me7894a  = 4'b0000;             ykc4a51 = 1'b0;             end      endcase   end
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2



`ifdef ddr3_ipcore_DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

always @ (gb512ef or th4a25d or tw4a3c) begin   begin      case ({gb512ef,th4a25d,tw4a3c})         4'b0110 : begin                 me7894a  = 2'b01;   ykc4a51 = 1'b0;           end         4'b0101 : begin             me7894a  = 2'b01;       ykc4a51 = 1'b0;           end         4'b1010 : begin             me7894a  = 2'b00;       ykc4a51 = 1'b1;           end         4'b1001 : begin             me7894a  = 2'b00;       ykc4a51 = 1'b1;           end         default : begin           me7894a  = 2'b00;           ykc4a51 = 1'b0;           end      endcase   end
end

`else //Both slot1 and slot2 have single rank 


always @ (gb512ef or th4a25d or tw4a3c) begin   begin      case ({gb512ef,th4a25d,tw4a3c})         4'b0110 : begin                 me7894a  = 2'b11;   ykc4a51 = 1'b0;           end         4'b0101 : begin             me7894a  = 2'b11;       ykc4a51 = 1'b0;           end         4'b1010 : begin             me7894a  = 2'b10;       ykc4a51 = 1'b1;           end         4'b1001 : begin             me7894a  = 2'b01;       ykc4a51 = 1'b1;           end         default : begin           me7894a  = 2'b00;           ykc4a51 = 1'b0;           end      endcase   end
end

`endif


`endif


`ifdef ddr3_ipcore_CS_WIDTH_1 // One slot with one rank


assign me7894a  = th4a25d & ~tw4a3c;
assign ykc4a51 = 1'b0;

`endif

assign zm1106a    = (yk7d511 | baa220d)  ? me7894a  : {`ddr3_ipcore_CS_WIDTH{1'b0}};
assign ec88353   = (baa220d)                 ? ykc4a51 : 1'h0;

assign mem_odt_out = (zm1106a | zmbda9a) ;


always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      cntl_odt_out <= 1'b0;   else      cntl_odt_out <= ec88353 ;
end

endmodule
































`timescale 1 ns / 100 ps
module ba2f748_ddr3_ipcore (

   clk,
   rst_n,
   ykd445d,
   
   ps485bf,
   vi42dfa,			
   ph16fd2,
   dob7e97,
   zzbf4ba,
   ykfa5d7,
   thd2eb9,
   ie975cf, 
   oh90743, 
   hbd73c6,
   mgb9e36,
   zkcf1b1,
   ay78d8b,
   ipc6c59,
   oh362cc,
   mtb1665,
   tj8b32c,
   ea59967,
   lsa227e,

   ri35f25,   			
   th61357,			   
   tj9abf,
   fa4d5ff,
   nr5f942,
   
   lf907b, 
   wj41ef2, 
   vv7bca9, 
   wjf2a70, 
   qia9c25,
   of70945,
   fc2516f,
   vv4a79f,
   gb6f7be,
   ykdefa6,
   hb45bde, 
   lsad5da,
   rv226a9,
   zz1354e,
   cb9aa76,
   hod53b5,
   qia9dab,
   uv4ed58,
   jc76ac4,
   vxb5622,
   qvabc43,
   hqbdc2f,
   cme50bf,
   en5ec67,
`ifdef ddr3_ipcore_DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   xwd5788
   );
input            clk;
input            rst_n;
input            ykd445d;
input            vv4a79f;
input            ps485bf;
input            vi42dfa;
input            ph16fd2;
input            dob7e97;
input            zzbf4ba;
input            ykfa5d7;
input            thd2eb9;
input            ie975cf;
input [3:0]      oh90743;
input            hbd73c6;
input            mgb9e36;
input            zkcf1b1;
input            ay78d8b;
input            ipc6c59;
input            oh362cc;
input            mtb1665;
input            tj8b32c;
input            ea59967;
input            lsa227e;
output           ri35f25;
output           th61357;
output           tj9abf;
output           fa4d5ff;
output           lf907b;
output           wj41ef2;
output           vv7bca9;
output           wjf2a70;
output           qia9c25;
output           of70945;
output           gb6f7be;
output           ykdefa6;
output           hb45bde;
output           fc2516f;
output           hqbdc2f;
output           qvabc43;
output           lsad5da;
output           rv226a9;
output           cme50bf;
output           nr5f942;
output           zz1354e;
output           cb9aa76;
output           hod53b5;
output           qia9dab;
output           uv4ed58;
output           jc76ac4;
output           vxb5622;
output           en5ec67;

`ifdef ddr3_ipcore_DIR_SREF_EXT
output           sref_ent_cmd;
output           sref_ext_cmd;

`endif
output           xwd5788;

`define ddr3_ipcore_IDLE_SP 0

`define ddr3_ipcore_PRE_WAIT_SP 1

`define ddr3_ipcore_PRE_SP 2

`define ddr3_ipcore_SREF_ENT 3

`define ddr3_ipcore_SREF_EXT 4

`define ddr3_ipcore_TCKESR_S 5

`define ddr3_ipcore_T512 6

`define ddr3_ipcore_PWR_ENT 7

`define ddr3_ipcore_PWR_EXT 8

`define ddr3_ipcore_PWR_WAIT 9

`define ddr3_ipcore_TPD_S 10

`define ddr3_ipcore_CKE_LOW 11

`define ddr3_ipcore_TXPDLL_S 12

`define ddr3_ipcore_LMR_S 13

`define ddr3_ipcore_REF_S 14

`define ddr3_ipcore_ZQCLONG 15

`define ddr3_ipcore_ZQCSHORT 16

`define ddr3_ipcore_TZQOPER_S 17

`define ddr3_ipcore_TZQS_S 18

`define ddr3_ipcore_TMRD_S 19

`define ddr3_ipcore_N_LMR 20

`define ddr3_ipcore_L2L 21
reg              ri35f25, kf239b ;
reg              th61357, ea7dfb6;
reg              tj9abf, th7ed89;
reg              fa4d5ff, gqb6276;
reg              lf907b, zm89d8c;
reg              wj41ef2, vi7631c;
reg              vv7bca9, ba8c71d;
reg              wjf2a70, xl1c753;
reg              qia9c25, ir1d4ff;
reg              of70945, kq53fe8;
reg              hod53b5, osffa0d;
reg              qia9dab, wje8344;
reg              gb6f7be, kfd12d;
reg              ykdefa6, sh44b60;
reg              hb45bde, ph2d82a;
reg              uv4ed58, kd60ab3;
reg              hqbdc2f, kf2cbab;
reg              lsad5da, lqebea5;
reg              fc2516f, tj370eb;
reg              zz1354e, qv180cf;
reg              cb9aa76, tj33ea;
reg              jc76ac4, lqcfabe;
reg              cme50bf, kqeaf90;
reg              vxb5622, wlbe40b;
reg              nr5f942, ux902ed;
reg              rv226a9, xybb6e;
reg              ho5db72, shedb92;
reg              ic6dc94, jp6e4a0;
reg              os72506, ks92831;
reg              rv94189, vxa0c4f;
reg              fp627e, sw313f7;
reg              ng89fb8, ld4fdc3;
reg              rt7ee1e, kdf70f6;
reg [21:0]       fcb87b5, shc3daa;
reg              qvabc43, jpf6aa3;
reg              vxb551e, ntaa8f6;
reg              al547b7, mga3dbd;
reg              ng1ede9;
reg              thf6f4b;
reg              en5ec67, lsbd2f2;
reg              pfe9792;
reg              xwd5788, en5e4bc;
reg              sref_ent_cmd;
reg              sref_ext_cmd;
wire             ie97929;

`ifdef ddr3_ipcore_DIR_SREF_EXT

`else

`endif
reg [3:0]  ymbc949;
reg        rge4a49;

`ifdef ddr3_ipcore_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ipcore_ENB_REF_PRE

`else

`endif

`ifdef ddr3_ipcore_DIR_SREF_EXT

`endif

`ifdef ddr3_ipcore_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ipcore_DIR_SREF_EXT

`else

`endif












`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif





`define ddr3_ipcore_IDLE_SP 0


`define ddr3_ipcore_PRE_WAIT_SP 1


`define ddr3_ipcore_PRE_SP 2


`define ddr3_ipcore_SREF_ENT 3


`define ddr3_ipcore_SREF_EXT 4


`define ddr3_ipcore_TCKESR_S 5


`define ddr3_ipcore_T512 6


`define ddr3_ipcore_PWR_ENT 7


`define ddr3_ipcore_PWR_EXT 8


`define ddr3_ipcore_PWR_WAIT 9


`define ddr3_ipcore_TPD_S 10


`define ddr3_ipcore_CKE_LOW 11


`define ddr3_ipcore_TXPDLL_S 12


`define ddr3_ipcore_LMR_S 13


`define ddr3_ipcore_REF_S 14


`define ddr3_ipcore_ZQCLONG 15


`define ddr3_ipcore_ZQCSHORT 16


`define ddr3_ipcore_TZQOPER_S 17


`define ddr3_ipcore_TZQS_S 18


`define ddr3_ipcore_TMRD_S 19


`define ddr3_ipcore_N_LMR 20


`define ddr3_ipcore_L2L 21







always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      fcb87b5   <=  20'b0;      lf907b              <=  1'b0;      wj41ef2              <=  1'b0;      vv7bca9              <=  1'b0;      wjf2a70              <=  1'b0;      qia9c25              <=  1'b0;      of70945             <=  1'b0;      gb6f7be             <=  1'b0;      ykdefa6             <=  1'b0;      hb45bde             <=  1'b0;      ho5db72         <=  1'b0;      ic6dc94     <=  1'b0;      rv94189         <=  1'b0;      fp627e         <=  1'b0;      ng89fb8         <=  1'b0;      hqbdc2f             <=  1'b0;      lsad5da         <=  1'b0;      fc2516f              <=  1'b0;      zz1354e           <=  1'b0;      cb9aa76             <=  1'b0;      jc76ac4              <=  1'b0;      cme50bf          <=  1'b0;      vxb5622           <=  1'b0;      rt7ee1e         <=  1'b0;      nr5f942    <=  1'b0;      hod53b5          <=  1'b0;      qia9dab             <=  1'b0;      uv4ed58             <=  1'b0;      rv226a9         <=  1'b0;      th61357       <=  1'b0;
      tj9abf    <=  1'b0;      fa4d5ff        <=  1'b0;      qvabc43          <=  1'b0;      vxb551e        <=  1'b0;      ri35f25     <=  1'b0;      al547b7           <=  1'b0;      en5ec67          <=  1'b0;      xwd5788          <=  1'b0;   end   else begin      fcb87b5   <=  shc3daa ;      lf907b              <=  zm89d8c ;      wj41ef2              <=  vi7631c ;      vv7bca9              <=  ba8c71d ;      wjf2a70              <=  xl1c753 ;      qia9c25              <=  ir1d4ff ;      of70945             <=  kq53fe8 ;      gb6f7be             <=  kfd12d ;      ykdefa6             <=  sh44b60 ;      hb45bde              <=  ph2d82a ;      ho5db72         <=  shedb92 ;      ic6dc94     <=  jp6e4a0  ;      os72506     <=  ks92831  ;      rv94189         <=  vxa0c4f ;      fp627e         <=  sw313f7  ;      ng89fb8         <=  ld4fdc3  ;      hqbdc2f             <=  kf2cbab ;      lsad5da         <=  lqebea5 ;      fc2516f              <=  tj370eb ;      zz1354e           <=  qv180cf ;      cb9aa76             <=  tj33ea ;      jc76ac4              <=  lqcfabe ;      cme50bf          <=  kqeaf90 ;      vxb5622           <=  wlbe40b ;      rt7ee1e         <=  kdf70f6;      nr5f942    <=  ux902ed;      hod53b5          <=  osffa0d;      qia9dab             <=  wje8344;      uv4ed58             <=  kd60ab3;      rv226a9         <=  xybb6e;      th61357       <=  ea7dfb6 ;
      tj9abf    <=  th7ed89 ;      fa4d5ff        <=  gqb6276 ;      qvabc43          <=  jpf6aa3;      vxb551e        <=  ntaa8f6;      al547b7           <=  mga3dbd;      ri35f25     <=  kf239b;      en5ec67          <=  lsbd2f2;      xwd5788          <=  en5e4bc;   end
end







`ifdef ddr3_ipcore_DIR_SREF_EXT

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ng1ede9   <=  'b0;   else      ng1ede9   <=  'b0;
end

`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ng1ede9   <=  'b0;   else if (vi42dfa)       ng1ede9   <=  'b1;   else if (wj41ef2)      ng1ede9   <=  'b0;
end

`endif


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      thf6f4b   <=  'b0;   else if (dob7e97)       thf6f4b   <=  'b1;   else if (wjf2a70)      thf6f4b   <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      pfe9792   <=  'b0;   else if (ie975cf)       pfe9792   <=  'b1;   else if (hb45bde)      pfe9792   <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sref_ent_cmd <= 1'b0;   else      sref_ent_cmd <= (shc3daa[`ddr3_ipcore_SREF_ENT] == 1'b1) ? 1'b1 : 1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sref_ext_cmd <= 1'b0;   else      sref_ext_cmd <= (shc3daa[`ddr3_ipcore_SREF_EXT] == 1'b1) ? 1'b1 : 1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ymbc949   <=  'b0;   else if (oh90743 == 4'h1)      ymbc949   <=  4'h1;   else if (ymbc949 == oh90743)      ymbc949   <=  'b0;   else if (ie975cf)      ymbc949   <= ymbc949 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      rge4a49   <=  'b0;   else if (ymbc949 == 4'h1)      rge4a49   <= 'b1;   else      rge4a49 <= 'b0;
end








`ifdef ddr3_ipcore_DIR_SREF_EXT

assign  ie97929 = vi42dfa;

`else

assign  ie97929 = 1'b0;

`endif

always @ (fcb87b5 or vv4a79f or ie975cf or ps485bf or ie97929          or zzbf4ba or ykfa5d7 or thd2eb9 or ph16fd2 or ho5db72 or          ic6dc94 or rv94189 or fp627e or ng89fb8          or hbd73c6 or rt7ee1e or mgb9e36 or zkcf1b1 or lsa227e          or ay78d8b or ipc6c59 or oh362cc or mtb1665          or cme50bf or tj8b32c or ea59967 or vxb5622 or of70945          or ng1ede9 or thf6f4b or al547b7 or ykd445d or pfe9792 or vxb551e          or ri35f25 or nr5f942 or lsad5da or ykdefa6  or zz1354e or qia9c25 or fc2516f          or qia9dab or hod53b5 or uv4ed58 or th61357 or fa4d5ff or cb9aa76 or tj9abf          or en5ec67 or rv226a9 or gb6f7be or jc76ac4 or vxb551e or xwd5788 or rge4a49 or os72506) begin
kf2cbab = 1'b0;
shc3daa = 20'b0;
zm89d8c = 1'b0;
vi7631c = 1'b0;
ba8c71d = 1'b0;
xl1c753 = 1'b0;
jpf6aa3 = 1'b0;
ph2d82a = 1'b0;
kf239b = ri35f25;
ux902ed = nr5f942;
lqebea5 = lsad5da;
xybb6e = rv226a9;
ld4fdc3 = ng89fb8;
sw313f7 = fp627e;
jp6e4a0 = ic6dc94;
ks92831 = os72506;
shedb92 = ho5db72;
vxa0c4f = rv94189;
kdf70f6 = rt7ee1e;
sh44b60 = ykdefa6;
qv180cf = zz1354e;
mga3dbd = al547b7;
ir1d4ff = qia9c25;
kq53fe8 = of70945;
kqeaf90 = cme50bf;
tj370eb = fc2516f;
wje8344 = qia9dab;
osffa0d = hod53b5;
kd60ab3 = uv4ed58;
ea7dfb6 = th61357;
gqb6276 = fa4d5ff;
wlbe40b = vxb5622;
tj33ea = cb9aa76;
th7ed89 = tj9abf;
lsbd2f2 = en5ec67;
kfd12d = gb6f7be;
lqcfabe = jc76ac4;
ntaa8f6 = vxb551e;
en5e4bc = xwd5788;
case (1)        fcb87b5[`ddr3_ipcore_IDLE_SP] :  begin                    ea7dfb6 = 1'b0;                    th7ed89 = 1'b0;                    gqb6276 = 1'b0;                    jpf6aa3 = 1'b0;                    kf2cbab = 1'b1;                    zm89d8c = 1'b0;                    vi7631c = 1'b0;                    ba8c71d = 1'b0;                    xl1c753 = 1'b0;                    ir1d4ff = 1'b0;                    kq53fe8 = 1'b0;                    kfd12d = 1'b0;                    sh44b60 = 1'b0;                    ph2d82a = 1'b0;                    lqebea5 = 1'b0;                    tj370eb = 1'b0;                    qv180cf = 1'b0;                    tj33ea = 1'b0;                    lqcfabe = 1'b0;                    kqeaf90 = 1'b0;                    wlbe40b = 1'b0;                    shedb92 = 1'b0;                    jp6e4a0 = 1'b0;                    ks92831 = 1'b0;                    vxa0c4f = 1'b0;                    sw313f7 = 1'b0;                    ld4fdc3 = 1'b0;                    kdf70f6 = 1'b0;                    ux902ed = 1'b0;                    osffa0d = 1'b0;                    wje8344 = 1'b0;                    kd60ab3 = 1'b0;                    xybb6e = 1'b0;                    ntaa8f6 = 1'b0;                    mga3dbd = 1'b0;                    kf239b = 1'b0;                    lsbd2f2 = 1'b0;                    en5e4bc = 1'b0;                    if (vv4a79f || ykd445d) begin                       if (pfe9792 && lsa227e) begin    
`ifdef ddr3_ipcore_ENB_REF_PRE
                            shc3daa[`ddr3_ipcore_PRE_SP] = 1'b1;                            tj370eb = 1'b1;                            lqebea5 = 1'b0;                            shedb92 = 1'b1;  
`else
          if (rge4a49) begin                            shc3daa[`ddr3_ipcore_PRE_SP] = 1'b1;                            tj370eb = 1'b1;                            lqebea5 = 1'b0;                            shedb92 = 1'b1;  end  else begin                            shc3daa[`ddr3_ipcore_REF_S] = 1'b1;                            ph2d82a = 1'b1;                            shedb92 = 1'b0;                            lqebea5 = 1'b0;                            kdf70f6 = 1'b0;                          end                          
`endif

                       end                       else if (ps485bf) begin                          shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;                          shedb92 = 1'b1;                           jp6e4a0 = 1'b1;                          kf2cbab = 1'b0;                          lqebea5 = 1'b1;                          ux902ed = 1'b1;                       end

`ifdef ddr3_ipcore_DIR_SREF_EXT
                       else if (vi42dfa) begin                          shc3daa[`ddr3_ipcore_SREF_EXT] = 1'b1;                          ks92831 = 1'b0;                          kf2cbab = 1'b0;                          lqebea5 = 1'b0;                          ux902ed = 1'b1;                       end

`endif
                       else if (zzbf4ba) begin                          shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;                          vxa0c4f = 1'b1;                          kf2cbab = 1'b0;                          lqebea5 = 1'b1;                          ux902ed = 1'b1;                       end                       else if (ykfa5d7) begin                          shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;                          sw313f7 = 1'b1;                          kf2cbab = 1'b0;                          lqebea5 = 1'b1;                          ux902ed = 1'b1;                       end                       else if (thd2eb9) begin                          shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;                          ld4fdc3 = 1'b1;                          kf2cbab = 1'b0;                          lqebea5 = 1'b1;                          ux902ed = 1'b1;                       end                       else if (ph16fd2) begin                          shc3daa[`ddr3_ipcore_PWR_WAIT] = 1'b1;                          kf2cbab = 1'b0;                          xybb6e = 1'b1;                          ux902ed = 1'b1;                       end                       else  shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1 ;                    end                    else shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;                 end                    fcb87b5[`ddr3_ipcore_PRE_WAIT_SP] :  begin    jpf6aa3 = 1'b0;    if (rt7ee1e) begin       if (hbd73c6) begin          if (ho5db72) begin              shc3daa[`ddr3_ipcore_REF_S] = 1'b1;
              ph2d82a = 1'b1;              shedb92 = 1'b0;              lqebea5 = 1'b0;              kdf70f6 = 1'b0;          end
          else if (rv94189) begin              shc3daa[`ddr3_ipcore_LMR_S] = 1'b1;              ir1d4ff = 1'b1;              vxa0c4f = 1'b0;              lqebea5 = 1'b0;              kdf70f6 = 1'b0;          end          else if (fp627e) begin              shc3daa[`ddr3_ipcore_ZQCLONG] = 1'b1;              kfd12d = 1'b1;              sw313f7 = 1'b0;              lqebea5 = 1'b0;              kdf70f6 = 1'b0;          end          else if (ng89fb8) begin              shc3daa[`ddr3_ipcore_ZQCSHORT] = 1'b1;              sh44b60 = 1'b1;              ld4fdc3 = 1'b0;              lqebea5 = 1'b0;              kdf70f6 = 1'b0;          end          else begin            shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;            lqebea5 = 1'b1;          end       end       else begin         shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;         lqebea5 = 1'b1;       end    end    else if (hbd73c6) begin         shc3daa[`ddr3_ipcore_PRE_SP] = 1'b1;         tj370eb = 1'b1;         lqebea5 = 1'b0;     end     else begin         shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;         lqebea5 = 1'b1;     end    end                fcb87b5[`ddr3_ipcore_PRE_SP] :  begin        shc3daa[`ddr3_ipcore_PRE_WAIT_SP] = 1'b1;        lqebea5 = 1'b1;        tj370eb = 1'b0;        kdf70f6 = 1'b1;        jpf6aa3 = 1'b1;    end                    fcb87b5[`ddr3_ipcore_SREF_ENT] :  begin        zm89d8c = 1'b0;        qv180cf = 1'b1;        shc3daa[`ddr3_ipcore_TCKESR_S] = 1'b1;    end                    fcb87b5[`ddr3_ipcore_SREF_EXT] :  begin       shc3daa[`ddr3_ipcore_T512] = 1'b1;       tj33ea = 1'b1;       vi7631c = 1'b0;
    end                    fcb87b5[`ddr3_ipcore_TCKESR_S] :  begin      if ((mgb9e36 && ng1ede9) ||          ( vxb551e && ng1ede9)) begin         shc3daa[`ddr3_ipcore_SREF_EXT] = 1'b1;         vi7631c = 1'b1;         qv180cf = 1'b0;         ntaa8f6 = 1'b0;         kqeaf90 = 1'b0;      end      else if (mgb9e36) begin

`ifdef ddr3_ipcore_DIR_SREF_EXT
          shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;          tj33ea = 1'b0;          kf2cbab = 1'b1;
          kf239b = 1'b1;          ea7dfb6= 1'b1;

`else
        shc3daa[`ddr3_ipcore_TCKESR_S] = 1'b1;        qv180cf = 1'b1;        ntaa8f6 = 1'b1;

`endif
      end      else begin        shc3daa[`ddr3_ipcore_TCKESR_S] = 1'b1;        qv180cf = 1'b1;      end    end                    fcb87b5[`ddr3_ipcore_T512] :  begin      if (zkcf1b1) begin          shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;          tj33ea = 1'b0;          kf2cbab = 1'b1;          ux902ed = 1'b0;          kf239b = 1'b1;          ea7dfb6= 1'b1;      end      else shc3daa[`ddr3_ipcore_T512] = 1'b1;
    end                    fcb87b5[`ddr3_ipcore_PWR_ENT] :  begin        shc3daa[`ddr3_ipcore_TPD_S] = 1'b1;        ba8c71d = 1'b0;        lqcfabe = 1'b1;    end                    fcb87b5[`ddr3_ipcore_PWR_EXT] :  begin       if (cme50bf) begin          shc3daa[`ddr3_ipcore_PWR_EXT] = 1'b1;          kqeaf90 = 1'b0;       end       else begin          shc3daa[`ddr3_ipcore_TXPDLL_S] = 1'b1;          wlbe40b = 1'b1;          xl1c753= 1'b1;
       end
    end                    fcb87b5[`ddr3_ipcore_PWR_WAIT] :  begin        if(oh362cc) begin            shc3daa[`ddr3_ipcore_CKE_LOW] = 1'b1;            kqeaf90 = 1'b1;            xybb6e = 1'b0;        end        else begin            shc3daa[`ddr3_ipcore_PWR_WAIT] = 1'b1;        end    end                    fcb87b5[`ddr3_ipcore_TPD_S] :  begin      if ((mtb1665 && thf6f4b) ||          ( al547b7 && thf6f4b)) begin          shc3daa[`ddr3_ipcore_PWR_EXT] = 1'b1;          lqcfabe = 1'b0;          mga3dbd = 1'b0;       end      else if (mtb1665) begin        shc3daa[`ddr3_ipcore_TPD_S] = 1'b1;        lqcfabe = 1'b1;        mga3dbd = 1'b1;      end       else begin          shc3daa[`ddr3_ipcore_TPD_S] = 1'b1;       end    end                fcb87b5[`ddr3_ipcore_CKE_LOW] :  begin        shc3daa[`ddr3_ipcore_PWR_ENT] = 1'b1;        ba8c71d = 1'b1;        lsbd2f2 = 1'b1;    end                    fcb87b5[`ddr3_ipcore_TXPDLL_S] :  begin      xl1c753= 1'b0;      lsbd2f2 = 1'b0;      if (ea59967) begin             shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;             kf2cbab = 1'b0;             wlbe40b = 1'b0;             ux902ed = 1'b0;             gqb6276 = 1'b1;             kf239b = 1'b1;      end      else begin             shc3daa[`ddr3_ipcore_TXPDLL_S] = 1'b1;      end    end                




    fcb87b5[`ddr3_ipcore_LMR_S] :  begin      ir1d4ff = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_4
       shc3daa[`ddr3_ipcore_N_LMR] = 1'b1;

`else
    
`ifdef ddr3_ipcore_CS_WIDTH_2
         shc3daa[`ddr3_ipcore_N_LMR] = 1'b1;     
`else
        shc3daa[`ddr3_ipcore_TMRD_S] = 1'b1;        kd60ab3 = 1'b1;     
`endif


`endif
    end    fcb87b5[`ddr3_ipcore_N_LMR] :  begin      kq53fe8 = 1'b1;      shc3daa[`ddr3_ipcore_L2L] = 1'b1;   end    fcb87b5[`ddr3_ipcore_L2L] :  begin      shc3daa[`ddr3_ipcore_TMRD_S] = 1'b1;      kd60ab3 = 1'b1;      kq53fe8 = 1'b0;    end                    fcb87b5[`ddr3_ipcore_TMRD_S] :  begin      if (tj8b32c) begin        shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;        kf2cbab = 1'b1;        kd60ab3 = 1'b0;        kf239b = 1'b1;      end      else begin         shc3daa[`ddr3_ipcore_TMRD_S] = 1'b1;         kd60ab3 = 1'b1;      end    end                    fcb87b5[`ddr3_ipcore_REF_S] :  begin       ph2d82a = 1'b0;       if (jp6e4a0) begin   if (lsa227e) begin                 shc3daa[`ddr3_ipcore_SREF_ENT] = 1'b1;             zm89d8c = 1'b1;             jp6e4a0 = 1'b0;             lqebea5 = 1'b0;             kdf70f6 = 1'b0;             
`ifdef ddr3_ipcore_DIR_SREF_EXT
             kqeaf90 = 1'b0;             
`else
             kqeaf90 = 1'b1;             
`endif
  end  else begin             shc3daa[`ddr3_ipcore_REF_S] = 1'b1;  end       end       else begin          shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;          kf2cbab = 1'b1;          th7ed89 = 1'b1;          kf239b = 1'b1;       end    end

                    fcb87b5[`ddr3_ipcore_ZQCLONG] :  begin        shc3daa[`ddr3_ipcore_TZQOPER_S] = 1'b1;        kfd12d = 1'b0;        osffa0d = 1'b1;    end                    fcb87b5[`ddr3_ipcore_ZQCSHORT] :  begin        shc3daa[`ddr3_ipcore_TZQS_S] = 1'b1;        sh44b60 = 1'b0;        wje8344 = 1'b1;    end                    fcb87b5[`ddr3_ipcore_TZQOPER_S] :  begin        if (ay78d8b) begin          shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;          kf2cbab = 1'b1;          osffa0d = 1'b0;          ux902ed = 1'b0;          kf239b = 1'b1;          en5e4bc = 1'b1;
        end        else begin          shc3daa[`ddr3_ipcore_TZQOPER_S] = 1'b1;          osffa0d = 1'b1;        end    end                    fcb87b5[`ddr3_ipcore_TZQS_S] :  begin        if (ipc6c59) begin          shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;          kf2cbab = 1'b1;          wje8344 = 1'b0;          en5e4bc = 1'b1;          ux902ed = 1'b0;          kf239b = 1'b1;
        end        else begin          shc3daa[`ddr3_ipcore_TZQS_S] = 1'b1;          wje8344 = 1'b1;        end    end
    default: begin       shc3daa[`ddr3_ipcore_IDLE_SP] = 1'b1;        kf239b = 1'b0;        ux902ed = 1'b0;    end
endcase
end

endmodule































`timescale 1 ns / 100 ps
module tj9e7f9_ddr3_ipcore (

   clk,
   rst_n,
   param_trp ,
   param_tckesr ,
   param_tzqoper ,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_twr,  
   param_txpdll,
   param_tcke,
   lsb20e8, 
   nt163cf,   
   ykd445d,
   vv4a79f,
   kd7f9f8,
   hbfcfc4,			
   mre7e27,
   ng3f13d,
   ipf89eb,
   suc4f5d,
   vx27ae9,
   jr3d74f,
   xweba7e,
   by5d3f3,			
   ble9f9b,
   fn4fcde,
   vv7e6f6,
   vvf37b7,
   rv9bdbf,
   wwdedff,     
   co34709,   
   oh90743,   
    

   lf907b,
   wj41ef2,
   vv7bca9,
   wjf2a70,
   qia9c25,
   of70945,
   fc2516f,
   hb45bde,   
   gb6f7be,
   ykdefa6,
   qvabc43,
   ri35f25, 			
   th61357,		   
   tj9abf,
   fa4d5ff,
   nr5f942,
   cme50bf,
   dm57fd5,		 
   ntbfeab,			 
   cmff55e,
   wwfaaf1,
   xwd5788,
   en5ec67,
   ykefacf,
   ic7d679,
`ifdef ddr3_ipcore_DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   fp8e464,
   zz91939      
   );
input                             clk;
input                             rst_n;
input [`ddr3_ipcore_TRP_WIDTH-1:0]            param_trp ;
input [`ddr3_ipcore_TCKESR_WIDTH-1:0]         param_tckesr ;
input [`ddr3_ipcore_TZQOPER_WIDTH-1:0]        param_tzqoper ;
input [`ddr3_ipcore_TZQS_WIDTH-1:0]           param_tzqs;
input [`ddr3_ipcore_TMRD_WIDTH-1:0]           param_tmrd;
input [`ddr3_ipcore_TPD_WIDTH-1:0]            param_tpd;
input [`ddr3_ipcore_TWR_WIDTH-1:0]            param_twr;
input [`ddr3_ipcore_TXPDLL_WIDTH-1:0]         param_txpdll;
input [`ddr3_ipcore_TCKE_WIDTH-1:0]           param_tcke;
input                             lsb20e8;
input [`ddr3_ipcore_RL_WIDTH-1:0]             nt163cf;
input                             ykd445d;
input                             vv4a79f;
input                             kd7f9f8;
input                             hbfcfc4;
input                             mre7e27;
input                             ng3f13d;
input                             ipf89eb;
input                             suc4f5d;
input                             vx27ae9;
input                             jr3d74f;
input                             xweba7e;
input                             by5d3f3;
input                             ble9f9b;
input                             fn4fcde;
input                             vv7e6f6;
input                             vvf37b7;
input                             rv9bdbf;
input                             wwdedff;
input                             co34709;
input [3:0]                       oh90743;
output                            lf907b;
output                            wj41ef2;
output                            vv7bca9;
output                            wjf2a70;
output                            qia9c25;
output                            of70945;
output                            fc2516f;
output                            hb45bde;
output                            gb6f7be;
output                            ykdefa6;
output                            qvabc43;
output                            ri35f25;
output                            th61357;
output                            tj9abf;
output                            fa4d5ff;
output                            nr5f942;
output                            cme50bf;
output                            dm57fd5;
output                            ntbfeab;
output                            cmff55e;
output                            wwfaaf1;
output                            xwd5788;
output                            en5ec67;
output                            ic7d679;
output                            ykefacf;

`ifdef ddr3_ipcore_DIR_SREF_EXT
output                            sref_ent_cmd;
output                            sref_ext_cmd;

`endif
output                            fp8e464;
output                            zz91939;
wire [`ddr3_ipcore_TRP_WIDTH-1:0]             param_trp ;
wire [`ddr3_ipcore_TCKESR_WIDTH-1:0]          param_tckesr ;
wire [`ddr3_ipcore_TZQOPER_WIDTH-1:0]         param_tzqoper ;
wire [`ddr3_ipcore_TZQS_WIDTH-1:0]            param_tzqs;
wire [`ddr3_ipcore_TMRD_WIDTH-1:0]            param_tmrd;
wire [`ddr3_ipcore_TPD_WIDTH-1:0]             param_tpd;
wire [`ddr3_ipcore_TWR_WIDTH-1:0]             param_twr;
wire [`ddr3_ipcore_TXPDLL_WIDTH-1:0]          param_txpdll;
wire [`ddr3_ipcore_TCKE_WIDTH-1:0]            param_tcke;
wire [`ddr3_ipcore_RL_WIDTH-1:0]              nt163cf;

`ifdef ddr3_ipcore_DIR_SREF_EXT
wire                              sref_ent_cmd;
wire                              sref_ext_cmd;

`endif


`ifdef ddr3_ipcore_DIR_SREF_EXT

`endif










`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif


`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif





 ba2f748_ddr3_ipcore sw1f2c4(
   .clk( clk ),   .rst_n( rst_n ),   .ykd445d( ykd445d ),   .ps485bf( ps485bf ),   .vi42dfa( vi42dfa ),
   .ph16fd2( ph16fd2 ),   .dob7e97( dob7e97 ),   .zzbf4ba( zzbf4ba ),   .ykfa5d7( ykfa5d7 ),   .thd2eb9( thd2eb9 ),   .ie975cf( ie975cf ),   .hbd73c6( hbd73c6 ),   .mgb9e36( mgb9e36 ),   .zkcf1b1( zkcf1b1 ),   .ay78d8b( ay78d8b ),   .ipc6c59( ipc6c59 ),   .oh362cc( oh362cc ),   .mtb1665( mtb1665 ),   .tj8b32c( tj8b32c ),   .ea59967( ea59967 ),   .vv4a79f(vv4a79f),   .lsa227e(lsa227e),   .oh90743 (oh90743  ),
   .ri35f25( ri35f25 ),
   .th61357( th61357 ),
   .tj9abf( tj9abf ),   .fa4d5ff( fa4d5ff ),   .nr5f942( nr5f942 ),   .lf907b( lf907b ) ,   .wj41ef2( wj41ef2 ) ,   .vv7bca9( vv7bca9 ) ,   .wjf2a70( wjf2a70 ),   .qia9c25( qia9c25 ),   .of70945 ( of70945  ),   .fc2516f( fc2516f ),   .gb6f7be( gb6f7be ),   .ykdefa6( ykdefa6 ),   .hb45bde( hb45bde ),   .lsad5da( lsad5da ),   .rv226a9( rv226a9 ),   .zz1354e( zz1354e ),   .cb9aa76( cb9aa76 ),   .hod53b5( hod53b5 ),   .qia9dab( qia9dab ),   .uv4ed58( uv4ed58 ),   .jc76ac4( jc76ac4 ),   .vxb5622( vxb5622 ),   .qvabc43( qvabc43 ),   .hqbdc2f(blec99a),   .cme50bf( cme50bf ),   .en5ec67( en5ec67 ),

`ifdef ddr3_ipcore_DIR_SREF_EXT
   .sref_ent_cmd (sref_ent_cmd),   .sref_ext_cmd (sref_ext_cmd),

`endif
   .xwd5788(xwd5788)   );



  qg68bb1_ddr3_ipcore vv45d88(
   .clk( clk ),   .rst_n( rst_n ),   .param_trp( param_trp ) ,   .param_tckesr( param_tckesr) ,   .param_tzqoper( param_tzqoper ) ,   .param_twr( param_twr ),   .param_tzqs( param_tzqs ),   .param_tmrd( param_tmrd ),   .param_tpd( param_tpd ),   .param_txpdll( param_txpdll ),   .param_tcke( param_tcke ),   .lsad5da( lsad5da ),   .zz1354e( zz1354e ),   .cb9aa76( cb9aa76 ),   .hod53b5( hod53b5 ),   .qia9dab( qia9dab ),   .uv4ed58( uv4ed58 ),   .jc76ac4( jc76ac4 ),   .lsb20e8( lsb20e8 ),   .nt163cf(nt163cf),   .vxb5622( vxb5622 ),   .rv226a9( rv226a9 ),   .hb45bde( hb45bde ),   .ukff3f( ie975cf ),
   .hbd73c6( hbd73c6 ),   .mgb9e36( mgb9e36 ),   .zkcf1b1( zkcf1b1 ),   .ay78d8b( ay78d8b ),   .ipc6c59( ipc6c59 ),   .oh362cc( oh362cc ),   .mtb1665( mtb1665 ),   .tj8b32c( tj8b32c ),   .ea59967( ea59967 ) ,   .lsa227e(lsa227e)   );

ba3ad21_ddr3_ipcore mrd690a(
   .clk(clk ),   .rst_n(rst_n ),   .vv4a79f(vv4a79f),   .kd7f9f8(kd7f9f8 ),   .hbfcfc4(hbfcfc4 ),
   .mre7e27(mre7e27 ),   .ng3f13d(ng3f13d ),   .ipf89eb(ipf89eb ),   .suc4f5d(suc4f5d ),   .vx27ae9(vx27ae9 ),   .jr3d74f(jr3d74f ),   .xweba7e(xweba7e ),   .by5d3f3(by5d3f3 ),
   .ble9f9b(ble9f9b ),   .fn4fcde(fn4fcde ),   .vv7e6f6(vv7e6f6 ),   .vvf37b7(vvf37b7 ),   .rv9bdbf(rv9bdbf ),   .wwdedff(wwdedff ),   .co34709(co34709 ),   .qia9c25(qia9c25 ),   .gb6f7be(gb6f7be ),   .ykdefa6(ykdefa6 ),   .th61357( th61357 ),
   .tj9abf( tj9abf ),   .fa4d5ff( fa4d5ff ),

   .dm57fd5(dm57fd5 ),
   .ntbfeab(ntbfeab ),
   .cmff55e(cmff55e ),   .wwfaaf1(wwfaaf1 ),   .xwd5788(xwd5788 ),   .ir26e68(ps485bf ),   .wyb9a2f(vi42dfa ),   .cm68bce(ph16fd2 ),   .fc2f387(dob7e97 ),   .zzbf4ba(zzbf4ba ),   .ykfa5d7(ykfa5d7 ),   .thd2eb9(thd2eb9 ),   .ukff3f(ie975cf ),   .ic7d679(ic7d679),   .ykefacf(ykefacf),   .fp8e464(fp8e464),   .zz91939(zz91939)
   );
 endmodule































`timescale 1 ns / 100 ps
module qg68bb1_ddr3_ipcore (

   clk,
   rst_n,
   param_trp ,
   param_tckesr ,
   param_tzqoper ,
   param_twr,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_txpdll,
   param_tcke,
   lsad5da,
   rv226a9,
   zz1354e,
   cb9aa76,
   hod53b5,
   qia9dab,
   uv4ed58,
   jc76ac4,
   lsb20e8,
   nt163cf,
   vxb5622,
   hb45bde,
   ukff3f,
   

   hbd73c6,
   mgb9e36,
   zkcf1b1,
   ay78d8b,
   ipc6c59,
   oh362cc,
   mtb1665,
   tj8b32c,
   ea59967,
   lsa227e      
   );
input                             clk;
input                             rst_n;
input [`ddr3_ipcore_TRP_WIDTH-1:0]            param_trp ;
input [`ddr3_ipcore_TCKESR_WIDTH-1:0]         param_tckesr ;
input [`ddr3_ipcore_TZQOPER_WIDTH-1:0]        param_tzqoper ;
input [`ddr3_ipcore_TZQS_WIDTH-1:0]           param_tzqs;
input [`ddr3_ipcore_TMRD_WIDTH-1:0]           param_tmrd;
input [`ddr3_ipcore_TPD_WIDTH-1:0]            param_tpd;
input [`ddr3_ipcore_TWR_WIDTH-1:0]            param_twr;
input [`ddr3_ipcore_TXPDLL_WIDTH-1:0]         param_txpdll;
input [`ddr3_ipcore_TCKE_WIDTH-1:0]           param_tcke;
input                             lsad5da;
input                             zz1354e;
input                             cb9aa76;
input                             hod53b5;
input                             qia9dab;
input                             uv4ed58;
input                             jc76ac4;
input                             lsb20e8;
input [`ddr3_ipcore_RL_WIDTH-1:0]             nt163cf;
input                             vxb5622;
input                             rv226a9;
input                             hb45bde;
input                             ukff3f;
output                            hbd73c6;
output                            mgb9e36;
output                            zkcf1b1;
output                            ay78d8b;
output                            ipc6c59;
output                            oh362cc;
output                            mtb1665;
output                            tj8b32c;
output                            ea59967;
output                            lsa227e;
reg [`ddr3_ipcore_TRP_WIDTH-1:0]              ym87450 ;
reg [`ddr3_ipcore_TCKESR_WIDTH-1:0]           mt39795 ;
reg [`ddr3_ipcore_TZQOPER_WIDTH-1:0]          uicbcac ;
reg [`ddr3_ipcore_TZQS_WIDTH-1:0]             kd5e560;
reg [`ddr3_ipcore_TMRD_WIDTH-1:0]             qtf2b04;
reg [`ddr3_ipcore_TPD_WIDTH-1:0]              yz95824;
reg [`ddr3_ipcore_TXPDLL_WIDTH-1:0]           swac124;
reg [`ddr3_ipcore_TWR_WIDTH+`ddr3_ipcore_RL_WIDTH+1:0]    of60921;
reg [`ddr3_ipcore_TWR_WIDTH+`ddr3_ipcore_RL_WIDTH+1:0]    zm490c;
reg [8:0]                         wy24863;
reg [`ddr3_ipcore_TRFC_WIDTH-1:0]             ks24318;
reg                               hbd73c6;
wire                              mgb9e36;
wire                              zkcf1b1;
reg                               ay78d8b;
reg                               ipc6c59;
reg                               oh362cc;
wire                              mtb1665;
wire                              tj8b32c;
wire                              ea59967;
reg                               baa8a75;
reg                               lsa227e;



assign      mgb9e36  = (mt39795 == param_tckesr -1);
assign      zkcf1b1 = ( wy24863[8] == 1'b1 );
assign      mtb1665 = (yz95824 == param_tpd -1) ;
assign      tj8b32c = (qtf2b04 == param_tmrd -1);
assign      ea59967 = lsb20e8? ( swac124 == param_tcke -1) : ( baa8a75 );



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ym87450 <=  'b0;   else if (hbd73c6 )      ym87450 <=  'b0;   else if ( lsad5da)      ym87450 <=  ym87450 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      hbd73c6 <=  1'b0;   else if (ym87450 == (param_trp -2))      hbd73c6 <=  1'b1;   else      hbd73c6 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mt39795 <=  'b0;   else if (mgb9e36 )      mt39795 <=  'b0;   else if ( zz1354e)      mt39795 <=  mt39795 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      uicbcac <=  'b0;   else if (ay78d8b )      uicbcac <=  'b0;   else if ( hod53b5)      uicbcac <=  uicbcac + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ay78d8b <=  1'b0;   else if (uicbcac == (param_tzqoper -2))      ay78d8b <=  1'b1;   else      ay78d8b <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kd5e560 <=  'b0;   else if (ipc6c59 )      kd5e560 <=  'b0;   else if ( qia9dab)      kd5e560 <=  kd5e560 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ipc6c59 <=  1'b0;   else if (kd5e560 == (param_tzqs -2))      ipc6c59 <=  1'b1;   else      ipc6c59 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      yz95824 <=  'b0;   else if (mtb1665 )      yz95824 <=  'b0;   else if ( jc76ac4)      yz95824 <=  yz95824 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qtf2b04 <=  'b0;   else if (tj8b32c )      qtf2b04 <=  'b0;   else if ( uv4ed58)      qtf2b04 <=  qtf2b04 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      swac124 <=  'b0;   else if (ea59967 )      swac124 <=  'b0;   else if ( vxb5622)      swac124 <=  swac124 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      baa8a75 <=  1'b0;   else if ( swac124 == (param_txpdll -2))      baa8a75 <=  1'b1;   else      baa8a75 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zm490c <=  'b0;   else      zm490c <=  nt163cf + param_twr +2 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      of60921 <=  'b0;   else if ( oh362cc )      of60921 <=  'b0;   else if ( rv226a9 )      of60921 <=  of60921 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    oh362cc    <=  1'b0;   else if ( of60921 == (zm490c -2) )    oh362cc  <=  1'b1;   else    oh362cc    <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wy24863 <=  'b0;   else if ( zkcf1b1 )      wy24863 <=  'b0;   else if ( cb9aa76 )      wy24863 <=  wy24863 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ks24318 <=  'b0;   else if ( lsa227e )      ks24318 <=  'b0;
   else if ( (ukff3f && (ks24318 == 'b0)) || hb45bde || |ks24318)      ks24318 <=  ks24318 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      lsa227e <=  1'b0;
   else if ( ks24318 == `ddr3_ipcore_TRFC -1 )       lsa227e <=  1'b1;   else      lsa227e <=  1'b0;
end

endmodule































`timescale 1 ns / 100 ps
module ba3ad21_ddr3_ipcore (

   clk,
   rst_n,
   vv4a79f,
   kd7f9f8,
   hbfcfc4,			
   mre7e27,
   ng3f13d,
   ipf89eb,
   suc4f5d,
   vx27ae9,
   jr3d74f,
   xweba7e,
   by5d3f3,			
   ble9f9b,
   fn4fcde,
   vv7e6f6,
   vvf37b7,
   rv9bdbf,
   wwdedff,      
   co34709, 
   qia9c25,
   gb6f7be,
   ykdefa6,
   th61357 ,			   
   tj9abf ,
   fa4d5ff ,
    

   dm57fd5,		 
   ntbfeab,			 
   cmff55e,
   wwfaaf1,
   xwd5788, 
   ir26e68,
   wyb9a2f,
   cm68bce,
   fc2f387,  
   zzbf4ba,
   ykfa5d7,
   thd2eb9,
   ukff3f,
   ic7d679,
   ykefacf,
   fp8e464,
   zz91939 			 
   );
input          clk;
input          rst_n;
input          vv4a79f;
input          kd7f9f8;
input          hbfcfc4;
input          mre7e27;
input          ng3f13d;
input          ipf89eb;
input          suc4f5d;
input          vx27ae9;
input          jr3d74f;
input          xweba7e;
input          by5d3f3;
input          ble9f9b;
input          fn4fcde;
input          vv7e6f6;
input          vvf37b7;
input          rv9bdbf;
input          wwdedff;
input          co34709;
input          qia9c25;
input          gb6f7be;
input          ykdefa6;
input          th61357;
input          tj9abf ;
input          fa4d5ff;
output          ukff3f;
output          dm57fd5;
output          ntbfeab;
output          cmff55e;
output          wwfaaf1;
input           xwd5788;
output          ir26e68;
output          wyb9a2f;
output          cm68bce;
output          fc2f387;
output          zzbf4ba;
output          ykfa5d7;
output          thd2eb9;
output          ic7d679;
output          ykefacf;
output          fp8e464;
output          zz91939;

`define ddr3_ipcore_IDLESP 0

`define ddr3_ipcore_Q0SP 1

`define ddr3_ipcore_Q1SP 2

`define ddr3_ipcore_REFF 3

`define ddr3_ipcore_SRE_SP 4

`define ddr3_ipcore_SRX_SP 5

`define ddr3_ipcore_PDE_SP 6

`define ddr3_ipcore_PDX_SP 7

`define ddr3_ipcore_MRS_SP 8         

`define ddr3_ipcore_ZQCL_SP 9         

`define ddr3_ipcore_ZQCS_SP 10         
reg [11:0]              vx13c9d, bn9e4ef;
reg                     fp8e464, xy93bf5;
reg                     zz91939, uiefd58;
reg                     ukff3f, kd7a9f0;
reg                     ir26e68, jpe6c46;
reg                     wyb9a2f, cbb11bd;
reg                     cm68bce, qg46f61 ;
reg                     fc2f387, hqbd846;
reg                     zzbf4ba, bl6119f;
reg                     ykfa5d7, os467fd;
reg                     thd2eb9, ir9ff4c;
reg                     cmffa65, uvfd328;
reg                     jpe9944, os4ca26;
reg                     ld5a933, ayd499f;
reg                     kfa4cf8, ux267c4;
reg                     dm57fd5, ym8dd61, vv6eb09;
reg                     ntbfeab;
reg                     cmff55e;
reg                     wwfaaf1;
reg                     lf9f4f, vv4fa7f;
reg                     uidef57;
wire                    ic7d679;
wire                    ykefacf;












`define ddr3_ipcore_IDLESP 0


`define ddr3_ipcore_Q0SP 1


`define ddr3_ipcore_Q1SP 2


`define ddr3_ipcore_REFF 3


`define ddr3_ipcore_SRE_SP 4


`define ddr3_ipcore_SRX_SP 5


`define ddr3_ipcore_PDE_SP 6


`define ddr3_ipcore_PDX_SP 7


`define ddr3_ipcore_MRS_SP 8         


`define ddr3_ipcore_ZQCL_SP 9         


`define ddr3_ipcore_ZQCS_SP 10         




assign  ykefacf = ( fp8e464 && (xwd5788 || wwfaaf1 || cmff55e  || ym8dd61))                        || (ntbfeab && ld5a933 );
assign  ic7d679 =( zz91939 && (xwd5788 || wwfaaf1 || cmff55e || vv6eb09))                      || (ntbfeab && ayd499f );




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       wwfaaf1          <=  1'b0 ;   else if ((cm68bce || fc2f387)&& vv4a79f)       wwfaaf1          <=  1'b1 ;   else       wwfaaf1          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       cmff55e          <=  1'b0 ;   else if ((ir26e68 || wyb9a2f)&& vv4a79f)       cmff55e          <=  1'b1 ;   else       cmff55e          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ntbfeab          <=  1'b0 ;     else if (qia9c25 && vv4a79f)       ntbfeab          <=  1'b1 ;   else       ntbfeab          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       dm57fd5          <=  1'b0 ;       ym8dd61         <=  1'b0 ;       vv6eb09         <=  1'b0 ;   end   else if ((ukff3f)&& vv4a79f) begin       dm57fd5          <=  1'b1 ;       ym8dd61         <=  1'b1 ;       vv6eb09         <=  1'b1 ;   end   else begin       dm57fd5          <=  1'b0 ;       ym8dd61         <=  1'b0 ;       vv6eb09         <=  1'b0 ;
   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       lf9f4f          <=  1'b0 ;   else if (( fp8e464 && (ukff3f || zzbf4ba || ir26e68 || wyb9a2f ||        cm68bce || fc2f387 || ykfa5d7 || thd2eb9 ))&& vv4a79f)       lf9f4f          <=  1'b1 ;   else       lf9f4f          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       vv4fa7f          <=  1'b0 ;   else if (( zz91939 && (ukff3f || zzbf4ba || ir26e68 || wyb9a2f ||        cm68bce || fc2f387 || ykfa5d7 || thd2eb9 )) && vv4a79f)       vv4fa7f          <=  1'b1 ;   else       vv4fa7f          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ld5a933          <=  1'b0 ;   else if (lf9f4f)       ld5a933          <=  1'b1 ;   else if (vv4fa7f || !vv4a79f  || tj9abf)       ld5a933          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ayd499f          <=  1'b0 ;   else if (vv4fa7f)       ayd499f          <=  1'b1 ;   else if (lf9f4f || !vv4a79f  || tj9abf)       ayd499f          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       kfa4cf8          <=  1'b0 ;       ux267c4          <=  1'b0 ;   end   else begin       kfa4cf8          <=  ld5a933 ;       ux267c4          <=  ayd499f ;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       uidef57  <= 1'b0;   else if (ir26e68 || cm68bce || ukff3f || zzbf4ba || ykfa5d7 || thd2eb9)       uidef57  <= 1'b1;   else if (th61357 || fa4d5ff || tj9abf || qia9c25 || xwd5788)       uidef57  <= 1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      vx13c9d           <=  12'b0 ;      fp8e464              <=  1'b0;      zz91939              <=  1'b0;      ukff3f        <=  1'b0;      ir26e68   <=  1'b0;      wyb9a2f   <=  1'b0;      cm68bce     <=  1'b0;      fc2f387     <=  1'b0;      zzbf4ba             <=  1'b0;      ykfa5d7         <=  1'b0;      thd2eb9        <=  1'b0;      cmffa65       <=  1'b0;      jpe9944        <=  1'b0;   end   else begin      vx13c9d           <=  bn9e4ef ;      fp8e464              <=  xy93bf5;      zz91939              <=  uiefd58;      ukff3f        <=  kd7a9f0;      ir26e68    <=  jpe6c46;      wyb9a2f    <=  cbb11bd;      cm68bce      <=  qg46f61;      fc2f387      <=  hqbd846;      zzbf4ba             <=  bl6119f;      ykfa5d7         <=  os467fd;      thd2eb9        <=  ir9ff4c;      cmffa65       <=  uvfd328;      jpe9944        <=  os4ca26 ;   end
end





always @ (vx13c9d or jr3d74f  or wwdedff  or ld5a933 or ayd499f or          kd7f9f8 or hbfcfc4 or mre7e27 or ng3f13d or          ipf89eb or suc4f5d or vx27ae9  or co34709 or kfa4cf8 or          xweba7e or by5d3f3 or ble9f9b or fn4fcde or          vv7e6f6 or vvf37b7 or rv9bdbf or jpe9944 or ux267c4 or          cmffa65  or uidef57 or fp8e464 or zz91939 or ukff3f or cmffa65 or jpe9944 or           vv4a79f          ) begin
bn9e4ef = 12'b0;
jpe6c46 = 1'b0;
cbb11bd = 1'b0;
qg46f61 = 1'b0;
hqbd846 = 1'b0;
bl6119f = 1'b0;
os467fd = 1'b0;
ir9ff4c = 1'b0;
xy93bf5= fp8e464;
uiefd58= zz91939;
kd7a9f0 = ukff3f;
uvfd328 =cmffa65;
os4ca26 = jpe9944;
case (1)        vx13c9d[`ddr3_ipcore_IDLESP] :  begin                        xy93bf5 = 1'b0;                        uiefd58 = 1'b0;                        kd7a9f0 = 1'b0;                        jpe6c46 = 1'b0;                        cbb11bd = 1'b0;                        qg46f61 = 1'b0;                        hqbd846 = 1'b0;                        bl6119f = 1'b0;                        os467fd = 1'b0;                        ir9ff4c = 1'b0;                        uvfd328 = 1'b0;                        os4ca26 = 1'b0;
                        if ((jr3d74f || co34709) && !uidef57 && vv4a79f) begin                            bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                            xy93bf5 = 1'b1;                        end                        else if ((wwdedff || co34709) && !uidef57 && vv4a79f) begin                            bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                            uiefd58 = 1'b1;                        end                        else bn9e4ef[`ddr3_ipcore_IDLESP] = 1'b1;                end


   vx13c9d[`ddr3_ipcore_Q0SP] :  begin                   if (vv4a79f) begin                    if (wwdedff && ld5a933 && uidef57)                       begin                        bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                        xy93bf5 = 1'b0;                        uiefd58 = 1'b1;                        uvfd328 = 1'b0;                        os4ca26 = 1'b0;                    end                     else if ((ld5a933 || kfa4cf8 )&& !uidef57 && !co34709 ) begin                        bn9e4ef[`ddr3_ipcore_IDLESP] = 1'b1;                        xy93bf5 = 1'b0;                        uiefd58 = 1'b1;                    end                    else if (jr3d74f ) begin                       if (kd7f9f8  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_SRE_SP] = 1'b1;                        jpe6c46 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (hbfcfc4 && !cmffa65) begin                        bn9e4ef[`ddr3_ipcore_SRX_SP] = 1'b1;                        cbb11bd =1'b1;                        xy93bf5 = 1'b1;
                       end                       else if (mre7e27  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_PDE_SP] = 1'b1;                        qg46f61 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (ng3f13d && !jpe9944) begin                        bn9e4ef[`ddr3_ipcore_PDX_SP] = 1'b1;                        hqbd846 =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (ipf89eb  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_MRS_SP] = 1'b1;                        bl6119f =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (suc4f5d  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_ZQCL_SP] = 1'b1;                        os467fd =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (vx27ae9  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_ZQCS_SP] = 1'b1;                        ir9ff4c =1'b1;                        xy93bf5 = 1'b1;                       end                       else if (co34709  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_REFF] = 1'b1;                        kd7a9f0 =1'b1;                        xy93bf5 = 1'b1;                       end                       else bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                    end                      else if (co34709  && !uidef57) begin                      bn9e4ef[`ddr3_ipcore_REFF] = 1'b1;                      kd7a9f0 =1'b1;                      xy93bf5 = 1'b1;                    end                    else if (!co34709  && !uidef57) begin                          bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                    end                    else begin                          bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                    end                 end 
                 else  begin                        bn9e4ef[`ddr3_ipcore_IDLESP] = 1'b1;                        uvfd328 = 1'b0;                        os4ca26 = 1'b0;                 end                end
 vx13c9d[`ddr3_ipcore_SRE_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     jpe6c46 = 1'b0;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     jpe6c46 = 1'b0;                 end                end
vx13c9d[`ddr3_ipcore_SRX_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     cbb11bd = 1'b0;                     uvfd328 = 1'b1;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     cbb11bd = 1'b0;                     uvfd328 = 1'b1;                 end                end
 vx13c9d[`ddr3_ipcore_PDE_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     qg46f61 = 1'b0;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     qg46f61 = 1'b0;                 end                end
 vx13c9d[`ddr3_ipcore_PDX_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     hqbd846 = 1'b0;                     os4ca26 = 1'b1;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     hqbd846 = 1'b0;                     os4ca26 = 1'b1;                 end                end
 vx13c9d[`ddr3_ipcore_MRS_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     bl6119f = 1'b0;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     bl6119f = 1'b0;                 end                end
 vx13c9d[`ddr3_ipcore_ZQCL_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     os467fd = 1'b0;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     os467fd = 1'b0;                 end                end
  vx13c9d[`ddr3_ipcore_ZQCS_SP] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     ir9ff4c = 1'b0;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     ir9ff4c = 1'b0;                 end                end  vx13c9d[`ddr3_ipcore_REFF] :  begin                  if (fp8e464) begin                     bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                     kd7a9f0 = 1'b0;                  end                  else  begin                     bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                     kd7a9f0 = 1'b0;                 end                end


   vx13c9d[`ddr3_ipcore_Q1SP] :  begin                   if (vv4a79f) begin                     if (jr3d74f && ayd499f && uidef57)                       begin                        bn9e4ef[`ddr3_ipcore_Q0SP] = 1'b1;                        xy93bf5 = 1'b1;                        uiefd58 = 1'b0;                        uvfd328 = 1'b0;                        os4ca26 = 1'b0;                    end                     else if ((ayd499f ||ux267c4 )&& !uidef57 && !co34709) begin                        bn9e4ef[`ddr3_ipcore_IDLESP] = 1'b1;                        xy93bf5 = 1'b0;                        uiefd58 = 1'b1;                    end                    else if (wwdedff ) begin                       if (xweba7e  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_SRE_SP] = 1'b1;                        jpe6c46 =1'b1;                        uiefd58 = 1'b1;                       end                       else if (by5d3f3 && !cmffa65) begin                        bn9e4ef[`ddr3_ipcore_SRX_SP] = 1'b1;                        cbb11bd =1'b1;                        uiefd58 = 1'b1;                       end                       else if (ble9f9b  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_PDE_SP] = 1'b1;                        qg46f61 =1'b1;                        uiefd58 = 1'b1;                       end                       else if (fn4fcde && !jpe9944) begin                        bn9e4ef[`ddr3_ipcore_PDX_SP] = 1'b1;                        hqbd846 =1'b1;                        uiefd58 = 1'b1;                       end                       else if (vv7e6f6  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_MRS_SP] = 1'b1;                        bl6119f =1'b1;                        uiefd58 = 1'b1;                       end                       else if (vvf37b7  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_ZQCL_SP] = 1'b1;                        os467fd =1'b1;                        uiefd58 = 1'b1;                       end                       else if (rv9bdbf  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_ZQCS_SP] = 1'b1;                        ir9ff4c =1'b1;                        uiefd58 = 1'b1;                       end                        else if (co34709  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_REFF] = 1'b1;                        kd7a9f0 =1'b1;                        uiefd58 = 1'b1;                       end                       else bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                    end                    else if (co34709  && !uidef57) begin                        bn9e4ef[`ddr3_ipcore_REFF] = 1'b1;                        kd7a9f0 =1'b1;                        uiefd58 = 1'b1;                    end                    else if (!co34709  && !uidef57) begin                          bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                    end                    else bn9e4ef[`ddr3_ipcore_Q1SP] = 1'b1;                 end                 else begin                        bn9e4ef[`ddr3_ipcore_IDLESP] = 1'b1;                        uvfd328 = 1'b0;                        os4ca26 = 1'b0;                     end                end   default : begin                   bn9e4ef[`ddr3_ipcore_IDLESP] = 1'b1;             end
endcase
end
endmodule   `timescale 1 ns / 100 ps
module sj9ad86_ddr3_ipcore(

         
         clk, 		        
         rst_n,  			
		 
         
         rvb0d69,  
         je86b4f,         
         vk35a7a,        
         puad3d3,  
         ps69e9b,   
         nr4f4da,  		 
 		 
         
         kd7a6d7,
		
		
		 kdd36bd,  
         nt9b5ec,         
         nedaf66,        
         thd7b33,  
         jebd99f,   
         dzeccfb,  
		 tu667de,
		 oh33ef2,
		 
		
		ir9f794,                       

		
		
		 tw865cf,						
		 db32e7b,				
		 wy973de,			
		 
		
         ph94884,
		 ana4426,
		 xl22135,
		 sw109ae,
         zz84d70,
         yz26b87,		
				
		
		 fc35c3d,
		 sjae1eb 
		 			
);
parameter kd70f5c = 4'd1;
parameter cmd_width  = 4;
parameter addr_width = `ddr3_ipcore_ADDR_WIDTH ;
parameter burst_cnt_width = 5;
parameter ofly_burst_len_width = 1;
parameter queue_info_width	=	ofly_burst_len_width + cmd_width + burst_cnt_width + addr_width;
reg[3:0] ykc1c69;
input                            clk;
input                            rst_n;
input                            rvb0d69;
input   [3:0]                    je86b4f;
input   [`ddr3_ipcore_ADDR_WIDTH-1:0]        vk35a7a;
input   [4:0]                    puad3d3;
input                            ps69e9b;
input                            nr4f4da;
output kd7a6d7;
output	kdd36bd;
output	[3:0]	nt9b5ec;
output	[`ddr3_ipcore_ADDR_WIDTH-1:0]	nedaf66;
output	[4:0]	thd7b33;
output	jebd99f;
output	dzeccfb;
output	[queue_info_width-1 : 0]tu667de;
output	oh33ef2;
input	ir9f794;
input	[(`ddr3_ipcore_CS_WIDTH* 8)-1:0]	tw865cf;
output	[5:0]	db32e7b;
input	[`ddr3_ipcore_ROW_WIDTH-1:0]	wy973de;
output	[5:0]                   ph94884;
output	[5:0]                   ana4426;
output	[queue_info_width-1 : 0]xl22135;
output	[queue_info_width-1 : 0]sw109ae;
output                          zz84d70;
output                          yz26b87;
input	fc35c3d;
input	sjae1eb;
wire	cob3b41;
wire	zzaa6bd;
wire [queue_info_width-1 : 0]	su68205;
reg  [queue_info_width-1 : 0]	med1f6f, ui7dbc4;
reg	th7bc13,do99661;
reg [queue_info_width-1 : 0]	uif007e,ep803f0,zz38876;
wire[addr_width - 1 : 0]	ks21db8,twedc0,by76e02,hqb7012,hqb8093;
wire[burst_cnt_width - 1 : 0]	gd24d2, cb12695,zm934ac,cb9a562;
wire[cmd_width -1 : 0]	cb958a7, ymac53c,ic629e1,hq14f09;
reg	[addr_width - 1 : 0]	wl3c253;
reg	[burst_cnt_width - 1 : 0]	zz94e3;
reg	[cmd_width -1 : 0]	ay538f7;
reg	ng9c7b9;
reg	the3dcb;
reg	qi157c1;
wire	yxf72fb;
wire	mgb97dd;
reg	uicbee8;
wire[`ddr3_ipcore_BSIZE-1:0]	ld5f740;
wire	xwfba06;
wire	vx84639, oscb30b;
reg	vv40cbd, tj65ef, db32f7f, wy97bfe;
reg	cb8fb78;
reg	kqeff8b;
reg cz7fc59;

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif				  
reg tufe2cc;
reg dmf1663;
reg[5:0] zz8b31a;
reg[5:0] ay598d7;
reg[5:0] ipf747d;
reg[5:0] rvba3ed;
reg qi1ae22;
reg rtd7111;
reg[queue_info_width-1 : 0] wwc4473;
reg[queue_info_width-1 : 0] tw11cc6;

































assign ld5f740	= uif007e[`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE-1:`ddr3_ipcore_COL_WIDTH];
assign db32e7b	= ld5f740;

assign kd7a6d7 = the3dcb;

assign yxf72fb = (cob3b41  || (cz7fc59&&(!fc35c3d))) && !kqeff8b && mgb97dd && do99661 && !cb8fb78;
assign su68205 = {nr4f4da, je86b4f, puad3d3, vk35a7a};
assign vx84639     = ps69e9b && the3dcb;


assign oscb30b = yxf72fb || cb8fb78;
assign ks21db8 = uif007e[addr_width - 1 : 0];
assign twedc0 = ep803f0[addr_width - 1 : 0];
assign by76e02 = zz38876[addr_width - 1 : 0];
assign hqb7012 = med1f6f[addr_width - 1 : 0];
assign hqb8093 = ui7dbc4[addr_width - 1 : 0];
assign gd24d2 = uif007e[addr_width + burst_cnt_width - 1 : addr_width];
assign cb12695 = {oscb30b}? ep803f0[addr_width + burst_cnt_width - 1 : addr_width] : cb12695;
assign zm934ac = zz38876[addr_width + burst_cnt_width - 1 : addr_width];
assign cb9a562 = med1f6f[addr_width + burst_cnt_width - 1 : addr_width];
assign cb958a7 = uif007e[cmd_width + burst_cnt_width + addr_width - 1 : burst_cnt_width + addr_width];
assign ymac53c = {oscb30b}? ep803f0[cmd_width + burst_cnt_width + addr_width - 1 : burst_cnt_width + addr_width] : ymac53c;
assign ic629e1 = zz38876[cmd_width + burst_cnt_width + addr_width - 1 : burst_cnt_width + addr_width];
assign hq14f09 = med1f6f[cmd_width + burst_cnt_width + addr_width - 1 : burst_cnt_width + addr_width];



assign cob3b41 = {ep803f0[cmd_width + burst_cnt_width + addr_width - 1 : burst_cnt_width + addr_width] == hq14f09 }? 1 : 0;

assign zzaa6bd = 1;







always@ (posedge clk or negedge rst_n)begin	if (!rst_n)	cz7fc59 <= 0;	else	cz7fc59 <= !sjae1eb;
end


always@ (posedge clk or negedge rst_n)	begin	if (!rst_n) begin	wl3c253	<=	0;	zz94e3	<=	0;	ay538f7	<=	0;	uicbee8	<=	0;	end	else begin	wl3c253	<=	twedc0;	zz94e3	<=	cb12695;	ay538f7	<=	ymac53c;	uicbee8	<=	yxf72fb;	end	end

always@ (posedge clk or negedge rst_n) begin	if (!rst_n) begin	vv40cbd	<=	0;	db32f7f	<=	0;	tj65ef	<=	0;	wy97bfe	<=	0;	end	else begin	vv40cbd	<=	vx84639;	db32f7f	<=	vv40cbd;	tj65ef	<=	oscb30b;	wy97bfe	<=	tj65ef;	end
end




always @(posedge clk or negedge rst_n)begin   if (!rst_n) begin      th7bc13 <= 0;      do99661 <= 0;      uif007e  <= 0;      ep803f0  <= 0;   end   else begin         case ({vx84639,oscb30b})            2'b01: begin	               th7bc13 <= 1'b0;               do99661 <= th7bc13;
               ep803f0 <= uif007e;
            end
            2'b10: begin                           	if (do99661) begin	th7bc13 <= 1'b1;	uif007e <= su68205;	end	else begin	do99661 <= 1'b1;	ep803f0 <= su68205;	end            end
            2'b11: begin               if (th7bc13) begin	ep803f0 <= uif007e;	uif007e <= su68205; end               else begin	ep803f0 <= su68205; end end         endcase      end
end

always @ (posedge clk or negedge rst_n)begin	if (!rst_n)
	zz38876	<=	0;	else begin	if (tj65ef)	zz38876	<=	ep803f0;	if (vx84639 && (!do99661))
	zz38876	<=	su68205;	end
end







`ifdef ddr3_ipcore_CS_WIDTH_1

assign xwfba06 = {  ((th7bc13 && do99661) &&(cb958a7 == 4'b1110) && (ymac53c == 4'b1110) && (tw865cf[ld5f740]== 0))	||	((th7bc13 && do99661) &&	(cb958a7 == 4'b0001 || cb958a7 == 4'b0010) && (ymac53c == cb958a7)      && gd24d2 == 5'd1 && cb12695 == 5'd1 && (tw865cf[ld5f740]== 1)  && (uif007e[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE]==wy973de))}? 1 : 0;

`else

assign xwfba06 = {  ((th7bc13 && do99661) &&(cb958a7 == 4'b1110) && (ymac53c == 4'b1110) && (tw865cf[ld5f740]== 0))	||	((th7bc13 && do99661) &&	(cb958a7 == 4'b0001 || cb958a7 == 4'b0010) && (ymac53c == cb958a7)      && gd24d2 == 5'd1 && cb12695 == 5'd1 && (tw865cf[ld5f740]== 1)  && (ks21db8[`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE-1:`ddr3_ipcore_COL_WIDTH + `ddr3_ipcore_BANK_WIDTH]==twedc0[`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE-1:`ddr3_ipcore_COL_WIDTH + `ddr3_ipcore_BANK_WIDTH])  && (uif007e[`ddr3_ipcore_ADDR_WIDTH-1:`ddr3_ipcore_COL_WIDTH+`ddr3_ipcore_BSIZE]==wy973de))}? 1 : 0;



`endif				  


always@(posedge clk or negedge rst_n)begin	if(!rst_n)	qi157c1 <= 0;	else	qi157c1 <= ~qi157c1;
end

always@(posedge clk or negedge rst_n)begin	if(!rst_n)	the3dcb <= 0;	else if(qi157c1 && (!do99661 || !th7bc13 || oscb30b))	the3dcb <= 1;	else	the3dcb <= 0;
end



always@(posedge clk or negedge rst_n)begin	if(!rst_n)	cb8fb78 <= 0;	else if(kqeff8b)	cb8fb78 <= 1'b0;	else if(oscb30b && xwfba06)
	cb8fb78 <= 1'b1; else	cb8fb78 <= 1'b0;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	kqeff8b <= 0;	else	kqeff8b <= cb8fb78;
end

always@(posedge clk or negedge rst_n)begin	if(!rst_n)	med1f6f <= 0;	else if(cb8fb78 && (ymac53c != 4'b1110))	med1f6f <= ep803f0;
end

always@(posedge clk or negedge rst_n)begin	if(!rst_n)	ui7dbc4 <= 0;	else if(cb8fb78 && (ymac53c == 4'b1110))	ui7dbc4 <= ep803f0;
end


always@(posedge clk or negedge rst_n)begin	if(!rst_n)	tufe2cc <= 0;	else if(oscb30b && (ymac53c == 4'b0001 || ymac53c == 4'b0010 || ymac53c == 4'b0011 || ymac53c == 4'b0100 ) && (cb12695 == 5'd1))	tufe2cc <= 1;	else	tufe2cc <= 0;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	dmf1663 <= 0;	else if(oscb30b && (ymac53c == 4'b1110))	dmf1663 <= 1;	else	dmf1663 <= 0;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	zz8b31a <= 0;	else if(zz8b31a == 6'd30)	zz8b31a <= 1;	else if(tufe2cc)	zz8b31a <= zz8b31a + 1;

end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	ay598d7 <= 0;	else if(ay598d7 == 6'd30)	ay598d7 <= 1;	else if(dmf1663)	ay598d7 <= ay598d7 + 1;

end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	ipf747d <= 0;	else if(tufe2cc)	ipf747d <= zz8b31a;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	rvba3ed <= 0;	else if(dmf1663)	rvba3ed <= ay598d7;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	qi1ae22 <= 0;	else	qi1ae22 <= cb8fb78 && (ymac53c != 4'b1110);
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	rtd7111 <= 0;	else	rtd7111 <= cb8fb78 && (ymac53c == 4'b1110);
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	wwc4473 <= 0;	else	wwc4473 <= med1f6f;
end
always@(posedge clk or negedge rst_n)begin	if(!rst_n)	tw11cc6 <= 0;	else	tw11cc6 <= ui7dbc4;
end




assign	kdd36bd	=	rvb0d69;
assign  nt9b5ec	=	ic629e1;
assign  nedaf66	=	by76e02 ;
assign  thd7b33	=	zm934ac;
assign	jebd99f	=	{uicbee8}?uicbee8:yxf72fb;
assign	dzeccfb	=	ep803f0[queue_info_width-1];
assign	mgb97dd	=	ir9f794;
assign	ph94884	=	ipf747d;
assign	tu667de =	tw11cc6;
assign	oh33ef2	=	rtd7111;
assign	ana4426	=	rvba3ed;
assign	xl22135	=	wwc4473;
assign	sw109ae	=	tw11cc6;
assign	zz84d70	=	qi1ae22;
assign	yz26b87	=	rtd7111;







endmodule





























`timescale 1 ns / 100 ps
module ddr3_sdram_core_ddr3_ipcore (






  

  clk,
  rst_n,
  param_trcd,
  param_trp,
  param_twr,
  param_tras,
  param_trc,
  param_trrd,
  param_trtp,
  param_twtr,
  param_tckesr,
  param_tzqoper,
  param_tzqs,
  param_tmrd,
  param_tpd,
  param_txpdll,
  param_tcke,
  param_txpr,
  param_tmod,
  param_tzqinit,
  addr_init_0,
  addr_init_1,
  addr_init_2,
  addr_init_3,
  wl_phase_dly_cnt,

  phy_init_act, 
  wl_act,
  wl_done,                             
 

  init_start,
  cmd,
  addr,
  cmd_burst_cnt,
  cmd_valid,
  ofly_burst_len,
  
`ifdef ddr3_ipcore_EXT_AUTO_REF
  ext_auto_ref,                      
  ext_auto_ref_ack,                   
`endif 
  

  trefi,                           
  ar_burst_cnt, 
  

  datain,
  dmsel,
  DataRdy2Data,
  

  pio_read,
  cal_bc4,
  ddr_cs_n,
  ddr_ras_n,
  ddr_cas_n,
  ddr_we_n,
  ddr_ba,
  ddr_addr,
  ddr_cke,
  datain_valid, 


  cmd_rdy,                             
  init_done,   
  

  ddr_dq_out,
  ddr_wr_lat_odd,
  dqs_out,
  dqs_out_en,
  dqs_out_en_erly,
  dq_out_en,
  ddr_dqm,
  
  mem_odt_out,
  cntl_odt_out ,
  rd_odd,   
`ifdef ddr3_ipcore_DIR_SREF_EXT
  sref_ent_cmd,
  sref_ext_cmd,
`endif
  mirror_on


  



  

)
 ;
parameter cmd_width  = 4;
parameter addr_width = `ddr3_ipcore_ADDR_WIDTH ;
parameter burst_cnt_width = 5;
parameter ofly_burst_len_width = 1;
parameter queue_info_width	=	ofly_burst_len_width + cmd_width + burst_cnt_width + addr_width;
input                           rst_n;
input                           clk;
input [`ddr3_ipcore_TRCD_WIDTH-1:0]         param_trcd;
input [`ddr3_ipcore_TRP_WIDTH-1:0]          param_trp;
input [`ddr3_ipcore_TWR_WIDTH-1:0]          param_twr;
input [`ddr3_ipcore_TRAS_WIDTH-1:0]         param_tras;
input [`ddr3_ipcore_TRC_WIDTH-1:0]          param_trc;
input [`ddr3_ipcore_TRRD_WIDTH-1:0]         param_trrd;
input [`ddr3_ipcore_TRTP_WIDTH-1:0]         param_trtp;
input [`ddr3_ipcore_TWTR_WIDTH-1:0]         param_twtr;
input [`ddr3_ipcore_TCKESR_WIDTH-1:0]       param_tckesr ;
input [`ddr3_ipcore_TZQOPER_WIDTH-1:0]      param_tzqoper ;
input [`ddr3_ipcore_TZQS_WIDTH-1:0]         param_tzqs;
input [`ddr3_ipcore_TMRD_WIDTH-1:0]         param_tmrd;
input [`ddr3_ipcore_TPD_WIDTH-1:0]          param_tpd;
input [`ddr3_ipcore_TXPDLL_WIDTH-1:0]       param_txpdll;
input [`ddr3_ipcore_TCKE_WIDTH-1:0]         param_tcke;
input [`ddr3_ipcore_TXPR_WIDTH-1:0]         param_txpr;
input [`ddr3_ipcore_TMOD_WIDTH-1:0]         param_tmod;
input [`ddr3_ipcore_TZQINIT_WIDTH-1:0]      param_tzqinit;
input [15:0]                    addr_init_0;
input [15:0]                    addr_init_1;
input [15:0]                    addr_init_2;
input [15:0]                    addr_init_3;
input [7:0]                     wl_phase_dly_cnt;
input                           init_start;
input                           phy_init_act;
input                           wl_act;
input                           wl_done;
input [`ddr3_ipcore_DSIZE -1:0]             datain;
input [`ddr3_ipcore_USER_DM -1:0]           dmsel;
input [1:0]        DataRdy2Data;
input [3:0]                     cmd;
input [`ddr3_ipcore_ADDR_WIDTH-1:0]         addr;
input [4:0]                     cmd_burst_cnt;
input                           cmd_valid;
input                           ofly_burst_len;
input [15:0]                    trefi;
input [2:0]                     ar_burst_cnt;
output                          pio_read;
output                          cal_bc4;
output [`ddr3_ipcore_CS_WIDTH -1:0]         ddr_cs_n;
output                          ddr_ras_n;
output                          ddr_cas_n;
output                          ddr_we_n;
output [`ddr3_ipcore_BANK_WIDTH-1:0]        ddr_ba;

`ifdef ddr3_ipcore_ROW_WIDTH_12
output [`ddr3_ipcore_ROW_WIDTH:0]           ddr_addr ;

`else
output [`ddr3_ipcore_ROW_WIDTH-1:0]         ddr_addr ;

`endif
output                          datain_valid;
output [`ddr3_ipcore_DSIZE -1:0]            ddr_dq_out;
output                          ddr_wr_lat_odd;
output [`ddr3_ipcore_DQS_WIDTH-1:0]         dqs_out;
output                          dqs_out_en;
output                          dqs_out_en_erly;
output                          dq_out_en;
output [`ddr3_ipcore_USER_DM -1:0]          ddr_dqm;
output [`ddr3_ipcore_CKE_WIDTH -1:0]        ddr_cke;

`ifdef ddr3_ipcore_EXT_AUTO_REF
input                           ext_auto_ref;
output                          ext_auto_ref_ack;

`endif
output                          cmd_rdy;
output                          init_done;
output [`ddr3_ipcore_CS_WIDTH-1 : 0]        mem_odt_out;
output                          cntl_odt_out;
output                          rd_odd;
output                          mirror_on;

`ifdef ddr3_ipcore_DIR_SREF_EXT
output                          sref_ent_cmd;
output                          sref_ext_cmd;

`endif
wire [`ddr3_ipcore_CKE_WIDTH -1:0]         ddr_cke;
wire                           datain_valid;
wire                           uxb4970;
reg                            lfcce9;
wire [4:0]                     do3f33c;
wire [`ddr3_ipcore_COL_WIDTH -1:0]         mrccf1f;
wire [`ddr3_ipcore_BANK_WIDTH -1 :0]       ay678fd;
wire [`ddr3_ipcore_ROW_WIDTH -1:0]         wl3c7e9;
wire [4:0]                     gq3116a;
wire [`ddr3_ipcore_COL_WIDTH -1:0]         pf45a81;
wire [`ddr3_ipcore_BANK_WIDTH -1 :0]       xl2d40f;
wire [`ddr3_ipcore_ROW_WIDTH -1:0]         cz6a07f;
wire [`ddr3_ipcore_AL_WIDTH-1:0]           epb1e42;
wire [`ddr3_ipcore_CL_WIDTH-1:0]           kf8f215;
wire                           lq790ad;
wire                           vi42b56;
wire [`ddr3_ipcore_CWL_WIDTH-1:0]          pfc856a;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]          ux8e62;
wire [15:0]                    wy15761;
wire [`ddr3_ipcore_TRCD_WIDTH-1:0]         param_trcd;
wire [`ddr3_ipcore_TRP_WIDTH-1:0]          param_trp;
wire [`ddr3_ipcore_TWR_WIDTH-1:0]          param_twr;
wire [`ddr3_ipcore_TRAS_WIDTH-1:0]         param_tras;
wire [`ddr3_ipcore_TRC_WIDTH-1:0]          param_trc;
wire [`ddr3_ipcore_TRTP_WIDTH-1:0]         param_trtp;
wire [`ddr3_ipcore_TWTR_WIDTH-1:0]         param_twtr;
wire [`ddr3_ipcore_TCKESR_WIDTH-1:0]       param_tckesr ;
wire [`ddr3_ipcore_TZQOPER_WIDTH-1:0]      param_tzqoper ;
wire [`ddr3_ipcore_TZQS_WIDTH-1:0]         param_tzqs;
wire [`ddr3_ipcore_TMRD_WIDTH-1:0]         param_tmrd;
wire [`ddr3_ipcore_TPD_WIDTH-1:0]          param_tpd;
wire [`ddr3_ipcore_TXPDLL_WIDTH-1:0]       param_txpdll;
wire [`ddr3_ipcore_TCKE_WIDTH-1:0]         param_tcke;
wire [`ddr3_ipcore_TXPR_WIDTH-1:0]         param_txpr;
wire [`ddr3_ipcore_TMOD_WIDTH-1:0]         param_tmod;
wire [`ddr3_ipcore_TZQINIT_WIDTH-1:0]      param_tzqinit;
wire [15:0]                    addr_init_0;
wire [15:0]                    addr_init_1;
wire [15:0]                    addr_init_2;
wire [15:0]                    addr_init_3;
wire [`ddr3_ipcore_DSIZE -1:0]             datain;
wire [`ddr3_ipcore_USER_DM -1:0]           dmsel;
wire [1:0]               DataRdy2Data;
wire [`ddr3_ipcore_CS_WIDTH -1:0]          ddr_cs_n;
wire [`ddr3_ipcore_CS_WIDTH -1:0]          wlb19ef;
wire [`ddr3_ipcore_CS_WIDTH -1:0]          hbf99e3;
wire [`ddr3_ipcore_CS_WIDTH -1:0]          uk88b50;
wire [`ddr3_ipcore_BANK_WIDTH-1:0]         ddr_ba;

`ifdef ddr3_ipcore_ROW_WIDTH_12
wire [`ddr3_ipcore_ROW_WIDTH:0]          ddr_addr ;

`else
wire [`ddr3_ipcore_ROW_WIDTH-1:0]          ddr_addr ;

`endif
wire [`ddr3_ipcore_DSIZE -1:0]             ddr_dq_out;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]          dqs_out;
wire [`ddr3_ipcore_USER_DM -1:0]           ddr_dqm;
wire                           ddr_wr_lat_odd;
wire                           cal_bc4;
wire [3:0]                     cmd;
wire [`ddr3_ipcore_ADDR_WIDTH-1:0]         addr;
wire [4:0]                     cmd_burst_cnt;
wire [15:0]                    trefi;
wire [2:0]                     ar_burst_cnt;
wire [2:0]                     qgc43c2;
wire [3:0]                     oh90743;
wire                           gd398ab;
wire                           fc302ea;
wire [`ddr3_ipcore_CS_WIDTH-1:0]           ph81752;
wire [`ddr3_ipcore_CS_WIDTH-1:0]           riba96;
wire                           zm11cc;
wire   [`ddr3_ipcore_CS_WIDTH-1 : 0]       mem_odt_out;
wire                           cntl_odt_out;
wire                           ykefacf;
wire                           ic7d679;
wire                           lsb20e8;
wire                           mt85233;
wire                           uv6affa;
reg                            init_done;
wire                           pio_read;
wire                           lde6148;
wire                           ba30a46;
wire                           ie8d120;
wire [2:0]                     zxe3f4c;
wire [2:0]                     nr503fc;
wire                           ie106b3;
wire                           zm83599;
wire                           mirror_on;

`ifdef ddr3_ipcore_DIR_SREF_EXT
wire                           sref_ent_cmd;
wire                           sref_ext_cmd;

`endif
wire                           zxf633d;
wire                           xy8cf7d;
reg  [4:0]                     lq5822d;
wire                           dq_out_en;
wire                           cb8b58;
wire   qg59859;
wire   kdd36bd;
wire [3:0]   nt9b5ec;
wire [`ddr3_ipcore_ADDR_WIDTH-1:0]   nedaf66;
wire [4:0]   thd7b33;
wire   jebd99f;
wire   dzeccfb;
wire [queue_info_width-1 : 0]  tu667de;
wire   oh33ef2;
wire   ir9f794;
wire [5:0]   ph94884;
wire [5:0]   ana4426;
wire [queue_info_width-1 : 0]  xl22135;
wire [queue_info_width-1 : 0]  sw109ae;
wire   zz84d70;
wire   yz26b87;
wire  [5:0]	db32e7b;
wire  [`ddr3_ipcore_ROW_WIDTH-1:0]	wy973de;
wire  [(`ddr3_ipcore_CS_WIDTH* 8)-1:0]	tw865cf;



`ifdef ddr3_ipcore_DIR_SREF_EXT

`endif


`ifdef ddr3_ipcore_EXT_AUTO_REF

`endif




 






`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_EXT_AUTO_REF


`endif


`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif









`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_DIR_SREF_EXT


`endif

assign dq_out_en = ~cb8b58;
assign datain_valid = uxb4970;

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      init_done            <= 1'b0;   end   else begin      init_done            <= uv6affa;   end
end

xlbf0e4_ddr3_ipcore nga29e2(
    .clk(clk ) ,
    .rst_n(rst_n ),    .thf9cb1(thf9cb1 ),    .cmce58f(cmce58f ),    .yk72c79(yk72c79),    .je963c8(je963c8),    .tjbfe72(tjbfe72 ),    .ykff396(ykff396 ),    .nrf6ff9(nrf6ff9 ),    .zmb7fce(zmb7fce ),    .xybd531(xybd531),    .eaea98a(eaea98a),    .uk21908(uk21908 ),    .kdfd339(kdfd339 ),
    .lq5d84d(lq5d84d ),    .zxec26a(zxec26a ),    .eca628c(oh90743),    .gb54c51(ukff3f),    .dm57fd5(dm57fd5),    .tj9abf(tj9abf),
    .nr64207(nr64207 ),    .yk4ce66(yk4ce66 ),    .uk2103f(uk2103f),    .su67331(su67331),    .hb40fcc(hb40fcc ),    .enccc45(enccc45 ),    .an81f9(an81f9 ),    .gd39988(gd39988 ),    .xlc840(xlc840),    .hbe99cc(hbe99cc),    .me494c0(me494c0 ),    .zx4a600(zx4a600)
);

cz5ee8f_ddr3_ipcore ir9abc3(	.ipf747d           (ph94884),	.rvba3ed       (ana4426),    .med1f6f         (xl22135),    .cb8fb78       (zz84d70),    .ui7dbc4     (sw109ae),    .mrede21   (yz26b87),       .clk                 (clk ),    .rst_n              (rst_n ),    .phy_init_act       (phy_init_act ),
      .uk21908          (uk21908 ),
   .xlc840         (xlc840 ),
   .nr64207            (nr64207 ),   .uk2103f       (uk2103f),
   .an81f9             (an81f9 ),
   .hb40fcc              (hb40fcc ),
   .kf7e67          (kf7e67 ),
   .do3f33c         (do3f33c ),
   .hbf99e3              (hbf99e3 ),
   .mrccf1f            (mrccf1f ),   .ay678fd             (ay678fd ),   .wl3c7e9            (wl3c7e9 ),
   .zxe3f4c             (zxe3f4c),   .mg1fa67         (mg1fa67),
      .kdfd339          (kdfd339),
   .hbe99cc         (hbe99cc ),
   .yk4ce66            (yk4ce66 ),   .su67331       (su67331),
   .gd39988             (gd39988 ),
   .enccc45              (enccc45 ),
   .ps6622d          (ps6622d ),
   .gq3116a         (gq3116a ),
   .uk88b50              (uk88b50 ),
   .pf45a81            (pf45a81 ),   .xl2d40f             (xl2d40f ),   .cz6a07f            (cz6a07f ),   .nr503fc             (nr503fc),   .ph81fe7         (ph81fe7),
   .ukff3f            (ukff3f ),   .kd7f9f8      (kd7f9f8 ),   .hbfcfc4      (hbfcfc4 ),
   .mre7e27        (mre7e27 ),   .ng3f13d        (ng3f13d ),   .ipf89eb               (ipf89eb ),   .suc4f5d           (suc4f5d ),   .vx27ae9          (vx27ae9 ),   .jr3d74f        (jr3d74f ),   .xweba7e      (xweba7e ),   .by5d3f3      (by5d3f3 ),
   .ble9f9b        (ble9f9b ),   .fn4fcde        (fn4fcde ),   .vv7e6f6               (vv7e6f6 ),   .vvf37b7           (vvf37b7 ),   .rv9bdbf          (rv9bdbf ),   .wwdedff        (wwdedff ),   .nrf6ff9         (nrf6ff9 ),   .zmb7fce         (zmb7fce ),   .tjbfe72          (tjbfe72 ),   .ykff396          (ykff396 ),   .thf9cb1        (thf9cb1 ),   .cmce58f        (cmce58f ),   .yk72c79   (yk72c79),   .je963c8   (je963c8),   .epb1e42                  (epb1e42 ),   .kf8f215                  (kf8f215 ),   .lq790ad              (lq790ad),   .pfc856a                 (pfc856a ),   .vi42b56             (vi42b56 ),   .mg15ab2               (ks3bb7c ),   .baad590               (wje776f ),   .ip6ac83               (vvd7216 ),   .kq5641d               (phbae42 ),   .lsb20e8                (lsb20e8 ),   .addr_init_0         (addr_init_0 ),   .addr_init_1         (addr_init_1 ),   .addr_init_2         (addr_init_2 ),   .addr_init_3         (addr_init_3 ),   .qgc43c2            (qgc43c2 ),   .oh90743      (oh90743  ),   .param_trcd          (param_trcd ),   .param_trp           (param_trp ),   .param_twr           (param_twr ),   .param_tras          (param_tras ),   .param_trc           (param_trc ),   .param_trrd          (param_trrd ),   .param_trtp          (param_trtp ),   .param_twtr          (param_twtr ),   .param_tckesr        (param_tckesr ) ,   .param_tzqoper       (param_tzqoper ) ,   .param_tzqs          (param_tzqs ),   .param_tmrd          (param_tmrd ),   .param_tpd           (param_tpd ),   .param_txpdll        (param_txpdll ),   .param_tcke          (param_tcke ),   .param_txpr          (param_txpr ),   .param_tmod          (param_tmod ),   .param_tzqinit       (param_tzqinit ) ,

   .datain              (datain ),   .dmsel               (dmsel ),   .DataRdy2Data        (DataRdy2Data ),
   .zm11cc         (zm11cc ),   .ux8e62          (ux8e62 ),   .wl_act              (wl_act ),   .gd398ab          (gd398ab ),   .encc55d        (fc302ea ),   .kq62aec               (ph81752 ),   .wy15761         (wy15761 ),   .wl_done             (wl_done ),

   .lq5d84d           (lq5d84d ),
   .zxec26a           (zxec26a ),   .th61357           (th61357 ),
   .tj9abf       (tj9abf ),   .fa4d5ff           (fa4d5ff),   .uv6affa       (uv6affa ),   .dm57fd5       (dm57fd5 ),
   .ntbfeab            (ntbfeab ),
   .cmff55e           (cmff55e ),   .wwfaaf1         ( ),   .xwd5788             (xwd5788 ),   .qvabc43             (qvabc43 ),   .ddr_cs_n            (ddr_cs_n ),   .ddr_ras_n           (ddr_ras_n ),   .ddr_cas_n           (ddr_cas_n ),   .ddr_we_n            (ddr_we_n ),   .ddr_ba              (ddr_ba ),   .ddr_addr            (ddr_addr ),   .ddr_cke             (ddr_cke ),   .datain_valid        (uxb4970 ),




   .ddr_dq_out          (ddr_dq_out ),   .dqs_out             (dqs_out ),   .dqs_out_en          (dqs_out_en),   .dqs_out_en_erly     (dqs_out_en_erly),   .dq_out_en           (cb8b58),   .ddr_dqm             (ddr_dqm ),

   .pio_read            (pio_read ),
   .en5ec67             (en5ec67 ),   .wlb19ef            (wlb19ef),   .zxf633d              (zxf633d ),   .xy8cf7d              (xy8cf7d ),   .cal_bc4             (cal_bc4 ),   .zz3df59             (zz3df59 ),   .ykefacf         (ykefacf),   .ic7d679         (ic7d679),

`ifdef ddr3_ipcore_DIR_SREF_EXT
   .sref_ent_cmd        (sref_ent_cmd),   .sref_ext_cmd        (sref_ext_cmd),

`endif
   .pseb3c8              ( ) ,   .kq59e42              ( ) ,   .pscf210               ( ) ,   .zk79083               ( ) ,   .xjc841a              (ddr_wr_lat_odd ),   .rd_odd              (rd_odd),   .ie106b3             (ie106b3),   .zm83599             (zm83599),   .mirror_on           (mirror_on),   .do99661	(do99661),   .oscb30b	(oscb30b),   .qg59859	(qg59859)
);


do11b70_ddr3_ipcore rte3c4b(        .clk                (clk ),
    .rst_n              (rst_n ),
    .ui7dbc4     (tu667de),    .mrede21   (oh33ef2),        .cmd                (nt9b5ec ),    .addr               (nedaf66 ),    .cmd_burst_cnt      (thd7b33 ),    .cmd_valid          (jebd99f ),    .init_start         (kdd36bd ),    .ofly_burst_len     (dzeccfb ),
        .uv6affa      (uv6affa ),    .tj9abf      (zx4a600 ),    .dm57fd5      (me494c0 ),    .lq5d84d          (lq5d84d ),    .zxec26a          (zxec26a ),    .ykefacf        (ykefacf ),    .ic7d679        (ic7d679 ),    .ntbfeab           (ntbfeab ),    .xwd5788            (xwd5788 ),    .cmff55e          (cmff55e ),    .th61357          (th61357 ),    .psc000a         (qvabc43 ),    .fa4d5ff           (fa4d5ff),    
`ifdef ddr3_ipcore_EXT_AUTO_REF
    .ext_auto_ref       (ext_auto_ref ),    .ext_auto_ref_ack   (ext_auto_ref_ack ),    
`endif
        .trefi             (trefi ),    .ar_burst_cnt      (ar_burst_cnt ),    .lq52011         (addr_init_0 ),    .ux9008a         (addr_init_1 ),    .sj80455         (addr_init_2 ),
        .cmd_rdy            (ir9f794 ),
        .do11565         ( ),    .mt8ab2b        (kf8f215 ),    .zx5595c    (lq790ad ),    .aaacae6 (vi42b56 ),    .wj65730         (epb1e42 ),    .ou2b985     (pfc856a ),    .go5cc29       (lsb20e8 ),    .lde6148            (lde6148 ),    .ba30a46        (ba30a46 ),    .mt85233           (mt85233 ),    .qgc43c2           (qgc43c2 ),        .uk21908         (uk21908 ),    .xlc840        (xybd531 ),    .nr64207           (thf9cb1 ),    .an81f9            (nrf6ff9 ),    .hb40fcc             (tjbfe72 ),    .kd7f9f8     (kd7f9f8 ),    .hbfcfc4     (hbfcfc4 ),    .mre7e27       (mre7e27 ),    .ng3f13d       (ng3f13d ),    .pu11020      (suc4f5d ),    .co88103     (vx27ae9 ),    .wl3c7e9           (wl3c7e9 ),    .mrccf1f           (mrccf1f ),    .ay678fd            (ay678fd ),    .hbf99e3             (hbf99e3 ),    .ipf89eb              (ipf89eb ),    .jr3d74f       (jr3d74f ),    .mg1fa67        (mg1fa67 ),    .wjd3f3b          (wjd3f3b ),    .kf7e67         (kf7e67 ),    .do3f33c        (do3f33c ),    .wje776f              (wje776f ),    .ks3bb7c              (ks3bb7c ),    .zxe3f4c            (zxe3f4c),	.uk2103f      (yk72c79),
        .kdfd339         (kdfd339 ),    .hbe99cc        (eaea98a ),    .yk4ce66           (cmce58f ),    .gd39988            (zmb7fce ),    .enccc45             (ykff396 ),    .xweba7e     (xweba7e ),    .by5d3f3     (by5d3f3 ),    .ble9f9b       (ble9f9b ),    .fn4fcde       (fn4fcde ),    .mg31eb3      (vvf37b7 ),    .wl8f599     (rv9bdbf ),    .cz6a07f           (cz6a07f ),    .pf45a81           (pf45a81 ),    .xl2d40f            (xl2d40f ),    .uk88b50             (uk88b50 ),    .vv7e6f6              (vv7e6f6 ),    .wwdedff       (wwdedff ),    .ph81fe7        (ph81fe7 ),    .co215d7          (co215d7 ),    .ps6622d         (ps6622d ),    .gq3116a        (gq3116a ),    .phbae42              (phbae42 ),    .vvd7216              (vvd7216 ),    .nr503fc            (nr503fc),    .su67331      (je963c8),
    .zk42d86           ( ),    .vx16c32           ( ),        .oh90743     (oh90743  ),    .ukff3f           (ukff3f),	.tw865cf	(tw865cf),		.db32e7b(db32e7b),		.wy973de(wy973de),		.do99661	(do99661),    .qg59859	(qg59859)
);
sj9ad86_ddr3_ipcore nr7194a(
 	.clk	(clk ),
	.rst_n	(rst_n),
 	.rvb0d69	(init_start),	.je86b4f	(cmd),	.vk35a7a	(addr),	.puad3d3	(cmd_burst_cnt),	.ps69e9b	(cmd_valid),	.nr4f4da(ofly_burst_len),

 	.kd7a6d7	(cmd_rdy),
		.kdd36bd	(kdd36bd),	.nt9b5ec	(nt9b5ec),	.nedaf66	(nedaf66),	.thd7b33	(thd7b33),	.jebd99f	(jebd99f),	.dzeccfb	(dzeccfb),	.tu667de(tu667de),	.oh33ef2(oh33ef2),
		.ir9f794        (ir9f794),   
		.tw865cf	(tw865cf),		.db32e7b(db32e7b),		.wy973de(wy973de),	
		.ph94884(ph94884),	.ana4426(ana4426),	.xl22135(xl22135),	.sw109ae(sw109ae),	.zz84d70(zz84d70),	.yz26b87(yz26b87),

		.fc35c3d	(do99661)	,	.sjae1eb	(oscb30b)


);

assign  gd398ab     = 1'b0;
assign  fc302ea    = 1'b0;
assign  zm11cc    = 1'b0;
assign  wy15761    = 16'h0;
assign  ph81752      = {`ddr3_ipcore_CS_WIDTH{1'b0}};
assign  riba96     = {`ddr3_ipcore_CS_WIDTH{1'b0}};
assign  ux8e62     = {`ddr3_ipcore_DQS_WIDTH{1'b0}};
sj26cb7_ddr3_ipcore cb8d46(        .sclk               (clk),
    .rst_n              (rst_n),    .init_done          (uv6affa),    .wl_act             (wl_act),    .zmbda9a         (riba96),    .lde6148            (lde6148 ),    .ba30a46        (ba30a46 ),    .zxf633d             (zxf633d ),    .xy8cf7d             (xy8cf7d ),    .wjd3b04            (ie106b3 ),    .zz3df59            (zm83599 ),    .ldec128             (kf8f215 ),    .kd60947             (epb1e42 ),    .tw4a3c             (wlb19ef ),    .ba251e3       (en5ec67 ),    .fp28f1b           (lsb20e8 ),        .mem_odt_out        (mem_odt_out ),    .cntl_odt_out       (cntl_odt_out )    );

endmodule
`timescale 1 ns / 100 ps
module  tw960ab_ddr3_ipcore (
                      rst_n,
                      sclk,
                      qi156b0,
                      mirror_on,
                      pf5ac0c,
                      ddr_cs_n,
                      ddr_ba,
                      ddr_addr,
                      ddr_cke,
                      ww679bf,
                      ddr_we_n,
                      ddr_cas_n,
                      ddr_ras_n,
                      jrbf37e,

                      kq433c8,
                      hbcdfbf,
                      of6fdff,
                      jp7effd,
                      yxf7fee,
                      lfbff74,
                      meffba6,
                      wjfdd30,
                      byee985,
                      jp74c2b,
                      wya615f,
                      ls30af8,
                      oh857c3,
                      ie2be1c,
                      nr5f0e1,
                      off870e,
                      mrc3874 
                     );

`ifdef ddr3_ipcore_ROW_WIDTH_12

`define ddr3_ipcore_ROW_WDTH 13

`else

`define ddr3_ipcore_ROW_WDTH `ddr3_ipcore_ROW_WIDTH

`endif
input                           rst_n;
input                           sclk;
input                           qi156b0;
input                           mirror_on;
input                           pf5ac0c;
input  [`ddr3_ipcore_CS_WIDTH-1:0]          ddr_cs_n;
input  [`ddr3_ipcore_BANK_WIDTH   -1:0]     ddr_ba;
input  [`ddr3_ipcore_ROW_WDTH-1:0]          ddr_addr;
input  [`ddr3_ipcore_CKE_WIDTH -1:0]        ddr_cke;
input  [`ddr3_ipcore_CS_WIDTH -1 :0]        ww679bf;
input                           ddr_we_n;
input                           ddr_cas_n;
input                           ddr_ras_n;
input                           jrbf37e;
output                          kq433c8;
output                          hbcdfbf;
output                          of6fdff;
output                          jp7effd;
output                          yxf7fee;
output                          lfbff74;
output                          meffba6;
output  [`ddr3_ipcore_BANK_WIDTH -1 :0]     wjfdd30;
output  [`ddr3_ipcore_BANK_WIDTH -1 :0]     byee985;
output  [`ddr3_ipcore_ROW_WDTH -1:0]        jp74c2b;
output  [`ddr3_ipcore_ROW_WDTH -1:0]        wya615f;
output  [`ddr3_ipcore_CS_WIDTH-1:0]         ls30af8;
output  [`ddr3_ipcore_CS_WIDTH-1:0]         oh857c3;
output  [`ddr3_ipcore_CKE_WIDTH -1:0]       ie2be1c;
output  [`ddr3_ipcore_CKE_WIDTH -1:0]       nr5f0e1;
output  [`ddr3_ipcore_CS_WIDTH -1 :0]       off870e;
output  [`ddr3_ipcore_CS_WIDTH -1 :0]       mrc3874;
reg    [`ddr3_ipcore_CS_WIDTH   -1:0]       fp198d1   ;
reg    [`ddr3_ipcore_BANK_WIDTH   -1:0]     czcc68e;
reg    [`ddr3_ipcore_ROW_WDTH-1:0]          vi63474;
reg    [`ddr3_ipcore_CKE_WIDTH -1:0]        co1a3a2;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        cmd1d10;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        bn8e880;
reg                             pf74406;
reg                             pua2036;
reg                             gq101b2;
reg                             kf80d91;
reg                             jr6c8d;
reg                             wl3646e;
reg                             xyb2375;
reg                             hd91bab;
reg                             mg8dd5e;
reg                             dz6eaf1;
reg                             yx7578f;
reg                             kfabc7c;
reg                             cz5e3e5;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        dmf1f2c;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        cb8f963;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        vi7cb1c;

`ifdef ddr3_ipcore_PHY_REG_P2
reg    [`ddr3_ipcore_ROW_WDTH -1:0]         jp74c2b;
reg    [`ddr3_ipcore_ROW_WDTH-1:0]          wya615f;
reg    [`ddr3_ipcore_CKE_WIDTH -1:0]        vi638c5;
reg    [`ddr3_ipcore_CKE_WIDTH -1:0]        ie2be1c;
reg    [`ddr3_ipcore_CKE_WIDTH -1:0]        nr5f0e1;
reg    [`ddr3_ipcore_CS_WIDTH-1:0]          ls30af8;
reg    [`ddr3_ipcore_CS_WIDTH-1:0]          oh857c3;
reg                             lfbff74;
reg                             meffba6;
reg                             jp7effd;
reg                             yxf7fee;
reg                             hbcdfbf;
reg                             of6fdff;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        off870e;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        mrc3874;
reg    [`ddr3_ipcore_BANK_WIDTH -1:0]       wjfdd30;
reg    [`ddr3_ipcore_BANK_WIDTH -1:0]       byee985;

`endif
wire   [`ddr3_ipcore_BANK_WIDTH -1:0]       gq92b70;
wire   [`ddr3_ipcore_ROW_WDTH -1:0]         kf95b81;

`ifdef ddr3_ipcore_ADDR_MIRROR
wire   [`ddr3_ipcore_BANK_WIDTH   -1:0]     lsadc0c;
wire   [`ddr3_ipcore_ROW_WDTH-1:0]          hb6e062;

`endif
wire                            kq433c8;
wire                            jr19e41;
wire                            phc5a7;

`ifdef ddr3_ipcore_CS_WIDTH_4
wire                            ui62d3e;
wire                            bn169f1;
wire                            wlb4f8f;
wire                            xya7c7d;

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2
wire                            ui62d3e;
wire                            bn169f1;

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1
wire                            ui62d3e;

`endif

`ifdef ddr3_ipcore_DDR3_2T
reg    [`ddr3_ipcore_CS_WIDTH-1:0]          ww7d65c;
reg    [`ddr3_ipcore_CS_WIDTH-1:0]          xweb2e0;

`else
wire   [`ddr3_ipcore_CS_WIDTH-1:0]          ww7d65c;
wire   [`ddr3_ipcore_CS_WIDTH-1:0]          xweb2e0;

`endif
wire   [`ddr3_ipcore_CS_WIDTH -1 :0]        go5c088;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        mee0441;
wire   [`ddr3_ipcore_ROW_WDTH -1:0]         oh2209;
wire   [`ddr3_ipcore_CKE_WIDTH -1:0]        ng1104d;
reg    [`ddr3_ipcore_CS_WIDTH -1 :0]        mg8826b  ;
reg                             yx41358;
reg                             nt9ac4;

`ifdef ddr3_ipcore_ADDR_MIRROR

`else

`endif

`ifdef ddr3_ipcore_DDR3_2T

`else

`endif





`ifdef ddr3_ipcore_ROW_WIDTH_12


`define ddr3_ipcore_ROW_WDTH 13


`else


`define ddr3_ipcore_ROW_WDTH `ddr3_ipcore_ROW_WIDTH


`endif


`ifdef ddr3_ipcore_PHY_REG_P2


`endif


`ifdef ddr3_ipcore_ADDR_MIRROR


`endif


`ifdef ddr3_ipcore_CS_WIDTH_4


`endif


`ifdef ddr3_ipcore_CS_WIDTH_2


`endif


`ifdef ddr3_ipcore_CS_WIDTH_1


`endif


`ifdef ddr3_ipcore_DDR3_2T


`else


`endif


always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        fp198d1   <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        pua2036   <= 1'b0;        gq101b2  <= 1'b0;        kf80d91  <= 1'b0;        co1a3a2    <= {`ddr3_ipcore_CKE_WIDTH{1'b0}};        yx41358    <= 1'b0;        end       else begin        fp198d1   <= ddr_cs_n;        pua2036   <= ddr_we_n;        gq101b2  <= ddr_cas_n;        kf80d91  <= ddr_ras_n;        co1a3a2    <= ddr_cke;        yx41358    <= pf5ac0c;       end
end

`ifdef ddr3_ipcore_ADDR_MIRROR
   assign hb6e062 = {ddr_addr[`ddr3_ipcore_ROW_WDTH-1:9], ddr_addr[7], ddr_addr[8],ddr_addr[5],                             ddr_addr[6],ddr_addr[3], ddr_addr[4],ddr_addr[2:0]};   assign lsadc0c   = {ddr_ba[2], ddr_ba[0], ddr_ba[1]};   assign gq92b70        = (mirror_on) ? lsadc0c   : ddr_ba;   assign kf95b81      = (mirror_on) ? hb6e062 : ddr_addr;

`else
   assign gq92b70        = ddr_ba;   assign kf95b81      = ddr_addr;

`endif

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        jr6c8d   <= 1'b0;        wl3646e   <= 1'b0;        end       else begin        jr6c8d   <= kq433c8;        wl3646e   <= jr19e41;       end
end
assign  kq433c8    = pua2036 & ~ddr_we_n  & ~ddr_cas_n & ddr_ras_n ;
assign  jr19e41    = pua2036 & ddr_we_n  & ~ddr_cas_n & ddr_ras_n ;
assign  phc5a7 = ddr_cas_n & ddr_ras_n & ddr_we_n;
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        czcc68e     <= {`ddr3_ipcore_BANK_WIDTH{1'b0}};        vi63474   <= {`ddr3_ipcore_ROW_WDTH{1'b0}};        cmd1d10     <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        bn8e880    <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        mee0441 <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        pf74406    <= 1'b0;        nt9ac4     <= 1'b0;        end       else begin        czcc68e     <= gq92b70;        vi63474   <= kf95b81;        cmd1d10     <= ww679bf;        bn8e880    <= cmd1d10;        mee0441 <= go5c088;        pf74406    <= phc5a7;        nt9ac4     <= yx41358;       end
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n)        xyb2375  <= 1'b0;     else if (pf5ac0c || (xyb2375 && ww679bf))        xyb2375  <= 1'b1;     else        xyb2375  <= 1'b0;
end
assign go5c088   = (pf5ac0c || xyb2375)  ? ww679bf : ww679bf ;


`ifdef ddr3_ipcore_DDR3_2T

always @(pf5ac0c or kq433c8 or jr6c8d or ddr_cas_n or ddr_ras_n or ddr_we_n or         go5c088 or ww679bf or cmd1d10 or pua2036 or gq101b2 or kf80d91 or phc5a7 or nt9ac4 or ddr_cs_n) begin   casex ({pf5ac0c, kq433c8, jr6c8d})         3'b100,4'b110,4'b111: begin                  hd91bab   = gq101b2;              mg8dd5e   = gq101b2;              dz6eaf1   = kf80d91;              yx7578f   = ddr_ras_n;              kfabc7c    = pua2036;              cz5e3e5    = pua2036;              dmf1f2c    = ww679bf;              cb8f963    = (nt9ac4) ? cmd1d10 : 1'b0;              ww7d65c    = ddr_cs_n;              xweb2e0    = ({`ddr3_ipcore_CS_WIDTH{ddr_we_n & ~gq101b2}}) | ddr_cs_n;              end      3'b101: begin                                hd91bab   = gq101b2;              mg8dd5e   = gq101b2;              dz6eaf1   = kf80d91;              yx7578f   = kf80d91;              kfabc7c    = pua2036;              cz5e3e5    = pua2036;              dmf1f2c    = ww679bf;              cb8f963    = go5c088;              ww7d65c    = ddr_cs_n;              xweb2e0    = {`ddr3_ipcore_CS_WIDTH{1'b1}} | ddr_cs_n;              end      3'b000: begin                  hd91bab   = gq101b2;              mg8dd5e   = ddr_cas_n;              dz6eaf1   = kf80d91;              yx7578f   = ddr_ras_n;              kfabc7c    = pua2036;              cz5e3e5    = ddr_we_n;              dmf1f2c    = ww679bf;              cb8f963    = (nt9ac4) ? cmd1d10 : ww679bf ;              ww7d65c    = ({`ddr3_ipcore_CS_WIDTH{~phc5a7}} & ~ddr_cs_n) | ddr_cs_n;              xweb2e0    = ddr_cs_n;              end      3'b010 : begin                  hd91bab = gq101b2;              mg8dd5e = ddr_cas_n;              dz6eaf1 = kf80d91;              yx7578f = 1'b1;              kfabc7c  = pua2036;              cz5e3e5  = ddr_we_n;              dmf1f2c  = ww679bf;              cb8f963  = ww679bf;              ww7d65c  = ({`ddr3_ipcore_CS_WIDTH{~phc5a7}}) | ddr_cs_n;              xweb2e0  = ddr_cs_n;              end      3'b001 : begin                  hd91bab = gq101b2;              mg8dd5e = 1'b1;              dz6eaf1 = 1'b1;              yx7578f = kf80d91;              kfabc7c  = pua2036;              cz5e3e5  = 1'b1;              dmf1f2c  = cmd1d10;              cb8f963  = cmd1d10;              ww7d65c  = ddr_cs_n;              xweb2e0  = ddr_cs_n;              end      default: begin              hd91bab   = ddr_cas_n;              mg8dd5e   = ddr_cas_n;              dz6eaf1   = ddr_ras_n;              yx7578f   = ddr_ras_n;              kfabc7c    = ddr_we_n;              cz5e3e5    = ddr_we_n;              dmf1f2c    = ww679bf;              cb8f963    = ww679bf;              ww7d65c    = ddr_cs_n;              xweb2e0    = ddr_cs_n;              end    endcase
end

`else

assign  ww7d65c = ddr_cs_n;
assign  xweb2e0 = ddr_cs_n;
always @(pf5ac0c or ddr_cas_n or ddr_ras_n or ddr_we_n or         go5c088 or ww679bf or yx41358 or mee0441 or pua2036 or gq101b2) begin   casex (pf5ac0c | xyb2375)         1'b0: begin                 hd91bab     = 1'b1;              mg8dd5e     = ddr_cas_n;              dz6eaf1     = 1'b1;              yx7578f     = ddr_ras_n;              kfabc7c      = 1'b1;              cz5e3e5      = ddr_we_n;              dmf1f2c      = ww679bf;              cb8f963      = (yx41358) ? mee0441 : go5c088;              end      1'b1: begin                  hd91bab     = gq101b2;              mg8dd5e     = 1'b1;              kfabc7c      = pua2036;              cz5e3e5      = 1'b1;              dz6eaf1     = ddr_ras_n;              yx7578f     = 1'b1;              dmf1f2c      = ww679bf;              cb8f963      = mee0441;              end      default: begin              hd91bab     = ddr_cas_n;              mg8dd5e     = ddr_cas_n;              dz6eaf1     = ddr_ras_n;              yx7578f     = ddr_ras_n;              kfabc7c      = ddr_we_n;              cz5e3e5      = ddr_we_n;              dmf1f2c      = ww679bf;              cb8f963      = ww679bf;              end    endcase
end

`endif

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        mg8826b  <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        ls30af8      <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        oh857c3      <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        end       else begin        mg8826b  <= ww7d65c;        ls30af8      <= mg8826b;        oh857c3      <= (pf5ac0c) ? (fp198d1 | {`ddr3_ipcore_CS_WIDTH{xweb2e0}}) : (ddr_cs_n | {`ddr3_ipcore_CS_WIDTH{xweb2e0}});       end
end

assign oh2209  = (pf5ac0c)  ? ((qi156b0) ? kf95b81 : vi63474) : kf95b81 ;
assign ng1104d   = (pf5ac0c)  ? co1a3a2  : ddr_cke ;
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        vi7cb1c  <= {`ddr3_ipcore_CS_WIDTH{1'b0}};     end     else begin        vi7cb1c  <= dmf1f2c;     end
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        jp74c2b    <= {`ddr3_ipcore_ROW_WDTH{1'b0}};        wya615f    <= {`ddr3_ipcore_ROW_WDTH{1'b0}};        ie2be1c     <= {`ddr3_ipcore_CKE_WIDTH{1'b0}};        nr5f0e1     <= {`ddr3_ipcore_CKE_WIDTH{1'b0}};        lfbff74      <= 1'b0;        meffba6      <= 1'b0;        jp7effd     <= 1'b0;        yxf7fee     <= 1'b0;        hbcdfbf     <= 1'b0;        of6fdff     <= 1'b0;        off870e     <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        mrc3874     <= {`ddr3_ipcore_CS_WIDTH{1'b0}};        wjfdd30      <= {`ddr3_ipcore_BANK_WIDTH{1'b0}};        byee985      <= {`ddr3_ipcore_BANK_WIDTH{1'b0}};     end     else begin        vi638c5    <= ng1104d ;        ie2be1c       <= vi638c5;        nr5f0e1       <= {`ddr3_ipcore_CKE_WIDTH{ddr_cke}};        wya615f      <= oh2209;        jp74c2b      <= vi63474 ;        lfbff74        <= kfabc7c;        meffba6        <= cz5e3e5;        jp7effd       <= dz6eaf1;        yxf7fee       <= yx7578f;        hbcdfbf       <= hd91bab;        of6fdff       <= mg8dd5e;        byee985        <= gq92b70;        wjfdd30        <= czcc68e;        off870e       <= vi7cb1c;        mrc3874       <= cb8f963;     end
end

endmodule





























`timescale 1 ns / 100 ps
module uidead2_ddr3_ipcore (
   rst_n,
   ddr_rst,
   sclk,
   eclk,
   lf91136,
   wy889b7,
   en44db9,
   mt26dcd,
   oh36e6d,

   hqb736c,
   gqb9b63,
   fncdb19,
   ww6d8cf
   );
input                               rst_n;
input                               ddr_rst;
input                    sclk;
input                    eclk;
input  [`ddr3_ipcore_DQS_WIDTH -1 :0]           lf91136;
input  [`ddr3_ipcore_DQS_WIDTH -1 :0]           wy889b7;
input  [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]         en44db9;
input  [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]         mt26dcd;
input  [`ddr3_ipcore_DQS_WIDTH -1 :0]           oh36e6d;
input  [`ddr3_ipcore_DSIZE     -1 :0]           hqb736c;
output [`ddr3_ipcore_DSIZE     -1 :0]           gqb9b63;
output [`ddr3_ipcore_DATA_WIDTH-1 :0]           fncdb19;
inout  [`ddr3_ipcore_DATA_WIDTH-1 :0]           ww6d8cf;
wire   [`ddr3_ipcore_DATA_WIDTH-1 :0]           fncdb19;
wire   [`ddr3_ipcore_DSIZE     -1 :0]           gqb9b63;
wire   [`ddr3_ipcore_DQS_WIDTH -1 :0]           rg4283c;
wire   [`ddr3_ipcore_DQS_WIDTH -1 :0]           hq141e2;
wire   [`ddr3_ipcore_DQS_WIDTH -1 :0]           tja0f13;
wire   [3*`ddr3_ipcore_DQS_WIDTH -1 :0]         oh789e;
wire   [3*`ddr3_ipcore_DQS_WIDTH -1 :0]         kf3c4f4;

`ifdef ddr3_ipcore_SIM 
wire  [(`ddr3_ipcore_DSIZE)-1:0]    gbe27a4;
reg   [(`ddr3_ipcore_DSIZE)-1:0]    ph13d24;
wire  [`ddr3_ipcore_DQS_WIDTH -1:0] fp9e927;

`ifndef ddr3_ipcore_DV_DLY_BITS

`else

`ifdef ddr3_ipcore_DATA_SIZE_8

`endif

`ifdef ddr3_ipcore_DATA_SIZE_16

`endif

`ifdef ddr3_ipcore_DATA_SIZE_24

`endif

`ifdef ddr3_ipcore_DATA_SIZE_32

`endif

`ifdef ddr3_ipcore_DATA_SIZE_40

`endif

`ifdef ddr3_ipcore_DATA_SIZE_48

`endif

`ifdef ddr3_ipcore_DATA_SIZE_56

`endif

`ifdef ddr3_ipcore_DATA_SIZE_64

`endif

`ifdef ddr3_ipcore_DATA_SIZE_72

`endif

`endif // ifndef DV_DLY_BITS

`endif // ifdef SIM

`ifdef ddr3_ipcore_RDIMM

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_DATA_SIZE_72

`endif

`ifdef ddr3_ipcore_DATA_SIZE_64

`endif

`ifdef ddr3_ipcore_DATA_SIZE_56

`endif

`ifdef ddr3_ipcore_DATA_SIZE_48

`endif

`ifdef ddr3_ipcore_DATA_SIZE_40

`endif

`ifdef ddr3_ipcore_DATA_SIZE_32

`endif

`ifdef ddr3_ipcore_DATA_SIZE_24

`endif

`ifdef ddr3_ipcore_DATA_SIZE_16

`endif

`ifdef ddr3_ipcore_DATA_SIZE_8

`endif

`else

`endif //x4

`else

`endif //RDIMM
genvar faf493f;


`ifdef ddr3_ipcore_SIM

`else

`endif



















                                                








`ifdef ddr3_ipcore_SIM 



`ifndef ddr3_ipcore_DV_DLY_BITS

assign gqb9b63 = gbe27a4;

`else

always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      ph13d24 <= {`ddr3_ipcore_DSIZE{1'b0}};   else      ph13d24 <= gbe27a4;
end assign fp9e927 = `ddr3_ipcore_DV_DLY_BITS;

`ifdef ddr3_ipcore_DATA_SIZE_8
 assign gqb9b63 = fp9e927 ? ph13d24 : gbe27a4 ;

`endif


`ifdef ddr3_ipcore_DATA_SIZE_16
 assign gqb9b63 = {             fp9e927[1] ? ph13d24[63:32] : gbe27a4[63:32],             fp9e927[0] ? ph13d24[31: 0] : gbe27a4[31: 0] };

`endif


`ifdef ddr3_ipcore_DATA_SIZE_24
 assign gqb9b63 = {             fp9e927[2] ? ph13d24[ 95:64] : gbe27a4[ 95:64],             fp9e927[1] ? ph13d24[ 63:32] : gbe27a4[ 63:32],             fp9e927[0] ? ph13d24[ 31: 0] : gbe27a4[ 31: 0] };

`endif


`ifdef ddr3_ipcore_DATA_SIZE_32
 assign gqb9b63 = {             fp9e927[3] ? ph13d24[127:96] : gbe27a4[127:96],             fp9e927[2] ? ph13d24[ 95:64] : gbe27a4[ 95:64],             fp9e927[1] ? ph13d24[ 63:32] : gbe27a4[ 63:32],             fp9e927[0] ? ph13d24[ 31: 0] : gbe27a4[ 31: 0] };

`endif


`ifdef ddr3_ipcore_DATA_SIZE_40
 assign gqb9b63 = {             fp9e927[4] ? ph13d24[159:128] : gbe27a4[159:128],             fp9e927[3] ? ph13d24[127: 96] : gbe27a4[127: 96],             fp9e927[2] ? ph13d24[ 95: 64] : gbe27a4[ 95: 64],             fp9e927[1] ? ph13d24[ 63: 32] : gbe27a4[ 63: 32],             fp9e927[0] ? ph13d24[ 31:  0] : gbe27a4[ 31:  0] };

`endif


`ifdef ddr3_ipcore_DATA_SIZE_48
 assign gqb9b63 = {             fp9e927[5] ? ph13d24[191:160] : gbe27a4[191:160],             fp9e927[4] ? ph13d24[159:128] : gbe27a4[159:128],             fp9e927[3] ? ph13d24[127: 96] : gbe27a4[127: 96],             fp9e927[2] ? ph13d24[ 95: 64] : gbe27a4[ 95: 64],             fp9e927[1] ? ph13d24[ 63: 32] : gbe27a4[ 63: 32],             fp9e927[0] ? ph13d24[ 31:  0] : gbe27a4[ 31:  0] };

`endif


`ifdef ddr3_ipcore_DATA_SIZE_56
 assign gqb9b63 = {             fp9e927[6] ? ph13d24[223:192] : gbe27a4[223:192],             fp9e927[5] ? ph13d24[191:160] : gbe27a4[191:160],             fp9e927[4] ? ph13d24[159:128] : gbe27a4[159:128],             fp9e927[3] ? ph13d24[127: 96] : gbe27a4[127: 96],             fp9e927[2] ? ph13d24[ 95: 64] : gbe27a4[ 95: 64],             fp9e927[1] ? ph13d24[ 63: 32] : gbe27a4[ 63: 32],             fp9e927[0] ? ph13d24[ 31:  0] : gbe27a4[ 31:  0] };

`endif



`ifdef ddr3_ipcore_DATA_SIZE_64
 assign gqb9b63 = {             fp9e927[7] ? ph13d24[255:224] : gbe27a4[255:224],             fp9e927[6] ? ph13d24[223:192] : gbe27a4[223:192],             fp9e927[5] ? ph13d24[191:160] : gbe27a4[191:160],             fp9e927[4] ? ph13d24[159:128] : gbe27a4[159:128],             fp9e927[3] ? ph13d24[127: 96] : gbe27a4[127: 96],             fp9e927[2] ? ph13d24[ 95: 64] : gbe27a4[ 95: 64],             fp9e927[1] ? ph13d24[ 63: 32] : gbe27a4[ 63: 32],             fp9e927[0] ? ph13d24[ 31:  0] : gbe27a4[ 31:  0] };

`endif


`ifdef ddr3_ipcore_DATA_SIZE_72
 assign gqb9b63 = {             fp9e927[8] ? ph13d24[287:256] : gbe27a4[287:256],             fp9e927[7] ? ph13d24[255:224] : gbe27a4[255:224],             fp9e927[6] ? ph13d24[223:192] : gbe27a4[223:192],             fp9e927[5] ? ph13d24[191:160] : gbe27a4[191:160],             fp9e927[4] ? ph13d24[159:128] : gbe27a4[159:128],             fp9e927[3] ? ph13d24[127: 96] : gbe27a4[127: 96],             fp9e927[2] ? ph13d24[ 95: 64] : gbe27a4[ 95: 64],             fp9e927[1] ? ph13d24[ 63: 32] : gbe27a4[ 63: 32],             fp9e927[0] ? ph13d24[ 31:  0] : gbe27a4[ 31:  0] };

`endif



`endif // ifndef DV_DLY_BITS


`endif // ifdef SIM








`ifdef ddr3_ipcore_RDIMM
  
`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_DATA_SIZE_72
      assign hq141e2    ={lf91136[17],lf91136[8],lf91136[16],lf91136[7],                             lf91136[15],lf91136[6],lf91136[14],lf91136[5],                             lf91136[13],lf91136[4],lf91136[12],lf91136[3],                             lf91136[11],lf91136[2],lf91136[10],lf91136[1],                             lf91136[ 9],lf91136[0]};      assign tja0f13    ={wy889b7[17],wy889b7[8],wy889b7[16],wy889b7[7],                             wy889b7[15],wy889b7[6],wy889b7[14],wy889b7[5],                             wy889b7[13],wy889b7[4],wy889b7[12],wy889b7[3],                             wy889b7[11],wy889b7[2],wy889b7[10],wy889b7[1],                             wy889b7[ 9],wy889b7[0]};      assign rg4283c   ={oh36e6d[17],oh36e6d[8],oh36e6d[16],oh36e6d[7],                             oh36e6d[15],oh36e6d[6],oh36e6d[14],oh36e6d[5],                             oh36e6d[13],oh36e6d[4],oh36e6d[12],oh36e6d[3],                             oh36e6d[11],oh36e6d[2],oh36e6d[10],oh36e6d[1],                             oh36e6d[ 9],oh36e6d[0]};      assign oh789e    ={mt26dcd[53:51],mt26dcd[26:24],mt26dcd[50:48],mt26dcd[23:21],                             mt26dcd[47:45],mt26dcd[20:18],mt26dcd[44:42],mt26dcd[17:15],                             mt26dcd[41:39],mt26dcd[14:12],mt26dcd[38:36],mt26dcd[11: 9],                             mt26dcd[35:33],mt26dcd[ 8: 6],mt26dcd[32:30],mt26dcd[ 5: 3],                             mt26dcd[29:27],mt26dcd[ 2: 0]};      assign kf3c4f4    ={en44db9[53:51],en44db9[26:24],en44db9[50:48],en44db9[23:21],                             en44db9[47:45],en44db9[20:18],en44db9[44:42],en44db9[17:15],                             en44db9[41:39],en44db9[14:12],en44db9[38:36],en44db9[11: 9],                             en44db9[35:33],en44db9[ 8: 6],en44db9[32:30],en44db9[ 5: 3],                             en44db9[29:27],en44db9[ 2: 0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_64
      assign hq141e2    ={lf91136[15],lf91136[7],lf91136[14],lf91136[6],                             lf91136[13],lf91136[5],lf91136[12],lf91136[4],                             lf91136[11],lf91136[3],lf91136[10],lf91136[2],                             lf91136[ 9],lf91136[1],lf91136[ 8],lf91136[0]};      assign tja0f13   ={wy889b7[15],wy889b7[7],wy889b7[14],wy889b7[6],                             wy889b7[13],wy889b7[5],wy889b7[12],wy889b7[4],                             wy889b7[11],wy889b7[3],wy889b7[10],wy889b7[2],                             wy889b7[ 9],wy889b7[1],wy889b7[ 8],wy889b7[0]};      assign rg4283c  ={oh36e6d[15],oh36e6d[7],oh36e6d[14],oh36e6d[6],                             oh36e6d[13],oh36e6d[5],oh36e6d[12],oh36e6d[4],                             oh36e6d[11],oh36e6d[3],oh36e6d[10],oh36e6d[2],                             oh36e6d[ 9],oh36e6d[1],oh36e6d[ 8],oh36e6d[0]};      assign oh789e    ={                            mt26dcd[47:45],mt26dcd[23:21],                             mt26dcd[44:42],mt26dcd[20:18],mt26dcd[41:39],mt26dcd[17:15],                             mt26dcd[38:36],mt26dcd[14:12],mt26dcd[35:33],mt26dcd[11: 9],                             mt26dcd[32:30],mt26dcd[ 8: 6],mt26dcd[29:27],mt26dcd[ 5: 3],                             mt26dcd[26:24],mt26dcd[ 2: 0]};      assign kf3c4f4    ={                            en44db9[47:45],en44db9[23:21],                             en44db9[44:42],en44db9[20:18],en44db9[41:39],en44db9[17:15],                             en44db9[38:36],en44db9[14:12],en44db9[35:33],en44db9[11: 9],                             en44db9[32:30],en44db9[ 8: 6],en44db9[29:27],en44db9[ 5: 3],                             en44db9[26:24],en44db9[ 2: 0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_56
      assign hq141e2    ={lf91136[13],lf91136[6],lf91136[12],lf91136[5],                             lf91136[11],lf91136[4],lf91136[10],lf91136[3],                             lf91136[ 9],lf91136[2],lf91136[ 8],lf91136[1],                             lf91136[ 7],lf91136[0]};      assign tja0f13   ={wy889b7[13],wy889b7[6],wy889b7[12],wy889b7[5],                             wy889b7[11],wy889b7[4],wy889b7[10],wy889b7[3],                             wy889b7[ 9],wy889b7[2],wy889b7[ 8],wy889b7[1],                             wy889b7[ 7],wy889b7[0]};
      assign rg4283c  ={oh36e6d[13],oh36e6d[6],oh36e6d[12],oh36e6d[5],                             oh36e6d[11],oh36e6d[4],oh36e6d[10],oh36e6d[3],                             oh36e6d[ 9],oh36e6d[2],oh36e6d[ 8],oh36e6d[1],                             oh36e6d[ 7],oh36e6d[0]};      assign oh789e    ={mt26dcd[41:39],mt26dcd[20:18],mt26dcd[38:36],mt26dcd[17:15],                             mt26dcd[35:33],mt26dcd[14:12],mt26dcd[32:30],mt26dcd[11: 9],                             mt26dcd[29:27],mt26dcd[ 8: 6],mt26dcd[26:24],mt26dcd[ 5: 3],                             mt26dcd[23:21],mt26dcd[ 2: 0]};      assign kf3c4f4    ={en44db9[41:39],en44db9[20:18],en44db9[38:36],en44db9[17:15],                             en44db9[35:33],en44db9[14:12],en44db9[32:30],en44db9[11: 9],                             en44db9[29:27],en44db9[ 8: 6],en44db9[26:24],en44db9[ 5: 3],                             en44db9[23:21],en44db9[ 2: 0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_48
      assign hq141e2    ={lf91136[11],lf91136[5],lf91136[10],lf91136[4],                             lf91136[ 9],lf91136[3],lf91136[ 8],lf91136[2],                             lf91136[ 7],lf91136[1],lf91136[ 6],lf91136[0]};      assign tja0f13   ={wy889b7[11],wy889b7[5],wy889b7[10],wy889b7[4],                             wy889b7[ 9],wy889b7[3],wy889b7[ 8],wy889b7[2],                             wy889b7[ 7],wy889b7[1],wy889b7[ 6],wy889b7[0]};
      assign rg4283c  ={oh36e6d[11],oh36e6d[5],oh36e6d[10],oh36e6d[4],                             oh36e6d[ 9],oh36e6d[3],oh36e6d[ 8],oh36e6d[2],                             oh36e6d[ 7],oh36e6d[1],oh36e6d[ 6],oh36e6d[0]};      assign oh789e    ={mt26dcd[35:33],mt26dcd[17:15],                             mt26dcd[32:30],mt26dcd[14:12],mt26dcd[29:27],mt26dcd[11: 9],                             mt26dcd[26:24],mt26dcd[ 8: 6],mt26dcd[23:21],mt26dcd[ 5: 3],                             mt26dcd[20:18],mt26dcd[ 2: 0]};      assign kf3c4f4    ={en44db9[35:33],en44db9[17:15],                             en44db9[32:30],en44db9[14:12],en44db9[29:27],en44db9[11: 9],                             en44db9[26:24],en44db9[ 8: 6],en44db9[23:21],en44db9[ 5: 3],                             en44db9[20:18],en44db9[ 2: 0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_40
      assign hq141e2    ={lf91136[9],lf91136[4],lf91136[8],lf91136[3],                             lf91136[7],lf91136[2],lf91136[6],lf91136[1],                             lf91136[5],lf91136[0]};      assign tja0f13   ={wy889b7[9],wy889b7[4],wy889b7[8],wy889b7[3],                             wy889b7[7],wy889b7[2],wy889b7[6],wy889b7[1],                             wy889b7[5],wy889b7[0]};      assign rg4283c  ={oh36e6d[9],oh36e6d[4],oh36e6d[8],oh36e6d[3],                             oh36e6d[7],oh36e6d[2],oh36e6d[6],oh36e6d[1],                             oh36e6d[5],oh36e6d[0]};      assign oh789e    ={mt26dcd[29:27],mt26dcd[14:12],mt26dcd[26:24],mt26dcd[11: 9],                             mt26dcd[23:21],mt26dcd[ 8: 6],mt26dcd[20:18],mt26dcd[ 5: 3],                             mt26dcd[17:15],mt26dcd[ 2: 0]};      assign kf3c4f4    ={en44db9[29:27],en44db9[14:12],en44db9[26:24],en44db9[11: 9],                             en44db9[23:21],en44db9[ 8: 6],en44db9[20:18],en44db9[ 5: 3],                             en44db9[17:15],en44db9[ 2: 0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_32
      assign hq141e2    ={lf91136[7],lf91136[3],lf91136[6],lf91136[2],                             lf91136[5],lf91136[1],lf91136[4],lf91136[0]};      assign tja0f13   ={wy889b7[7],wy889b7[3],wy889b7[6],wy889b7[2],                             wy889b7[5],wy889b7[1],wy889b7[4],wy889b7[0]};      assign rg4283c  ={oh36e6d[7],oh36e6d[3],oh36e6d[6],oh36e6d[2],                             oh36e6d[5],oh36e6d[1],oh36e6d[4],oh36e6d[0]};      assign oh789e    ={mt26dcd[23:21],mt26dcd[11: 9],                             mt26dcd[20:18],mt26dcd[ 8: 6],mt26dcd[17:15],mt26dcd[ 5: 3],                             mt26dcd[14:12],mt26dcd[ 2: 0]};      assign kf3c4f4    ={en44db9[23:21],en44db9[11: 9],                             en44db9[20:18],en44db9[ 8: 6],en44db9[17:15],en44db9[ 5: 3],                             en44db9[14:12],en44db9[ 2: 0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_24
      assign hq141e2    ={lf91136[5],lf91136[2],lf91136[4],lf91136[1],                             lf91136[3],lf91136[0]};      assign tja0f13   ={wy889b7[5],wy889b7[2],wy889b7[4],wy889b7[1],                             wy889b7[3],wy889b7[0]};      assign rg4283c  ={oh36e6d[5],oh36e6d[2],oh36e6d[4],oh36e6d[1],                             oh36e6d[3],oh36e6d[0]};      assign oh789e    ={mt26dcd[17:15],mt26dcd[ 8: 6],mt26dcd[14:12],mt26dcd[ 5: 3],                             mt26dcd[11: 9],mt26dcd[ 2: 0]};      assign kf3c4f4    ={en44db9[17:15],en44db9[ 8: 6],en44db9[14:12],en44db9[ 5: 3],                             en44db9[11: 9],en44db9[ 2: 0]};
    
`endif

    
`ifdef ddr3_ipcore_DATA_SIZE_16
      assign hq141e2    ={lf91136[3],lf91136[1],lf91136[2],lf91136[0]};      assign tja0f13   ={wy889b7[3],wy889b7[1],wy889b7[2],wy889b7[0]};      assign rg4283c  ={oh36e6d[3],oh36e6d[1],oh36e6d[2],oh36e6d[0]};      assign oh789e    ={mt26dcd[11:9],mt26dcd[5:3],mt26dcd[8:6],mt26dcd[2:0]};      assign kf3c4f4    ={en44db9[11:9],en44db9[5:3],en44db9[8:6],en44db9[2:0]};
    
`endif
    
`ifdef ddr3_ipcore_DATA_SIZE_8
      assign hq141e2    = lf91136;      assign tja0f13   = wy889b7;      assign rg4283c  = oh36e6d;      assign oh789e    = mt26dcd;      assign kf3c4f4    = en44db9;    
`endif
  
`else
    assign hq141e2    = lf91136;    assign tja0f13   = wy889b7;    assign rg4283c  = oh36e6d;    assign oh789e    = mt26dcd;    assign kf3c4f4    = en44db9;  
`endif //x4


`else
    assign hq141e2    = lf91136;    assign tja0f13   = wy889b7;    assign rg4283c  = oh36e6d;    assign oh789e    = mt26dcd;    assign kf3c4f4    = en44db9;

`endif //RDIMM
   generate     for (faf493f=0; faf493f<`ddr3_ipcore_DATA_WIDTH; faf493f=faf493f+1)       begin: hd6f1d  hd378ee_ddr3_ipcore hd378ee             (.sclk       (sclk),              .eclk       (eclk),              .rst_n      (rst_n),              .ddr_rst    (ddr_rst),              .lf91136     (hq141e2[faf493f/`ddr3_ipcore_DQSW]),              .wy889b7    (tja0f13[faf493f/`ddr3_ipcore_DQSW]),              .mt9aa65   (kf3c4f4[3*(faf493f/`ddr3_ipcore_DQSW)]),              .qg4cb58   (kf3c4f4[3*(faf493f/`ddr3_ipcore_DQSW)+1]),              .pf6b067   (kf3c4f4[3*(faf493f/`ddr3_ipcore_DQSW)+2]),              .hdcf99   (oh789e[3*(faf493f/`ddr3_ipcore_DQSW)]),              .blf33c9   (oh789e[3*(faf493f/`ddr3_ipcore_DQSW)+1]),              .lq793d3   (oh789e[3*(faf493f/`ddr3_ipcore_DQSW)+2]),              .oh36e6d   (rg4283c[faf493f/`ddr3_ipcore_DQSW]),
              .psd5f65 (hqb736c[faf493f]),              .fnecab9 (hqb736c[faf493f+  `ddr3_ipcore_DATA_WIDTH]),              .by573ab (hqb736c[faf493f+2*`ddr3_ipcore_DATA_WIDTH]),              .mr75688 (hqb736c[faf493f+3*`ddr3_ipcore_DATA_WIDTH]),


`ifdef ddr3_ipcore_SIM
              .wwd1126  (gbe27a4[4*faf493f]),              .aa24c4d  (gbe27a4[4*faf493f+1]),              .fc89a20  (gbe27a4[4*faf493f+2]),              .sh440d0  (gbe27a4[4*faf493f+3]),

`else
              .wwd1126  (gqb9b63[4*faf493f]),              .aa24c4d  (gqb9b63[4*faf493f+1]),              .fc89a20  (gqb9b63[4*faf493f+2]),              .sh440d0  (gqb9b63[4*faf493f+3]),

`endif
              .fncdb19       (fncdb19[faf493f]),              .ww6d8cf         (ww6d8cf[faf493f])     );       end   endgenerate
endmodule
`timescale 1 ns / 100 ps
module hd378ee_ddr3_ipcore (
                 sclk,
                 eclk,
                 rst_n,
                 ddr_rst,
                 lf91136,
                 wy889b7,
                 mt9aa65,
                 qg4cb58,
                 pf6b067,
                 hdcf99,
                 blf33c9,
                 lq793d3,
                 oh36e6d,



                 psd5f65,
                 fnecab9,
                 by573ab,
                 mr75688,
                 wwd1126,
                 aa24c4d,
                 fc89a20,
                 sh440d0,
                 fncdb19,
                 ww6d8cf
                 );
input                 sclk;
input                 eclk;
input                 rst_n;
input                 ddr_rst;
input                 lf91136;
input                 wy889b7;
input                 mt9aa65;
input                 qg4cb58;
input                 pf6b067;
input                 hdcf99;
input                 blf33c9;
input                 lq793d3;
input                 psd5f65;
input                 fnecab9;
input                 by573ab;
input                 mr75688;
input                 oh36e6d;
output                wwd1126;
output                aa24c4d;
output                fc89a20;
output                sh440d0;
output                fncdb19;
inout                 ww6d8cf;
wire                  qva4888;
wire                  ou24444;
wire                  fp22221;
wire                  fc1110e;
wire                  aa88873;
wire                  fncdb19;
wire                  co21ccc;


















  IDDRX2DQA hqe660(.D(fp22221), .DQSR90(lf91136), .ECLK(eclk), .SCLK(sclk), .RST(ddr_rst),                         .RDPNTR2(pf6b067), .RDPNTR1(qg4cb58), .RDPNTR0(mt9aa65), .WRPNTR2(lq793d3), .WRPNTR1(blf33c9),  .WRPNTR0(hdcf99), .Q0(wwd1126), .Q1(aa24c4d), .Q2(fc89a20), .Q3(sh440d0), .QWL(fncdb19));


  ODDRX2DQA  #(.GSR("ENABLED"))  aaac174 (.D0(psd5f65), .D1(fnecab9), .D2(by573ab), .D3(mr75688), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSW270(wy889b7), .Q(qva4888));



assign #`ddr3_ipcore_DQ_TRC_DEL ou24444   = qva4888;
assign #`ddr3_ipcore_DQ_TRC_DEL aa88873 = oh36e6d;
assign #`ddr3_ipcore_DQ_TRC_DEL fp22221      = co21ccc;
BB ux39dbc (.I(ou24444), .T(aa88873), .O(fc1110e), .B(ww6d8cf))     ;
DELAYG #(.DEL_MODE("DQS_ALIGNED_X2"),.DEL_VALUE(0))       aye5091 (.A(fc1110e), .Z(co21ccc));
endmodule





`timescale 1 ns / 100 ps
module oh1227b_ddr3_ipcore (
    ddr_rst,
    eclk,
    sclk,
    wy889b7,
    wjdcefe,

    ipe77f4
);
input                        ddr_rst;
input                        eclk;
input                        sclk;
input  [`ddr3_ipcore_DQS_WIDTH -1 :0]    wy889b7;
input  [`ddr3_ipcore_USER_DM   -1 :0]    wjdcefe;
output [`ddr3_ipcore_DQS_WIDTH -1 :0]    ipe77f4;
wire   [`ddr3_ipcore_DQS_WIDTH -1 :0]    ipe77f4;
wire   [`ddr3_ipcore_DQS_WIDTH -1 :0]    ie1a75f;
genvar faf493f;






generate     for (faf493f=0; faf493f<`ddr3_ipcore_DQS_WIDTH; faf493f=faf493f+1)       begin: hd6f1d             ODDRX2DQA  #(.GSR("ENABLED"))             gd297aa       (.D0(wjdcefe[faf493f/(8/`ddr3_ipcore_DQSW)]),          .D1(wjdcefe[faf493f/(8/`ddr3_ipcore_DQSW)+   `ddr3_ipcore_DATA_WIDTH/8]),  .D2(wjdcefe[faf493f/(8/`ddr3_ipcore_DQSW)+ 2*`ddr3_ipcore_DATA_WIDTH/8]),  .D3(wjdcefe[faf493f/(8/`ddr3_ipcore_DQSW)+ 3*`ddr3_ipcore_DATA_WIDTH/8]),          .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSW270(wy889b7[faf493f]), .Q(ie1a75f[faf493f]));
       end   endgenerate      OB pu89a0f  [`ddr3_ipcore_DQS_WIDTH -1:0] (.I(ie1a75f), .O(ipe77f4)) ;
endmodule






`timescale 1 ns / 100 ps
module uv41ed1_ddr3_ipcore (
    
    rst_n,
    ddr_rst,
    jcda34f,
    
    sclk,
    eclk,
    lq69e80,
    hb4f402,
    of7a017,
    psd00bd,
    ep805eb,
    ir2f5c,
    oh17ae4,
    vkbd725,

    pseb92a,
    os5c953,
    vie4a98,
    do254c2,
    tw2a613,
    qg5309a,

    rib2a96,
    pfc2681,

    en44db9,
    mt26dcd,

    
    dqsdel  , 

    
    db81fa3,
    wy889b7,
    lf91136,
    faf47c6,
    mga3e32,
    mg1f191,

    oh36e6d,

    
    enc6445

);
input                          rst_n;
input                          ddr_rst;
input                          jcda34f;
input                          sclk;
input                          eclk;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       dqsdel;
input   [8*(`ddr3_ipcore_DQS_WIDTH)-1:0]   lq69e80;
input                          hb4f402;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       of7a017;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       psd00bd;
input                          ep805eb;
input                          ir2f5c;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       oh17ae4;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       vkbd725;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       pseb92a;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       os5c953;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       vie4a98;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       do254c2;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       tw2a613;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]       qg5309a;
input   [4*(`ddr3_ipcore_DQS_WIDTH)-1:0]   rib2a96;
input   [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]   pfc2681;
output  [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]   en44db9;
output  [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]   mt26dcd;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       db81fa3;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       wy889b7;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       lf91136;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       faf47c6;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       mga3e32;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       mg1f191;
output  [`ddr3_ipcore_DQS_WIDTH-1:0]       oh36e6d;
inout   [`ddr3_ipcore_DQS_WIDTH-1:0]       enc6445;
wire   [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]   en44db9;
wire   [3*(`ddr3_ipcore_DQS_WIDTH)-1:0]   mt26dcd;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       oh36e6d;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       xl9b42e ;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       psda176 ;
reg    [`ddr3_ipcore_DQS_WIDTH-1:0]       dmd0bb2 ;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       db81fa3;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       wy889b7;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       lf91136;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       faf47c6;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       mga3e32;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]       mg1f191;

`ifdef ddr3_ipcore_SIM 
wire  [(`ddr3_ipcore_DQS_WIDTH)-1:0] eca96cd;
reg   [(`ddr3_ipcore_DQS_WIDTH)-1:0] gb4b669;
wire  [(`ddr3_ipcore_DQS_WIDTH)-1:0] gb5b34d;

`ifndef ddr3_ipcore_DV_DLY_BITS

`else

`ifdef ddr3_ipcore_DATA_SIZE_8

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_16

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_24

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_32

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_40

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_48

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_56

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_64

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_72

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`endif

`endif
genvar faf493f;


`ifdef ddr3_ipcore_SIM

`else

`endif





                                             































assign xl9b42e = oh17ae4;
assign psda176 = vkbd725;
always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      dmd0bb2 <= 1'b0;   else      dmd0bb2 <= {`ddr3_ipcore_DQS_WIDTH{hb4f402}};
end






`ifdef ddr3_ipcore_SIM 


`ifndef ddr3_ipcore_DV_DLY_BITS

assign db81fa3 = eca96cd;

`else

always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      gb4b669 <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   else      gb4b669 <= eca96cd;
end assign gb5b34d = `ddr3_ipcore_DV_DLY_BITS;


`ifdef ddr3_ipcore_DATA_SIZE_8


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`else
 assign db81fa3 = gb5b34d ? gb4b669 : eca96cd ;

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_16


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`else
 assign db81fa3 = {             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_24


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[5] ? gb4b669[5] : eca96cd[5],             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`else
 assign db81fa3 = {             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_32


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[7] ? gb4b669[7] : eca96cd[7],             gb5b34d[6] ? gb4b669[6] : eca96cd[6],             gb5b34d[5] ? gb4b669[5] : eca96cd[5],             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`else
 assign db81fa3 = {             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_40


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[ 9] ? gb4b669[ 9] : eca96cd[ 9],             gb5b34d[ 8] ? gb4b669[ 8] : eca96cd[ 8],             gb5b34d[ 7] ? gb4b669[ 7] : eca96cd[ 7],             gb5b34d[ 6] ? gb4b669[ 6] : eca96cd[ 6],             gb5b34d[ 5] ? gb4b669[ 5] : eca96cd[ 5],             gb5b34d[ 4] ? gb4b669[ 4] : eca96cd[ 4],             gb5b34d[ 3] ? gb4b669[ 3] : eca96cd[ 3],             gb5b34d[ 2] ? gb4b669[ 2] : eca96cd[ 2],             gb5b34d[ 1] ? gb4b669[ 1] : eca96cd[ 1],             gb5b34d[ 0] ? gb4b669[ 0] : eca96cd[ 0]  };

`else
 assign db81fa3 = {             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_48


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[11] ? gb4b669[11] : eca96cd[11],             gb5b34d[10] ? gb4b669[10] : eca96cd[10],             gb5b34d[ 9] ? gb4b669[ 9] : eca96cd[ 9],             gb5b34d[ 8] ? gb4b669[ 8] : eca96cd[ 8],             gb5b34d[ 7] ? gb4b669[ 7] : eca96cd[ 7],             gb5b34d[ 6] ? gb4b669[ 6] : eca96cd[ 6],             gb5b34d[ 5] ? gb4b669[ 5] : eca96cd[ 5],             gb5b34d[ 4] ? gb4b669[ 4] : eca96cd[ 4],             gb5b34d[ 3] ? gb4b669[ 3] : eca96cd[ 3],             gb5b34d[ 2] ? gb4b669[ 2] : eca96cd[ 2],             gb5b34d[ 1] ? gb4b669[ 1] : eca96cd[ 1],             gb5b34d[ 0] ? gb4b669[ 0] : eca96cd[ 0]  };

`else
 assign db81fa3 = {             gb5b34d[5] ? gb4b669[5] : eca96cd[5],             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_56


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[13] ? gb4b669[13] : eca96cd[13],             gb5b34d[12] ? gb4b669[12] : eca96cd[12],             gb5b34d[11] ? gb4b669[11] : eca96cd[11],             gb5b34d[10] ? gb4b669[10] : eca96cd[10],             gb5b34d[ 9] ? gb4b669[ 9] : eca96cd[ 9],             gb5b34d[ 8] ? gb4b669[ 8] : eca96cd[ 8],             gb5b34d[ 7] ? gb4b669[ 7] : eca96cd[ 7],             gb5b34d[ 6] ? gb4b669[ 6] : eca96cd[ 6],             gb5b34d[ 5] ? gb4b669[ 5] : eca96cd[ 5],             gb5b34d[ 4] ? gb4b669[ 4] : eca96cd[ 4],             gb5b34d[ 3] ? gb4b669[ 3] : eca96cd[ 3],             gb5b34d[ 2] ? gb4b669[ 2] : eca96cd[ 2],             gb5b34d[ 1] ? gb4b669[ 1] : eca96cd[ 1],             gb5b34d[ 0] ? gb4b669[ 0] : eca96cd[ 0]  };

`else
 assign db81fa3 = {             gb5b34d[6] ? gb4b669[6] : eca96cd[6],             gb5b34d[5] ? gb4b669[5] : eca96cd[5],             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_64


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[15] ? gb4b669[15] : eca96cd[15],             gb5b34d[14] ? gb4b669[14] : eca96cd[14],             gb5b34d[13] ? gb4b669[13] : eca96cd[13],             gb5b34d[12] ? gb4b669[12] : eca96cd[12],             gb5b34d[11] ? gb4b669[11] : eca96cd[11],             gb5b34d[10] ? gb4b669[10] : eca96cd[10],             gb5b34d[ 9] ? gb4b669[ 9] : eca96cd[ 9],             gb5b34d[ 8] ? gb4b669[ 8] : eca96cd[ 8],             gb5b34d[ 7] ? gb4b669[ 7] : eca96cd[ 7],             gb5b34d[ 6] ? gb4b669[ 6] : eca96cd[ 6],             gb5b34d[ 5] ? gb4b669[ 5] : eca96cd[ 5],             gb5b34d[ 4] ? gb4b669[ 4] : eca96cd[ 4],             gb5b34d[ 3] ? gb4b669[ 3] : eca96cd[ 3],             gb5b34d[ 2] ? gb4b669[ 2] : eca96cd[ 2],             gb5b34d[ 1] ? gb4b669[ 1] : eca96cd[ 1],             gb5b34d[ 0] ? gb4b669[ 0] : eca96cd[ 0]  };

`else
 assign db81fa3 = {             gb5b34d[7] ? gb4b669[7] : eca96cd[7],             gb5b34d[6] ? gb4b669[6] : eca96cd[6],             gb5b34d[5] ? gb4b669[5] : eca96cd[5],             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_72


`ifdef ddr3_ipcore_x4
 assign db81fa3 = {             gb5b34d[17] ? gb4b669[17] : eca96cd[17],             gb5b34d[16] ? gb4b669[16] : eca96cd[16],             gb5b34d[15] ? gb4b669[15] : eca96cd[15],             gb5b34d[14] ? gb4b669[14] : eca96cd[14],             gb5b34d[13] ? gb4b669[13] : eca96cd[13],             gb5b34d[12] ? gb4b669[12] : eca96cd[12],             gb5b34d[11] ? gb4b669[11] : eca96cd[11],             gb5b34d[10] ? gb4b669[10] : eca96cd[10],             gb5b34d[ 9] ? gb4b669[ 9] : eca96cd[ 9],             gb5b34d[ 8] ? gb4b669[ 8] : eca96cd[ 8],             gb5b34d[ 7] ? gb4b669[ 7] : eca96cd[ 7],             gb5b34d[ 6] ? gb4b669[ 6] : eca96cd[ 6],             gb5b34d[ 5] ? gb4b669[ 5] : eca96cd[ 5],             gb5b34d[ 4] ? gb4b669[ 4] : eca96cd[ 4],             gb5b34d[ 3] ? gb4b669[ 3] : eca96cd[ 3],             gb5b34d[ 2] ? gb4b669[ 2] : eca96cd[ 2],             gb5b34d[ 1] ? gb4b669[ 1] : eca96cd[ 1],             gb5b34d[ 0] ? gb4b669[ 0] : eca96cd[ 0]  };

`else
 assign db81fa3 = {             gb5b34d[8] ? gb4b669[8] : eca96cd[8],             gb5b34d[7] ? gb4b669[7] : eca96cd[7],             gb5b34d[6] ? gb4b669[6] : eca96cd[6],             gb5b34d[5] ? gb4b669[5] : eca96cd[5],             gb5b34d[4] ? gb4b669[4] : eca96cd[4],             gb5b34d[3] ? gb4b669[3] : eca96cd[3],             gb5b34d[2] ? gb4b669[2] : eca96cd[2],             gb5b34d[1] ? gb4b669[1] : eca96cd[1],             gb5b34d[0] ? gb4b669[0] : eca96cd[0]  };

`endif


`endif




`endif


`endif



generate     for (faf493f=0; faf493f<(`ddr3_ipcore_DQS_WIDTH); faf493f=faf493f+1)       begin: hd6f1d  wje7130_ddr3_ipcore wje7130 (                     .jcda34f  (jcda34f),                     .rst_n          (rst_n),                     .ddr_rst        (ddr_rst),                     .sclk           (sclk),                     .eclk           (eclk),                     .dqsdel         (dqsdel[faf493f]),                     .lq69e80    (lq69e80[(8*faf493f+7):(8*faf493f)]),                     .hb4f402    (dmd0bb2[faf493f]),                     .of7a017 (of7a017[faf493f]),                     .psd00bd (psd00bd[faf493f]),                     .ep805eb       (ep805eb),                     .ir2f5c       (ir2f5c),                     .oh17ae4       (xl9b42e[faf493f]),                     .vkbd725       (psda176[faf493f]),                     .pseb92a       (pseb92a[faf493f]),                     .os5c953        (os5c953[faf493f]),                     .vie4a98         (vie4a98[faf493f]),                     .do254c2       (do254c2[faf493f]),                     .tw2a613        (tw2a613[faf493f]),                     .qg5309a         (qg5309a[faf493f]),
                     .rib2a96           (rib2a96[(4*faf493f+3):(4*faf493f)]),                     .pfc2681     (pfc2681[(3*faf493f+2):(3*faf493f)]),                     .en44db9         (en44db9[(3*faf493f+2):(3*faf493f)]),                     .mt26dcd         (mt26dcd[(3*faf493f+2):(3*faf493f)]),

`ifdef ddr3_ipcore_SIM
                     .db81fa3      (eca96cd[faf493f]),

`else
                     .db81fa3      (db81fa3[faf493f]),

`endif
                     .wy889b7        (wy889b7[faf493f]),                     .lf91136         (lf91136[faf493f]),                     .faf47c6       (faf47c6[faf493f]),                     .mga3e32        (mga3e32[faf493f]),                     .mg1f191        (mg1f191[faf493f]),                     .oh36e6d       (oh36e6d[faf493f]),                     .enc6445            (enc6445[faf493f]));       end    endgenerate

endmodule



`timescale 1 ns / 100 ps
module wje7130_ddr3_ipcore (
          jcda34f,
          rst_n,
          ddr_rst,
          sclk,
          eclk,
          dqsdel,
          lq69e80,
          hb4f402,
          of7a017,
          psd00bd,
          ep805eb,
          ir2f5c,
          oh17ae4,
          vkbd725,

          pseb92a,
          os5c953,
          vie4a98,
          do254c2,
          tw2a613,
          qg5309a,

          rib2a96,
          pfc2681,
	  en44db9,
	  mt26dcd,

	  wy889b7,
	  lf91136,
	  db81fa3,
	  faf47c6,
	  mga3e32,
	  mg1f191,
	  oh36e6d,
          enc6445
          );
input          jcda34f;
input          rst_n;
input          ddr_rst;
input          sclk;
input          eclk;
input          dqsdel;
input [7:0]    lq69e80;
input          hb4f402;
input          of7a017;
input          psd00bd;
input          ep805eb;
input          ir2f5c;
input          oh17ae4;
input          vkbd725;
input          pseb92a;
input          os5c953;
input          vie4a98;
input          do254c2;
input          tw2a613;
input          qg5309a;
input  [3:0]   rib2a96;
input  [2:0]   pfc2681;
output [2:0]   en44db9;
output [2:0]   mt26dcd;
output         db81fa3;
output         wy889b7;
output         lf91136;
output         faf47c6;
output         mga3e32;
output         mg1f191;
output         oh36e6d;
inout          enc6445;
wire           of7f7fe;
wire           psfbff5;
wire           tudffaa;
wire           meffd53;
wire           vifea98;
wire           wy889b7;
wire           lf91136;
wire           db81fa3;
wire           faf47c6;
wire           mga3e32;
wire           mg1f191;
wire           oh36e6d;
wire           pu303c3;
wire           rv81e1a;
wire [2:0]     en44db9;
wire [2:0]     mt26dcd;
reg gbc35c8;



`ifdef ddr3_ipcore_SIM
wire           aa1ae45;


`else


`endif

`ifdef ddr3_ipcore_SIM
wire           thd7229;
wire           ecb914e;
wire           ldc8a70;
wire           vv45387;

`endif

`ifdef ddr3_ipcore_SIM


`else


`endif








assign  oh29c3e  = ~psd00bd & ~of7a017;  
assign  aa87d2d        = (hb4f402 ) ? 1'b0 :  ep805eb;
assign  dba5a03        = (hb4f402 ) ? 1'b0 :  ir2f5c;
assign  hb407b9 = hb4f402 ? 1'b0 : of7a017; 
assign  pu303c3 = hb4f402 ? 1'b0 : psd00bd;
assign  rv81e1a = hb4f402 ? gbc35c8 : of7a017; 
always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      gbc35c8 <= 1'b0;   else      gbc35c8 <= of7a017;
end




   ODDRX2DQSB icd1a4d (.D0(1'b0), .D1(rv81e1a), .D2(1'b0), .D3(pu303c3), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSW(meffd53), .Q(psfbff5));



  TSHX2DQSA  #(.GSR("ENABLED"))  vx19477 (.T0(aa87d2d), .T1(dba5a03), .SCLK(sclk), .ECLK(eclk), .DQSW(meffd53), .RST(ddr_rst), .Q(of7f7fe));






`ifdef ddr3_ipcore_SIM

DQSBUFM   #(.GSR("ENABLED"),               .DQS_LI_DEL_ADJ("FACTORYONLY"),               .DQS_LO_DEL_ADJ("FACTORYONLY"))   zxe61d4(.RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSI(aa1ae45),       .READ1(rib2a96[1]), .READ0(rib2a96[0]),       .READCLKSEL2(pfc2681[2]), .READCLKSEL1(pfc2681[1]), .READCLKSEL0(pfc2681[0]),       .DDRDEL(dqsdel),       .DYNDELAY7(lq69e80[7]), .DYNDELAY6(lq69e80[6]), .DYNDELAY5(lq69e80[5]), .DYNDELAY4(lq69e80[4]),       .DYNDELAY3(lq69e80[3]), .DYNDELAY2(lq69e80[2]), .DYNDELAY1(lq69e80[1]), .DYNDELAY0(lq69e80[0]),       .RDLOADN(pseb92a), .RDMOVE(os5c953), .RDDIRECTION(vie4a98),       .WRLOADN(do254c2), .WRMOVE(tw2a613), .WRDIRECTION(qg5309a),       .PAUSE(jcda34f), .DQSR90(lf91136), .DQSW(meffd53), .DQSW270(wy889b7),       .RDPNTR2(en44db9[2]), .RDPNTR1(en44db9[1]), .RDPNTR0(en44db9[0]),       .WRPNTR2(mt26dcd[2]), .WRPNTR1(mt26dcd[1]), .WRPNTR0(mt26dcd[0]),       .DATAVALID(db81fa3), .BURSTDET(faf47c6), .RDCFLAG(mga3e32), .WRCFLAG(mg1f191)       );

`else
   DQSBUFM   #(.GSR("ENABLED"),               .DQS_LI_DEL_ADJ("FACTORYONLY"),               .DQS_LO_DEL_ADJ("FACTORYONLY"))   zxe61d4(.RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSI(vifea98),       .READ1(rib2a96[1]), .READ0(rib2a96[0]),       .READCLKSEL2(pfc2681[2]), .READCLKSEL1(pfc2681[1]), .READCLKSEL0(pfc2681[0]),       .DDRDEL(dqsdel),       .DYNDELAY7(lq69e80[7]), .DYNDELAY6(lq69e80[6]), .DYNDELAY5(lq69e80[5]), .DYNDELAY4(lq69e80[4]),       .DYNDELAY3(lq69e80[3]), .DYNDELAY2(lq69e80[2]), .DYNDELAY1(lq69e80[1]), .DYNDELAY0(lq69e80[0]),       .RDLOADN(pseb92a), .RDMOVE(os5c953), .RDDIRECTION(vie4a98),       .WRLOADN(do254c2), .WRMOVE(tw2a613), .WRDIRECTION(qg5309a),       .PAUSE(jcda34f), .DQSR90(lf91136), .DQSW(meffd53), .DQSW270(wy889b7),       .RDPNTR2(en44db9[2]), .RDPNTR1(en44db9[1]), .RDPNTR0(en44db9[0]),       .WRPNTR2(mt26dcd[2]), .WRPNTR1(mt26dcd[1]), .WRPNTR0(mt26dcd[0]),       .DATAVALID(db81fa3), .BURSTDET(faf47c6), .RDCFLAG(mga3e32), .WRCFLAG(mg1f191)       );

`endif






`ifdef ddr3_ipcore_SIM

assign #`ddr3_ipcore_WL_DQS_PHASE_DLY ldc8a70  = psfbff5;
assign vv45387 = hb4f402 ? ldc8a70 : psfbff5;

assign #`ddr3_ipcore_DQS_TRC_DEL thd7229  = vv45387;   
assign #`ddr3_ipcore_DQS_TRC_DEL ecb914e = of7f7fe;
assign #`ddr3_ipcore_DQS_TRC_DEL aa1ae45   = vifea98;    

`endif





`ifdef ddr3_ipcore_SIM
  BB jc69589(.I(thd7229), .T(ecb914e), .O(vifea98), .B(enc6445)) ;

`else
  BB jc69589(.I(psfbff5), .T(of7f7fe), .O(vifea98), .B(enc6445))      ;

`endif

   TSHX2DQA  #(.GSR("ENABLED"))   ng14877 (.T0(oh17ae4), .T1(vkbd725), .SCLK(sclk), .ECLK(eclk), .DQSW270(wy889b7), .RST(ddr_rst), .Q(oh36e6d));

endmodule






























`timescale 1 ns / 100 ps
module jc4239b_ddr3_ipcore (
   clk ,
   rst_n ,
   init_start ,  
   jr9b6bb , 
   godb5de ,
   tj8b32c ,
   nrd7783 ,
   kfbbc1e ,
   eade0f4 ,
   hqbdc2f ,
   ng83d00 ,
   xwe40df ,
   xy206fb ,
   zz37db ,
   xy1bedf ,
   tudf6fb ,
   jcfb7da ,
   aydbed3 ,
   rgdf699 ,
   jcfe692 ,
   vx948e7 ,
   ec2eb9b,
   uv4ed58,
   anae6cd ,
   fpaa935 ,
   init_done
   );
input    clk;
input    rst_n;
input    init_start;
input    jr9b6bb;
input    godb5de ;
input    tj8b32c ;
input    nrd7783 ;
input    kfbbc1e ;
output   eade0f4 ;
output   hqbdc2f ;
output   ng83d00 ;
output   xwe40df ;
output   xy206fb ;
output   zz37db ;
output   xy1bedf ;
output   tudf6fb ;
output   jcfb7da ;
output   aydbed3 ;
output   rgdf699 ;
output   jcfe692 ;
output   vx948e7 ;
output   anae6cd ;
output   fpaa935 ;
output   init_done ;
output   ec2eb9b ;
output   uv4ed58;

`define ddr3_ipcore_IDLE_I 0

`define ddr3_ipcore_WAIT 1

`define ddr3_ipcore_NOP_I 2

`define ddr3_ipcore_MRS0 3

`define ddr3_ipcore_MRS1 4

`define ddr3_ipcore_MRS2 5

`define ddr3_ipcore_MRS3 6

`define ddr3_ipcore_ZQ 7

`define ddr3_ipcore_TXPR_I 8

`define ddr3_ipcore_TZQINIT_I 9

`define ddr3_ipcore_TMOD_I 10

`define ddr3_ipcore_N_M2 11

`define ddr3_ipcore_M2M 12

`define ddr3_ipcore_N_M0 13

`define ddr3_ipcore_M0M 14

`define ddr3_ipcore_N_M1 15

`define ddr3_ipcore_M1M 16

`define ddr3_ipcore_N_M3 17

`define ddr3_ipcore_M3M 18
reg  [18:0]          jc4239b;
reg  [18:0]          eae0321;
reg                  eade0f4 ;
reg                  phc84b;
reg                  hqbdc2f;
reg                  kf2cbab;
reg                  ng83d00;
reg                  gb4bfce;
reg                  xwe40df;
reg                  osff3a7;
reg                  xy206fb;
reg                  mece9cf;
reg                  zz37db;
reg                  vka73c7;
reg                  xy1bedf;
reg                  necf1d5;
reg                  tudf6fb;
reg                  vvc7559;
reg                  jcfb7da;
reg                  jcd567a;
reg                  aydbed3;
reg                  go59e9c;
reg                  rgdf699;
reg                  en7a703;
reg                  jcfe692;
reg                  aa2eae4;
reg                  cme076b;
reg                  nt3b59;
reg                  cb1dace;
reg                  ened674;
reg                  hb6b3a5;
reg                  yk59d2e;
reg                  vx948e7, bl74b80;
reg                  ec2eb9b, qi2e03e;
reg                  uv4ed58, kd60ab3;
reg                  anae6cd;
reg                  sw3e12c ;
reg                  init_done;
reg                  jr84b09;
reg                  fpaa935;
reg                  kf2c27a;
reg                  dz613d5;
reg                  vx9eaf;
wire                 xj4f57f;

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`endif











`define ddr3_ipcore_IDLE_I 0


`define ddr3_ipcore_WAIT 1


`define ddr3_ipcore_NOP_I 2


`define ddr3_ipcore_MRS0 3


`define ddr3_ipcore_MRS1 4


`define ddr3_ipcore_MRS2 5


`define ddr3_ipcore_MRS3 6


`define ddr3_ipcore_ZQ 7


`define ddr3_ipcore_TXPR_I 8


`define ddr3_ipcore_TZQINIT_I 9


`define ddr3_ipcore_TMOD_I 10


`define ddr3_ipcore_N_M2 11


`define ddr3_ipcore_M2M 12


`define ddr3_ipcore_N_M0 13


`define ddr3_ipcore_M0M 14


`define ddr3_ipcore_N_M1 15


`define ddr3_ipcore_M1M 16


`define ddr3_ipcore_N_M3 17


`define ddr3_ipcore_M3M 18




assign               xj4f57f = kfbbc1e || init_done || kf2c27a;




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) fpaa935 <=  'b0;   else if (init_start && !xj4f57f) fpaa935 <=  'b1;   else if (xj4f57f)  fpaa935 <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) kf2c27a <=  'b0;   else kf2c27a <=  init_done;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      jc4239b   <=  19'b1;      eade0f4         <=  1'b0;      hqbdc2f       <=  1'b0;      ng83d00       <=  1'b0;      xwe40df       <=  1'b0;      xy206fb       <=  1'b0;      zz37db       <=  1'b0;      xy1bedf       <=  1'b0;      tudf6fb       <=  1'b0;      jcfb7da       <=  1'b0;      aydbed3       <=  1'b0;      rgdf699       <=  1'b0;      jcfe692        <=  1'b0;      cme076b   <=  1'b0;      cb1dace   <=  1'b0;      hb6b3a5   <=  1'b0;      vx948e7         <=  1'b0;      ec2eb9b       <=  1'b0;      uv4ed58       <=  1'b0;      anae6cd    <=  1'b0;      init_done  <=  1'b0;      dz613d5 <=  1'b0;
   end   else begin      jc4239b <= eae0321;      eade0f4         <=  phc84b;      hqbdc2f       <=  kf2cbab;      ng83d00       <=  gb4bfce;      xwe40df       <=  osff3a7;      xy206fb       <=  mece9cf;      zz37db       <=  vka73c7;      xy1bedf       <=  necf1d5;      tudf6fb       <=  vvc7559;      jcfb7da       <=  jcd567a;      aydbed3       <=  go59e9c;      rgdf699       <=  en7a703;      jcfe692        <=  aa2eae4;      cme076b   <=  nt3b59;      cb1dace   <=  ened674;      hb6b3a5   <=  yk59d2e;      vx948e7         <=  bl74b80;      ec2eb9b       <=  qi2e03e;      uv4ed58       <=  kd60ab3;      anae6cd    <=  sw3e12c;      init_done  <=  jr84b09;      dz613d5 <=  vx9eaf;
   end
end




always @ (jc4239b or jr9b6bb or godb5de or          tj8b32c or cme076b or hb6b3a5 or          cb1dace or nrd7783 or kfbbc1e or          fpaa935 or jcfe692 or uv4ed58 or cb1dace or hb6b3a5          or cme076b or eade0f4 or vx948e7 or anae6cd or ng83d00 or ec2eb9b or dz613d5) begin
eae0321 = 19'b0;
kf2cbab = 1'b0;
jr84b09 = 1'b0;
osff3a7 = 1'b0;
mece9cf = 1'b0;
vka73c7 = 1'b0;
necf1d5 = 1'b0;
vvc7559 = 1'b0;
jcd567a = 1'b0;
go59e9c = 1'b0;
en7a703 = 1'b0;
aa2eae4 = jcfe692;
kd60ab3 = uv4ed58;
ened674 = cb1dace;
yk59d2e = hb6b3a5;
nt3b59 = cme076b;
phc84b = eade0f4;
bl74b80 = vx948e7;
sw3e12c = anae6cd;
gb4bfce = ng83d00;
qi2e03e = ec2eb9b;
vx9eaf = dz613d5;
case (1)        jc4239b[`ddr3_ipcore_IDLE_I] : begin      kf2cbab = 1'b1;      phc84b = 1'b0;
      gb4bfce = 1'b0;
      osff3a7 = 1'b0;      mece9cf = 1'b0;      vka73c7 = 1'b0;      necf1d5 = 1'b0;      vvc7559 = 1'b0;      jcd567a = 1'b0;      go59e9c = 1'b0;      en7a703 = 1'b0;      aa2eae4  = 1'b0;      nt3b59 = 1'b0;      ened674 = 1'b0;      yk59d2e = 1'b0;      bl74b80 = 1'b0;      qi2e03e = 1'b0;      kd60ab3 = 1'b0;      sw3e12c = 1'b0;      jr84b09 = 1'b0;
      if (fpaa935 ) begin     if (vx9eaf) begin            eae0321[`ddr3_ipcore_TXPR_I] = 1'b1;            phc84b = 1'b0;            gb4bfce = 1'b1;            aa2eae4 = 1'b1;         end     else begin            eae0321[`ddr3_ipcore_WAIT] = 1'b1;            phc84b = 1'b1;            kf2cbab = 1'b0;     end      end      else         eae0321[`ddr3_ipcore_IDLE_I] = 1'b1;   end
                   jc4239b[`ddr3_ipcore_WAIT] : begin      if (jr9b6bb) begin         eae0321[`ddr3_ipcore_TXPR_I] = 1'b1;         phc84b = 1'b0;         gb4bfce = 1'b1;         aa2eae4 = 1'b1;         vx9eaf = 1'b1;      end      else eae0321[`ddr3_ipcore_WAIT] = 1'b1;   end                   jc4239b[`ddr3_ipcore_TXPR_I] : begin      if (godb5de) begin         eae0321[`ddr3_ipcore_MRS2] = 1'b1;         gb4bfce = 1'b0;         vka73c7 = 1'b1;         nt3b59 = 1'b1;         aa2eae4 = 1'b0;      end      else eae0321[`ddr3_ipcore_TXPR_I] = 1'b1;   end               jc4239b[`ddr3_ipcore_MRS2] : begin

`ifdef ddr3_ipcore_CS_WIDTH_4
     eae0321[`ddr3_ipcore_N_M2] = 1'b1;

`else
  
`ifdef ddr3_ipcore_CS_WIDTH_2
     eae0321[`ddr3_ipcore_N_M2] = 1'b1;   
`else
      eae0321[`ddr3_ipcore_NOP_I] = 1'b1;      aa2eae4 = 1'b1;      kd60ab3 = 1'b1;   
`endif


`endif
      vka73c7 = 1'b0;    end  jc4239b[`ddr3_ipcore_N_M2] : begin   eae0321[`ddr3_ipcore_M2M] = 1'b1;     go59e9c = 1'b1;  end jc4239b[`ddr3_ipcore_M2M] : begin     eae0321[`ddr3_ipcore_NOP_I] = 1'b1;      aa2eae4 = 1'b1;      kd60ab3 = 1'b1;      go59e9c = 1'b0; end                   jc4239b[`ddr3_ipcore_NOP_I] : begin      if (tj8b32c) begin         aa2eae4 = 1'b0;         if (cme076b) begin            eae0321[`ddr3_ipcore_MRS3] = 1'b1;            necf1d5 = 1'b1;            nt3b59 = 1'b0;            yk59d2e = 1'b1;            kd60ab3 = 1'b0;         end         else if (hb6b3a5) begin            eae0321[`ddr3_ipcore_MRS1] = 1'b1;            mece9cf = 1'b1;            yk59d2e = 1'b0;            ened674 = 1'b1;            kd60ab3 = 1'b0;         end
         else if (cb1dace) begin            eae0321[`ddr3_ipcore_MRS0] = 1'b1;            osff3a7 = 1'b1;            aa2eae4 = 1'b0;            ened674 = 1'b0;            kd60ab3 = 1'b0;         end      end      else eae0321[`ddr3_ipcore_NOP_I] = 1'b1;
   end            





 jc4239b[`ddr3_ipcore_MRS3] : begin

`ifdef ddr3_ipcore_CS_WIDTH_4
     eae0321[`ddr3_ipcore_N_M3] = 1'b1;

`else
  
`ifdef ddr3_ipcore_CS_WIDTH_2
     eae0321[`ddr3_ipcore_N_M3] = 1'b1;   
`else
      eae0321[`ddr3_ipcore_NOP_I] = 1'b1;      aa2eae4 = 1'b1;      kd60ab3 = 1'b1;   
`endif


`endif
      necf1d5 = 1'b0;    end  jc4239b[`ddr3_ipcore_N_M3] : begin   eae0321[`ddr3_ipcore_M3M] = 1'b1;     en7a703 = 1'b1;  end jc4239b[`ddr3_ipcore_M3M] : begin     eae0321[`ddr3_ipcore_NOP_I] = 1'b1;      aa2eae4 = 1'b1;      kd60ab3 = 1'b1;      en7a703 = 1'b0; end
            





   jc4239b[`ddr3_ipcore_MRS1] : begin

`ifdef ddr3_ipcore_CS_WIDTH_4
     eae0321[`ddr3_ipcore_N_M1] = 1'b1;

`else
  
`ifdef ddr3_ipcore_CS_WIDTH_2
     eae0321[`ddr3_ipcore_N_M1] = 1'b1;   
`else
      eae0321[`ddr3_ipcore_NOP_I] = 1'b1;      aa2eae4 = 1'b1;      kd60ab3 = 1'b1;   
`endif


`endif
      mece9cf = 1'b0;    end  jc4239b[`ddr3_ipcore_N_M1] : begin   eae0321[`ddr3_ipcore_M1M] = 1'b1;     jcd567a = 1'b1;  end jc4239b[`ddr3_ipcore_M1M] : begin     eae0321[`ddr3_ipcore_NOP_I] = 1'b1;      aa2eae4 = 1'b1;      kd60ab3 = 1'b1;      jcd567a = 1'b0; end
             





   jc4239b[`ddr3_ipcore_MRS0] : begin

`ifdef ddr3_ipcore_CS_WIDTH_4
     eae0321[`ddr3_ipcore_N_M0] = 1'b1;

`else
  
`ifdef ddr3_ipcore_CS_WIDTH_2
     eae0321[`ddr3_ipcore_N_M0] = 1'b1;   
`else
      eae0321[`ddr3_ipcore_TMOD_I] = 1'b1;      qi2e03e = 1'b1;      aa2eae4 = 1'b1;   
`endif


`endif
      osff3a7 = 1'b0;    end  jc4239b[`ddr3_ipcore_N_M0] : begin   eae0321[`ddr3_ipcore_M0M] = 1'b1;     vvc7559 = 1'b1;  end jc4239b[`ddr3_ipcore_M0M] : begin     eae0321[`ddr3_ipcore_TMOD_I] = 1'b1;      aa2eae4 = 1'b1;      qi2e03e = 1'b1;      vvc7559 = 1'b0; end
                  jc4239b[`ddr3_ipcore_TMOD_I] : begin      if (nrd7783) begin         eae0321[`ddr3_ipcore_ZQ] = 1'b1;         qi2e03e = 1'b0;         bl74b80 = 1'b1;         aa2eae4 = 1'b0;      end      else eae0321[`ddr3_ipcore_TMOD_I] = 1'b1;   end               jc4239b[`ddr3_ipcore_ZQ] : begin         eae0321[`ddr3_ipcore_TZQINIT_I] = 1'b1;         bl74b80 = 1'b0;         sw3e12c = 1'b1;   end                       jc4239b[`ddr3_ipcore_TZQINIT_I] : begin      if (kfbbc1e) begin         eae0321[`ddr3_ipcore_IDLE_I] = 1'b1;         sw3e12c = 1'b0;         jr84b09 = 1'b1;         kf2cbab = 1'b1;      end      else begin            eae0321[`ddr3_ipcore_TZQINIT_I] = 1'b1;      end   end   default : begin      eae0321[`ddr3_ipcore_IDLE_I] = 1'b1;   end
endcase
end
endmodule































`timescale 1 ns / 100 ps
module hd383b2_ddr3_ipcore (
   clk,
   rst_n,
   eade0f4,
   ng83d00,
   param_txpr,
   ec2eb9b,
   param_tmod,
   uv4ed58,
   param_tmrd,
   anae6cd,
   param_tzqinit ,
   jr9b6bb , 
   godb5de ,
   tj8b32c ,
   nrd7783 ,
   kfbbc1e ,
   xwe40df,
   xy206fb,
   zz37db,
   xy1bedf

);
input                      clk;
input                      rst_n;
input                      eade0f4;
input                      ng83d00;
input                      ec2eb9b;
input                      uv4ed58;
input                      anae6cd;
input                      xwe40df;
input                      xy206fb;
input                      zz37db;
input                      xy1bedf;
input [`ddr3_ipcore_TXPR_WIDTH-1:0]    param_txpr;
input [`ddr3_ipcore_TMOD_WIDTH-1:0]    param_tmod;
input [`ddr3_ipcore_TMRD_WIDTH-1:0]    param_tmrd;
input [`ddr3_ipcore_TZQINIT_WIDTH-1:0] param_tzqinit;
output                     jr9b6bb ;
output                     godb5de ;
output                     tj8b32c ;
output                     nrd7783 ;
output                     kfbbc1e ;
reg [3:0]                  ne480d8;
reg [7:0]                  hb406c2;
reg [5:0]                  hd3616;
reg [`ddr3_ipcore_TXPR_WIDTH-1:0]      je1b0b7;
reg [`ddr3_ipcore_TMOD_WIDTH-1:0]      jpd85ba;
reg [`ddr3_ipcore_TMRD_WIDTH-1:0]      qtf2b04;
reg [`ddr3_ipcore_TZQINIT_WIDTH-1:0]   db16ebe;
wire                       lsb75f7;
wire                       phbafbb;
wire                       jr9b6bb ;
reg                        godb5de ;
reg                        nrd7783 ;
wire                       tj8b32c;
reg                        kfbbc1e;

`ifdef ddr3_ipcore_SIM

`else

`ifdef ddr3_ipcore_GATE_SIM

`else

`endif

`endif

`ifdef ddr3_ipcore_X4_GEAR

`else

`endif











`ifdef ddr3_ipcore_SIM
   assign      lsb75f7 = (ne480d8 == 4'h3);   assign      phbafbb =(hb406c2 == 8'h03);   assign      jr9b6bb = (hd3616 == 6'h02);

`else
 
`ifdef ddr3_ipcore_GATE_SIM
   assign      lsb75f7 = (ne480d8 == 4'h3);   assign      phbafbb =(hb406c2 == 8'h03);   assign      jr9b6bb = (hd3616 == 6'h02); 
`else
   assign      lsb75f7 = &ne480d8;   assign      phbafbb = &hb406c2;   assign      jr9b6bb = (hd3616 == 6'h19); 
`endif


`endif

assign      tj8b32c = (qtf2b04 == (param_tmrd - 1'b1));





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ne480d8 <=  'b0;   else if (lsb75f7)      ne480d8 <=  'b0;   else if (eade0f4)      ne480d8 <=  ne480d8 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      hb406c2 <=  'b0;   else if (phbafbb)      hb406c2 <=  'b0;   else if (lsb75f7)      hb406c2 <=  hb406c2 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      hd3616 <=  'b0;   else if (jr9b6bb )      hd3616 <=  'b0;   else if (phbafbb)      hd3616 <=  hd3616 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      je1b0b7 <=  'b0;   else if (godb5de )      je1b0b7 <=  'b0;   else if (ng83d00)      je1b0b7 <=  je1b0b7 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      godb5de <=  1'b0;
   else if (je1b0b7 == (param_txpr -1))      godb5de <=  1'b1;   else      godb5de <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      jpd85ba <=  'b0;   else if (nrd7783 )      jpd85ba <=  'b0;   else if (ec2eb9b || xwe40df)      jpd85ba <=  jpd85ba + 1;
end


`ifdef ddr3_ipcore_X4_GEAR

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      nrd7783 <=  1'b0;   else if (jpd85ba == (param_tmod -1))      nrd7783 <=  1'b1;   else      nrd7783 <=  1'b0;
end

`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      nrd7783 <=  1'b0;   else if (jpd85ba == (param_tmod -2))      nrd7783 <=  1'b1;   else      nrd7783 <=  1'b0;
end

`endif





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qtf2b04 <=  'b0;   else if (tj8b32c )      qtf2b04 <=  'b0;   else if (uv4ed58 || zz37db || xy1bedf || xy206fb)      qtf2b04 <=  qtf2b04 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      db16ebe <=  'b0;   else if (kfbbc1e )      db16ebe <=  'b0;   else if (anae6cd)      db16ebe <=  db16ebe + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kfbbc1e <=  1'b0;   else if (db16ebe == (param_tzqinit - 2))      kfbbc1e <=  1'b1;   else      kfbbc1e <=  1'b0;
end


endmodule






























`timescale 1 ns / 100 ps
module wy5f50_ddr3_ipcore (
   
   clk,
   rst_n,
   param_txpr,
   param_tmod,
   param_tmrd,
   param_tzqinit ,
   init_start ,
   
   
   fpaa935,
   hqbdc2f, 
   xwe40df,
   xy206fb,
   zz37db,
   xy1bedf,
   tudf6fb,
   jcfb7da,
   aydbed3,
   rgdf699,

   jcfe692,
   vx948e7,
   init_done
);
input       clk;
input       rst_n;
input [`ddr3_ipcore_TXPR_WIDTH-1:0] param_txpr;
input [`ddr3_ipcore_TMOD_WIDTH-1:0] param_tmod;
input [`ddr3_ipcore_TMRD_WIDTH-1:0]  param_tmrd;
input [`ddr3_ipcore_TZQINIT_WIDTH-1:0] param_tzqinit;
input       init_start;
output      init_done;
output      fpaa935;
output      hqbdc2f;
output      xwe40df;
output      xy206fb;
output      zz37db;
output      xy1bedf;
output      tudf6fb;
output      jcfb7da;
output      aydbed3;
output      rgdf699;
output      jcfe692;
output      vx948e7;
wire       clk;
wire       rst_n;
wire       eade0f4;
wire       ng83d00;
wire       ec2eb9b;
wire       uv4ed58;
wire       anae6cd;
wire       jr9b6bb;
wire       godb5de;
wire       tj8b32c;
wire       nrd7783;
wire       kfbbc1e;
wire       init_start;
wire [`ddr3_ipcore_TXPR_WIDTH-1:0] param_txpr;
wire [`ddr3_ipcore_TMOD_WIDTH-1:0] param_tmod;
wire [`ddr3_ipcore_TMRD_WIDTH-1:0]  param_tmrd;
wire [`ddr3_ipcore_TZQINIT_WIDTH-1:0] param_tzqinit;
wire       fpaa935;
wire       hqbdc2f;
wire       xwe40df;
wire       xy206fb;
wire       zz37db;
wire       xy1bedf;
wire       jcfe692;
wire       vx948e7;













jc4239b_ddr3_ipcore off8631(   .clk              (clk) ,   .rst_n            (rst_n) ,   .init_start       (init_start) ,   .jr9b6bb   (jr9b6bb) ,   .godb5de        (godb5de) ,   .tj8b32c        (tj8b32c) ,   .nrd7783        (nrd7783) ,   .kfbbc1e     (kfbbc1e) ,   .eade0f4               (eade0f4) ,   .hqbdc2f             (hqbdc2f) ,   .ng83d00             (ng83d00) ,   .xwe40df             (xwe40df) ,   .xy206fb             (xy206fb) ,   .zz37db             (zz37db) ,   .xy1bedf             (xy1bedf) ,   .tudf6fb             (tudf6fb) ,   .jcfb7da             (jcfb7da) ,   .aydbed3             (aydbed3) ,   .rgdf699             (rgdf699) ,   .jcfe692              (jcfe692) ,   .vx948e7               (vx948e7) ,   .ec2eb9b             (ec2eb9b),   .uv4ed58             (uv4ed58),   .anae6cd          (anae6cd) ,   .fpaa935          (fpaa935) ,   .init_done        (init_done)   );




hd383b2_ddr3_ipcore vv55e89(   .clk              (clk),   .rst_n            (rst_n),   .eade0f4               (eade0f4),   .xwe40df             (xwe40df) ,   .xy206fb             (xy206fb) ,   .zz37db             (zz37db) ,   .xy1bedf             (xy1bedf) ,   .ng83d00             (ng83d00),   .param_txpr       (param_txpr),   .ec2eb9b             (ec2eb9b),   .param_tmod       (param_tmod),   .uv4ed58             (uv4ed58),   .param_tmrd       (param_tmrd),   .anae6cd          (anae6cd),   .param_tzqinit    (param_tzqinit) ,   .jr9b6bb   (jr9b6bb) ,   .godb5de        (godb5de) ,   .tj8b32c        (tj8b32c) ,   .nrd7783        (nrd7783) ,   .kfbbc1e     (kfbbc1e)
);
endmodule






























`define ddr3_ipcore_RT_RD_ADDR 'h400

`define ddr3_ipcore_RT_ACT_ADDR 'h400
`timescale 1 ns / 100 ps
module wj6ae2d_ddr3_ipcore (

   clk,
   rst_n,
   vx948e7,
   fpaa935,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
   wwde307,
   hof1838,
   hq8c1c3,
   kd60e1a,
   ux70d4,
   lf386a5,
   xwe40df,
   xy206fb,
   zz37db,
   xy1bedf,
   tudf6fb,
   jcfb7da,
   aydbed3,
   rgdf699,
   tuf1b3a,
   ie31859,

   wl_act,
   wy15761,
   gd398ab,
   encc55d,
   kq62aec, 
   hb4f402,


   ps57666,
   anbb332,
   ipd9995,
   alcccac,
   jc66565,
   nt32b2a,
   an95956,
   ec31407,
   ip655a0
   );
input                          clk;
input                          rst_n;
input                          vx948e7;
input                          wwde307;
input                          hof1838;
input                          hq8c1c3;
input                          kd60e1a;
input                          ux70d4;
input                          lf386a5;
input                          xwe40df;
input                          xy206fb;
input                          zz37db;
input                          xy1bedf;
input                          tudf6fb;
input                          jcfb7da;
input                          aydbed3;
input                          rgdf699;
input                          fpaa935;
input [15:0]                   addr_init_0;
input [15:0]                   addr_init_1;
input [15:0]                   addr_init_2;
input [15:0]                   addr_init_3;
input                          tuf1b3a;
input                          ie31859;
input                          wl_act;
input                          gd398ab;
input                          encc55d;
input [`ddr3_ipcore_CS_WIDTH-1:0]          kq62aec;
input [15:0]                   wy15761;
input                          hb4f402;
output [`ddr3_ipcore_CS_WIDTH-1 :0]        ps57666;
output                         anbb332;
output                         ipd9995;
output                         alcccac;
output [`ddr3_ipcore_BANK_WIDTH-1:0]       jc66565;

`ifdef ddr3_ipcore_ROW_WIDTH_12
output [`ddr3_ipcore_ROW_WIDTH:0]          nt32b2a ;

`else
output [`ddr3_ipcore_ROW_WIDTH-1:0]        nt32b2a ;

`endif
output [`ddr3_ipcore_CKE_WIDTH -1:0]       an95956;
output                         ec31407;
output                         ip655a0;
parameter  pfec553  =  10'h200;
parameter  os62a9f  =  10'h100;
parameter  co154f9 =  10'h080;
parameter  qv90c9f  =  10'h040;
parameter  hq864fc  =  10'h020;
parameter  lf327e3  =  10'h010;
parameter  ng93f1f  =  10'h008;
parameter  oh9f8fb =  10'h004;
parameter  blfc7dd =  10'h002;
parameter  nre3eee  =  10'h001;
reg [`ddr3_ipcore_CS_WIDTH-1 :0]    zm8cd6f,  by66b7b ;
reg                     do35bdb, baadedb  ;
reg                     en6f6da, dz7b6d4 ;
reg                     eadb6a7,  sudb538 ;
reg [`ddr3_ipcore_BANK_WIDTH-1:0]   byda9c0,    ykd4e03 ;

`ifdef ddr3_ipcore_ROW_WIDTH_12
reg [`ddr3_ipcore_ROW_WIDTH:0]      twa7018, ph380c2 ;

`else
reg [`ddr3_ipcore_ROW_WIDTH-1:0]    twa7018, ph380c2 ;

`endif
wire [`ddr3_ipcore_CS_WIDTH-1 :0]   ps57666 ;
wire                    anbb332  ;
wire                    ipd9995 ;
wire                    alcccac ;
wire [`ddr3_ipcore_BANK_WIDTH-1:0]  jc66565 ;

`ifdef ddr3_ipcore_ROW_WIDTH_12
wire [`ddr3_ipcore_ROW_WIDTH:0]     nt32b2a ;

`else
wire [`ddr3_ipcore_ROW_WIDTH-1:0]   nt32b2a ;

`endif
wire                    xw7645b;

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif
reg    [`ddr3_ipcore_CKE_WIDTH -1:0]  an95956;
reg                    ec31407;
reg                    ux717d, lf38bed;
reg                    rgc5f6f, ls2fb7b;
wire                   ip655a0;
wire   [9:0]           meff80b;
wire                   ald9938;
wire                   ofcc9c4;
wire                   th64e25;
wire                   ph2712e;
wire  [3:0]            jr38976;
wire  [13:0]           mrc629a;

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else 

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`ifdef ddr3_ipcore_CS_WIDTH_4

`else

`endif

`endif




`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ipcore_ROW_WIDTH_12


`else


`endif




`ifdef ddr3_ipcore_CS_WIDTH_2

assign ps57666 = (wwde307) ? 2'b10 : (fpaa935 || wl_act) ? zm8cd6f : {`ddr3_ipcore_CS_WIDTH{1'b1}};

`else

assign ps57666 = (wwde307) ? 1'b0 : (fpaa935 || wl_act) ? zm8cd6f : {`ddr3_ipcore_CS_WIDTH{1'b1}};

`endif

assign anbb332 =do35bdb;
assign ipd9995 =en6f6da;
assign alcccac  =eadb6a7 ;
assign jc66565    =(fpaa935 || wl_act || wwde307)? byda9c0 : 3'b0;
assign nt32b2a  =(fpaa935 || wl_act || wwde307)? twa7018 : {`ddr3_ipcore_ROW_WIDTH{1'b0}};

assign                 ip655a0 = ux717d;
assign                 ald9938 = xwe40df | tudf6fb;
assign                 ofcc9c4 = xy206fb | jcfb7da;
assign                 th64e25 = zz37db | aydbed3;
assign                 ph2712e = xy1bedf | rgdf699;
assign   jr38976 = {ald9938 ,ofcc9c4 ,th64e25 ,ph2712e };

assign   meff80b = {hof1838, hq8c1c3, lf386a5, jr38976 ,((gd398ab | encc55d) && (wl_act | wwde307)),(fpaa935 & tuf1b3a ), vx948e7};


assign  mrc629a = {3'b010,ux70d4,6'b000000,kd60e1a,3'b000};  
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       an95956    <=  {`ddr3_ipcore_CKE_WIDTH{1'b0}};   else if (tuf1b3a)       an95956    <=  {`ddr3_ipcore_CKE_WIDTH{1'b1}};   else if (!ie31859)       an95956    <=  {`ddr3_ipcore_CKE_WIDTH{1'b0}};
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ec31407    <=  1'b0;
   else if ( (wl_act || wwde307) && (gd398ab || encc55d))       ec31407    <=  1'b1;   else if ( !(gd398ab || encc55d))       ec31407    <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       zm8cd6f    <=  'b1;       do35bdb   <=  'b1;       en6f6da   <=  'b1;       eadb6a7    <=  'b1;       byda9c0      <=  'b0;       twa7018    <=  'b0;       ux717d    <=  'b0;    end    else begin       zm8cd6f    <=  by66b7b  ;       do35bdb   <=  baadedb ;       en6f6da   <=  dz7b6d4 ;       eadb6a7    <=  sudb538 ;       byda9c0      <=  ykd4e03   ;       twa7018    <=  ph380c2 ;       ux717d     <=  lf38bed;    end
end


`ifdef ddr3_ipcore_RDIMM

assign xw7645b = 1'b1;

`else

assign xw7645b = 1'b0;

`endif

always @ (meff80b or ald9938 or ofcc9c4 or th64e25 or ph2712e or gd398ab or fpaa935 or wwde307           or tuf1b3a  or kq62aec or wy15761 or byda9c0 or twa7018           or addr_init_0 or addr_init_1 or addr_init_2 or addr_init_3 or tudf6fb or jcfb7da or aydbed3 or rgdf699           or hb4f402 or mrc629a or xw7645b) begin      by66b7b  = {`ddr3_ipcore_CS_WIDTH{1'b1}};      baadedb = 'h1;      dz7b6d4 = 'h1;      sudb538  = 'h1;      ykd4e03  =  'h0;      ph380c2  =  'h0;      lf38bed = 'h0;      case (meff80b)        pfec553 : begin         by66b7b  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         baadedb =  'h1;         dz7b6d4 =  'h0;         sudb538  =  'h0;                  ph380c2  = mrc629a ;       end       os62a9f : begin         by66b7b  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         baadedb =  'h1;         dz7b6d4 =  'h0;         sudb538  =  'h1;                  ph380c2  = mrc629a ;       end       co154f9 : begin         by66b7b  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         baadedb =  'h0;         dz7b6d4 =  'h1;         sudb538  =  'h1;                  ph380c2  = mrc629a ;       end       qv90c9f : begin         baadedb =  'h0;         dz7b6d4 =  'h0;         sudb538  =  'h0;
         ph380c2  =  {addr_init_0[15:2],2'b00};         ykd4e03    =  3'b0 ;         if (tudf6fb) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b01;

`else 
         by66b7b  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         by66b7b  = 4'b1010;   
`else
         by66b7b  = 1'b0;   
`endif


`endif
         end       end       hq864fc : begin         baadedb =  'h0;         dz7b6d4 =  'h0;         sudb538  =  'h0;         ph380c2  =  addr_init_1;         ykd4e03    =  3'b001 ;         if (jcfb7da) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b01;

`else 
         by66b7b  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         by66b7b  = 4'b1010;   
`else
         by66b7b  = 1'b0;   
`endif


`endif
         end       end       lf327e3 : begin         baadedb =  'h0;         dz7b6d4 =  'h0;         sudb538  =  'h0;         ph380c2  =  addr_init_2;         ykd4e03    =  3'b010 ;         if (aydbed3) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b01;

`else 
         by66b7b  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         by66b7b  = 4'b1010;   
`else
         by66b7b  = 1'b0;   
`endif


`endif
         end       end
       ng93f1f : begin         baadedb =  'h0;         dz7b6d4 =  'h0;         sudb538  =  'h0;         ph380c2  =  addr_init_3;         ykd4e03    =  3'b011 ;         if (rgdf699) begin          lf38bed = 1'b1;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b01;

`else 
         by66b7b  = 4'b0101;

`endif
         end         else begin          lf38bed = 1'b0;

`ifdef ddr3_ipcore_CS_WIDTH_2
         by66b7b  = 2'b10;

`else 
  
`ifdef ddr3_ipcore_CS_WIDTH_4
         by66b7b  = 4'b1010;   
`else
         by66b7b  = 1'b0;   
`endif


`endif
         end
       end
       oh9f8fb : begin           baadedb =  'h0;           dz7b6d4 =  'h0;           sudb538  =  'h0;           ph380c2  =  wy15761;   if (wwde307)             ykd4e03    =  3'b000 ;           else if (gd398ab)             ykd4e03    =  3'b001 ;           else             ykd4e03    =  3'b010 ;


`ifdef ddr3_ipcore_CS_WIDTH_2
          if (!kq62aec[1])             lf38bed = 1'b1;          else             lf38bed = 1'b0; 
`else
       
`ifdef ddr3_ipcore_CS_WIDTH_4
             if (!kq62aec[1] || !kq62aec[3])                lf38bed = 1'b1;             else                lf38bed = 1'b0;        
`else
                lf38bed = 1'b0;        
`endif


`endif
           by66b7b  =  kq62aec;       end       blfc7dd : begin         if (hb4f402)   by66b7b  =  kq62aec;         else               by66b7b  = {`ddr3_ipcore_CS_WIDTH{xw7645b}} ;         baadedb =  'h1;         dz7b6d4 =  'h1;         sudb538  =  'h1;         ykd4e03    =   byda9c0;         ph380c2  =   twa7018;       end       nre3eee : begin         by66b7b  = {`ddr3_ipcore_CS_WIDTH{1'b0}};         baadedb =  'h1;         dz7b6d4 =  'h1;         sudb538  =  'h0;         ph380c2  = 'h400 ;       end       default: begin        if (hb4f402)    by66b7b  =  kq62aec;         else               by66b7b  = {`ddr3_ipcore_CS_WIDTH{1'b1}} ;         baadedb =  'h1;         dz7b6d4 =  'h1;         sudb538  =  'h1;         ykd4e03    =  byda9c0 ;         ph380c2  =  twa7018;       end      endcase
end
endmodule



































`timescale 1 ns / 100 ps
module byeeae4_ddr3_ipcore (
    
    sclk,			   
    rst_n,			   
    qg5c8e5,
    wj65730,
    ou2b985,
    ec31407,
    wlb19ef,
    jr28771,
    su43b8f,
    qv1dc78,
    lqee3c4,
    sj80455,
    clocking_good,
    wl_phase_dly_cnt,

    
    wl_done,
    fp22f48,
    wl_err,
    wl_act,
    hb4f402,
    gd398ab,
    fc302ea,
    wy15761,
    ph81752,
    zm11cc,
    irbb58a,
    ux8e62,
    ofd62ab,

    sjb155c,
    riba96,
    pf55724
    );
input                        sclk;
input                        rst_n;
input                        qg5c8e5;
input  [`ddr3_ipcore_AL_WIDTH-1:0]       wj65730;
input  [`ddr3_ipcore_CWL_WIDTH-1:0]      ou2b985;
input                        ec31407;
input  [`ddr3_ipcore_CS_WIDTH -1:0]      wlb19ef;
input                        jr28771;
input   [ 2: 0]              su43b8f;
input   [ 1: 0]              qv1dc78;
input                        lqee3c4;
input   [10: 0]              sj80455;
input                        clocking_good;
input  [7:0]                 wl_phase_dly_cnt;
output                       wl_done;
output                       fp22f48;
output                       wl_err;
output                       wl_act;
output                       hb4f402;
output                       gd398ab;
output                       fc302ea;
output  [15: 0]              wy15761;
output  [`ddr3_ipcore_CS_WIDTH-1:0]      ph81752;
output                       zm11cc;
output                       irbb58a;
output                       ofd62ab;
output  [(`ddr3_ipcore_DQS_WIDTH)-1:0]   ux8e62;
output  [8*(`ddr3_ipcore_DQS_WIDTH)-1:0] sjb155c;
output  [`ddr3_ipcore_CS_WIDTH-1 :0]     riba96;
output                       pf55724;

`define ddr3_ipcore_TDQS 1'b0

`define ddr3_ipcore_POS_CNT 1'b0

`define ddr3_ipcore_NEG_CNT 1'b1

`define ddr3_ipcore_START_DLY 8'h0

`define ddr3_ipcore_START_POL 1'b0

`define ddr3_ipcore_PHASE_COMP 6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns

`define ddr3_ipcore_tWLDQSEN_sclk (`ddr3_ipcore_TWLDQSEN - `ddr3_ipcore_TMOD) // (13-6) =  7 (for 200MHz Sclk)

`define ddr3_ipcore_tWLMRD_sclk (`ddr3_ipcore_TWLMRD - `ddr3_ipcore_TMOD)   // (20-6) = 14 (for 200MHz Sclk)

`define ddr3_ipcore_tWLO_sclk (`ddr3_ipcore_TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)

`define ddr3_ipcore_ODTLoff_tAOFmax_sclk 7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck

`define ddr3_ipcore_MAX_DQS_DLY_CNT 8'd88 //    (88 x 0.025) = 2.2ns 

`define ddr3_ipcore_MIN_DQS_DLY_CNT 8'h80 //    msb=1 for neg value. cnt=0 

`define ddr3_ipcore_WL_DQS_PHASE_DLY_CNT1 (`ddr3_ipcore_WL_DQS_PHASE_DLY_CNT)
parameter  rt7e46b            = 4'd0;
parameter  off235f  = 4'd1;
parameter  nt91afd       = 4'd2;
parameter  ie8d7ee  = 4'd3;
parameter  th6bf70    = 4'd4;
parameter  xj5fb87     = 4'd5;
parameter  uvfdc3f   = 4'd6;
parameter  lqee1fd  = 4'd7;
parameter  gb70fea        = 4'd8;
parameter  ym87f55    = 4'd9;
parameter  ls3faa8          = 4'd10;
parameter  offd542      = 4'd11;
parameter  kqeaa14          = 4'd12;
parameter  dz550a1       = 4'd13;
parameter  lsa850f          = 4'd14;
parameter  jc4287b           = 3'd0;
parameter  vk143da          = 3'd1;
parameter  ana1ed3       = 3'd2;
parameter  qif69c      = 3'd3;
parameter  jp7b4e1         = 3'd4;
parameter  byda70f      = 3'd5;
parameter  wjd387a           = 3'd0;
parameter  hq9c3d5         = 3'd1;
parameter  vie1eab         = 3'd2;
parameter  cof55a          = 3'd3;
parameter  al7aad1         = 3'd4;
parameter  dmd568c     = 3'd5;

`ifdef ddr3_ipcore_CS_WIDTH_1
parameter mtab463 = 1;
parameter pf5a31c = 0;
parameter cmd18e6 = 0;
parameter zm8c730 = 0;

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2
parameter mtab463 = 1;
parameter pf5a31c = 1;
parameter cmd18e6 = 0;
parameter zm8c730 = 0;

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4
parameter mtab463 = 1;
parameter pf5a31c = 1;
parameter cmd18e6 = 1;
parameter zm8c730 = 1;

`endif
reg  [3:0]                   dob23ff;
reg                          wl_act   ;
reg                          hb4f402;
reg                          sh7fef4;
reg                          qgff7a4;
reg  [`ddr3_ipcore_CS_WIDTH-1 :0]        fafbd21;
reg                          qgde90a;
reg  [7:0]                   psf4851;
reg  [7:0]                   uxa428b;
reg  [(`ddr3_ipcore_DQS_WIDTH)-1:0]      ym2145d;
reg                          irbb58a;
reg                          wl_done;
reg                          fp22f48;
reg                          wl_err  ;
reg                          hbe9373;
reg                          cm49b9f;
reg                          zk4dcf9;
reg  [(`ddr3_ipcore_CS_WIDTH)-1:0]       dz6e7cb;
reg  [(`ddr3_ipcore_DQS_WIDTH)-1:0]      tu73e5e;
reg  [(`ddr3_ipcore_CS_WIDTH)-1:0]       wl9f2f2;
reg  [1:0]                   jpf9794;
reg                          wwcbca6;
reg  [2:0]                   al5e530;
reg                          off2984;
reg                          jr94c24;
reg  [2:0]                   coa6126;
reg                          hq30930;
reg                          jr84983;
reg                          ym24c1f;
reg                          cb260f8;
reg                          hq307c4;
reg                          do83e22;
reg  [1:0]                   ym1f112;
reg                          yxf8890;
reg  [2:0]                   qgc4485;
reg                          bn22428;
reg                          an12146;
reg  [2:0]                   kf90a34;
reg                          mt851a4;
reg  [7:0]                   vx28d24;
reg  [7:0]                   go46926;
reg                          wy34930;
reg                          zm11cc;
reg                          ofd62ab;
reg                          sj26060;
reg                          fc30304;
reg                          ph81822;
reg                          xlc117;
reg                          ip608be;
reg                          do45f4;
reg                          gd398ab;
reg                          fc302ea;
reg  [`ddr3_ipcore_TWLMRD_WIDTH-1:0]     uxbe8bd;
reg  [`ddr3_ipcore_CS_WIDTH-1 :0]        riba96;
reg  [8*(`ddr3_ipcore_DQS_WIDTH)-1:0]    sjb155c;
wire                         pf55724;
wire [(`ddr3_ipcore_CS_WIDTH)-1:0]       ribd89d;
wire [15: 0]                 wy15761;
wire [8*(`ddr3_ipcore_WL_DQS_WIDTH)-1:0] os6275f;
wire [`ddr3_ipcore_CS_WIDTH-1 :0]        ph81752;
wire [(`ddr3_ipcore_DQS_WIDTH)-1:0]      ux8e62;
wire                         viebe39;
wire                         nr5f1cb;
wire                         off8e5e;
wire                         rtc72f5;
wire                         mt397af;
wire [3:0]                   uicbd7c;
wire [2:0]                   kd5ebe0;
wire                         suf5f05;
wire [`ddr3_ipcore_CS_WIDTH -1:0]        tjaf829;
wire [15: 0]                 vi7c14f;
wire [15: 0]                 ose0a7a;
reg                          ym53d0;
reg                          mt29e80;
reg                          pf4f404;
reg                          al7a027;
reg                          hod013d;
reg                          sj809eb;
reg  [7:0]                   tw4f5d;

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ipcore_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ipcore_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ipcore_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`ifdef ddr3_ipcore_USER_SLOT_SIZE_1

`else

`endif

`endif

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif
wire     db27aeb;
genvar vx3d75f;


`ifndef ddr3_ipcore_CS_WIDTH_1
genvar gq3ba02;


`ifndef ddr3_ipcore_CS_WIDTH_2
genvar ps5d7f3;

genvar hoebf9b;


`endif //ifndef CS_WIDTH_2

`endif //ifndef CS_WIDTH_1

`ifdef ddr3_ipcore_CS_WIDTH_1

`endif

`ifdef ddr3_ipcore_CS_WIDTH_2

`endif

`ifdef ddr3_ipcore_CS_WIDTH_4

`endif





































`define ddr3_ipcore_TDQS 1'b0



`define ddr3_ipcore_POS_CNT 1'b0


`define ddr3_ipcore_NEG_CNT 1'b1


`define ddr3_ipcore_START_DLY 8'h0



`define ddr3_ipcore_START_POL 1'b0


`define ddr3_ipcore_PHASE_COMP 6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns
                            






`define ddr3_ipcore_tWLDQSEN_sclk (`ddr3_ipcore_TWLDQSEN - `ddr3_ipcore_TMOD) // (13-6) =  7 (for 200MHz Sclk)


`define ddr3_ipcore_tWLMRD_sclk (`ddr3_ipcore_TWLMRD - `ddr3_ipcore_TMOD)   // (20-6) = 14 (for 200MHz Sclk)


`define ddr3_ipcore_tWLO_sclk (`ddr3_ipcore_TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)
                                                                                        

`define ddr3_ipcore_ODTLoff_tAOFmax_sclk 7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck
                                                                                                                                                

`define ddr3_ipcore_MAX_DQS_DLY_CNT 8'd88 //    (88 x 0.025) = 2.2ns 


`define ddr3_ipcore_MIN_DQS_DLY_CNT 8'h80 //    msb=1 for neg value. cnt=0 





`define ddr3_ipcore_WL_DQS_PHASE_DLY_CNT1 (`ddr3_ipcore_WL_DQS_PHASE_DLY_CNT)





`ifdef ddr3_ipcore_CS_WIDTH_1
    
`endif


`ifdef ddr3_ipcore_CS_WIDTH_2
    
`endif


`ifdef ddr3_ipcore_CS_WIDTH_4
    
`endif














always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      tw4f5d   <= 8'h0;      fc30304       <= 1'b0;      ofd62ab             <= 1'b0;   end   else begin      tw4f5d   <= wl_phase_dly_cnt;      fc30304       <= sj26060;
      ofd62ab             <= sj26060;         end
end



`ifdef ddr3_ipcore_CS_WIDTH_1

assign      suf5f05 = 1'b1;

`else

assign      suf5f05 = {{(`ddr3_ipcore_CS_WIDTH-1){1'b0}},1'b1};

`endif




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      dob23ff        <= rt7e46b;      wl_act          <= 1'b0;      hb4f402     <= 1'b0;      sh7fef4        <= 1'b0;      qgff7a4         <= 1'b0;      fafbd21         <= {`ddr3_ipcore_CS_WIDTH{1'b0}};      qgde90a     <= 1'b1;      psf4851    <= `ddr3_ipcore_START_DLY;      uxa428b    <= `ddr3_ipcore_WL_DQS_PHASE_DLY_CNT1;            ym2145d      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      irbb58a    <= 1'b0;      wl_done         <= 1'b0;      fp22f48       <= 1'b0;      wl_err          <= 1'b0;      hbe9373     <= 1'b0;      cm49b9f    <= 1'b0;      zk4dcf9     <= 1'b0;      dz6e7cb       <= {`ddr3_ipcore_CS_WIDTH{1'b0}};      
`ifdef ddr3_ipcore_DATA_SIZE_8
      tu73e5e     <= 1'b1;      
`else
      tu73e5e     <= {{(`ddr3_ipcore_DQS_WIDTH-1){1'b0}},1'b1};      
`endif
      wl9f2f2      <= suf5f05;      jpf9794          <= 2'b00;      wwcbca6   <= 1'b0;      al5e530        <= 3'b000;      off2984 <= 1'b0;      jr94c24        <= 1'b0;   end   else begin      case (dob23ff)  
         rt7e46b   :          begin                             fp22f48       <= 1'b0;                           zk4dcf9     <= 1'b0;                           fafbd21         <= {`ddr3_ipcore_CS_WIDTH{1'b0}};                           hb4f402     <= 1'b0;                           ym2145d      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};                           dz6e7cb       <= {`ddr3_ipcore_CS_WIDTH{1'b0}};                         
`ifdef ddr3_ipcore_DATA_SIZE_8
                           tu73e5e     <= 1'b1;                         
`else
                           tu73e5e     <= {{(`ddr3_ipcore_DQS_WIDTH-1){1'b0}},1'b1};                         
`endif
                           wl9f2f2      <= suf5f05;                           psf4851    <= `ddr3_ipcore_START_DLY;                                                      uxa428b    <= tw4f5d;                           wwcbca6   <= 1'b0;                       jpf9794          <= 2'b00;                           al5e530        <= 3'b000;               off2984 <= 1'b0;                           jr94c24        <= 1'b0;                       if (qg5c8e5 && !wl_done) begin                          wl_act    <= 1'b1;                          dob23ff  <= off235f;                       end                           else                              dob23ff     <= rt7e46b;                           end                  off235f  : begin                             if ((fafbd21 == `ddr3_ipcore_CS_WIDTH) || (|(ym2145d))) begin                              wl9f2f2      <= suf5f05;                  off2984 <= 1'b1;                              qgde90a     <= 1'b0;                              wwcbca6   <= 1'b0;                              sh7fef4        <= 1'b0;                              qgff7a4         <= 1'b0;                              al5e530        <= 3'b000;                              dob23ff        <= ie8d7ee;                           end                           else begin                              wwcbca6 <= 1'b0;                              sh7fef4      <= 1'b1;                              qgff7a4       <= 1'b0;                              al5e530      <= kd5ebe0;                              hbe9373   <= 1'b1;                              dob23ff      <= nt91afd;                           end                           end         nt91afd :       begin                             hbe9373     <= 1'b0;                           if (ec31407) begin                              fafbd21      <= fafbd21 + 1;                              wl9f2f2   <= wl9f2f2 + wl9f2f2;                              dob23ff     <= off235f;                           end                           else                              dob23ff     <= nt91afd;                           end         ie8d7ee :  begin                 off2984 <= 1'b0;                           if (an12146) begin                              hb4f402  <= 1'b1;                              jr94c24     <= 1'b1;                              dob23ff     <= th6bf70;                           end                   else                              dob23ff     <= ie8d7ee;                   end         th6bf70 :    begin                             qgde90a     <= 1'b0;                           jr94c24        <= 1'b0;               if (do45f4) begin                              ym2145d   <= ym2145d + 1;                              dob23ff     <= xj5fb87;               end                           else if (ip608be)                              dob23ff     <= ls3faa8;                   else                              dob23ff     <= th6bf70;                   end         xj5fb87 :     begin                             if (ym2145d == `ddr3_ipcore_DQS_WIDTH) begin                              qgde90a  <= 1'b0;                              ym2145d   <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};                             
`ifdef ddr3_ipcore_DATA_SIZE_8
                              tu73e5e  <= 1'b1;                             
`else
                              tu73e5e  <= {{(`ddr3_ipcore_DQS_WIDTH-1){1'b0}},1'b1};                             
`endif
                              zk4dcf9  <= 1'b1;                                    irbb58a <= 1'b0;                              dob23ff     <= uvfdc3f;                           end                           else begin                              tu73e5e   <= tu73e5e + tu73e5e;                              irbb58a  <= ~irbb58a;     
`ifdef ddr3_ipcore_RDIMM
                              psf4851  <= `ddr3_ipcore_START_DLY;                              uxa428b    <= tw4f5d;     
`else
                              psf4851  <= vx28d24;                              uxa428b  <= go46926;

        
`endif
                              qgde90a   <= 1'b1;                              jr94c24      <= 1'b1;                              dob23ff      <= th6bf70;                           end                           end                  uvfdc3f :   begin                              zk4dcf9   <= 1'b0;                           if (mt397af) begin                                wwcbca6  <= 1'b0;                              sh7fef4       <= 1'b0;                              qgff7a4        <= 1'b0;                              al5e530       <= kd5ebe0;                              hbe9373    <= 1'b1;                              dob23ff       <= lqee1fd;               end                           else                              dob23ff     <= uvfdc3f;                           end              lqee1fd :  begin                              hbe9373  <= 1'b0;                           if (!ec31407)                              dob23ff     <= lqee1fd;                           else  begin                              sh7fef4     <= 1'b1;                              hbe9373  <= 1'b1;                              dob23ff     <= gb70fea;                           end                           end                  gb70fea  :       begin                              hbe9373      <= 1'b0;               if (ec31407) begin                              wwcbca6 <= 1'b1;                          jpf9794        <= sj80455[10:9];                              cm49b9f  <= 1'b1;                              hb4f402   <= 1'b0;                              dob23ff      <= ym87f55;                           end                           else                              dob23ff      <= gb70fea;                           end              ym87f55 :    begin                             cm49b9f  <= 1'b0;                           if (!ec31407)                              dob23ff   <= ym87f55;                           else begin                              wwcbca6 <= 1'b0;                            jpf9794        <= 2'b00;
                              sh7fef4      <= 1'b0;                              qgff7a4       <= 1'b0;                              if (dz6e7cb == `ddr3_ipcore_CS_WIDTH - 1) begin                                 dz6e7cb     <= {`ddr3_ipcore_CS_WIDTH{1'b0}};                                 wl9f2f2    <= suf5f05;                                 al5e530      <= su43b8f;                                 hbe9373   <= 1'b1;                                 dob23ff      <= offd542;                              end                              else begin                                 dz6e7cb     <= dz6e7cb + 1;                                    psf4851  <= `ddr3_ipcore_START_DLY;                                                                  uxa428b  <= tw4f5d;                                 wl9f2f2    <= wl9f2f2 + wl9f2f2;                                 al5e530      <= 3'b000;                     off2984 <= 1'b1;                                 dob23ff      <= ie8d7ee;                              end                           end                           end          ls3faa8 :          begin                                wl_act          <= 1'b0;                           hb4f402     <= 1'b0;                           wl_err          <= 1'b1;                           wl_done         <= 1'b1;                           fp22f48       <= 1'b1;                           dob23ff        <= rt7e46b;                           end          offd542 :      begin                             hbe9373   <= 1'b0;                           if (!ec31407)                              dob23ff  <= offd542;                           else begin                              if (dz6e7cb == `ddr3_ipcore_CS_WIDTH - 1)                                 dob23ff   <= kqeaa14;                              else begin                                 dz6e7cb  <= dz6e7cb + 1;                                 wl9f2f2 <= wl9f2f2 + wl9f2f2;                                 hbe9373 <= 1'b1;                                 dob23ff   <= offd542;                              end                           end                           end         kqeaa14 :          begin                                dob23ff     <= lsa850f;                           end
         dz550a1 :       begin                             if (clocking_good)                              dob23ff     <= lsa850f;                           else                              dob23ff     <= dz550a1;                           end
         lsa850f :          begin                                wl_act          <= 1'b0;
                              hb4f402     <= 1'b0;                              wl_err          <= 1'b0;                              wl_done         <= 1'b1;                              fp22f48       <= 1'b1;                              dob23ff        <= rt7e46b;                           end         default :         begin                           dob23ff        <= rt7e46b;                           end         endcase   end
end



always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      coa6126        <= jc4287b;      hq30930        <= 1'b0;      jr84983         <= 1'b0;      ym24c1f     <= 1'b0;      cb260f8    <= 1'b0;      hq307c4     <= 1'b1;      do83e22      <= 1'b0;      ym1f112          <= 2'b00;      yxf8890   <= 1'b0;      qgc4485        <= 3'b000;      bn22428     <= 1'b0;      an12146  <= 1'b0;   end   else begin      case (coa6126)  
         jc4287b   :         begin                             do83e22      <= 1'b0;                                                      hq307c4     <= 1'b0;                           yxf8890   <= 1'b0;                       ym1f112          <= 2'b00;                           qgc4485        <= 3'b000;                           an12146   <= 1'b0;                           ym24c1f     <= 1'b0;               if (off2984)                              coa6126     <= vk143da;                           else                              coa6126     <= jc4287b;                           end                           vk143da  :         begin                              yxf8890   <= 1'b1;                       ym1f112          <= 2'b00;                             bn22428     <= 1'b1;                           coa6126        <= ana1ed3;                           end         ana1ed3 :       begin                              bn22428        <= 1'b0;                           if (ec31407) begin                              yxf8890  <= 1'b0;                              hq30930       <= 1'b0;                              jr84983        <= 1'b1;                                                            qgc4485       <= kd5ebe0;                              ym24c1f    <= 1'b1;                              hq307c4    <= 1'b1;                              coa6126       <= qif69c;                           end                           else                              coa6126       <= ana1ed3;                           end         qif69c :      begin                             ym24c1f       <= 1'b0;                           if (ec31407) begin                              yxf8890  <= 1'b0;                              hq30930       <= 1'b0;                              jr84983        <= 1'b0;                              qgc4485       <= 3'b000;                              cb260f8 <= 1'b1;                                      hq307c4   <= 1'b0;                              coa6126      <= jp7b4e1;                           end                           else                              coa6126      <= qif69c;                           end                  jp7b4e1 :         begin                             if (viebe39) begin                              do83e22   <= 1'b1;                              hq307c4 <= 1'b1;                              coa6126    <= byda70f;                           end                           else                              coa6126     <= jp7b4e1;                           end              byda70f :      begin                             do83e22   <= 1'b0;                           hq307c4  <= 1'b0;                           if (rtc72f5) begin                                 an12146 <= 1'b1;                              coa6126      <= jc4287b;                           end                           else begin                              coa6126     <= byda70f;                           end                           end         default :         begin                           coa6126        <= jc4287b;                           end         endcase   end
end



always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      kf90a34       <= wjd387a;      mt851a4    <= 1'b0;      vx28d24  <= `ddr3_ipcore_START_DLY;      go46926  <= `ddr3_ipcore_WL_DQS_PHASE_DLY_CNT1;            wy34930      <= 1'b0;      zm11cc     <= 1'b0;      ph81822  <= 1'b0;      xlc117         <= `ddr3_ipcore_POS_CNT;      ip608be          <= 1'b0;      do45f4          <= 1'b0;      sj26060    <= 1'b0;
   end   else begin      case (kf90a34)           wjd387a  :          begin                             wy34930      <= 1'b0;                           zm11cc     <= 1'b0;                           ph81822  <= 1'b0;                           xlc117         <= `ddr3_ipcore_POS_CNT;                           ip608be          <= 1'b0;                           do45f4          <= 1'b0;   if (dob23ff     == uvfdc3f) begin                              sj26060    <= 1'b0;                           end                           mt851a4    <= 1'b0;                       if (jr94c24) begin                              vx28d24  <= psf4851;                              go46926  <= uxa428b;                              wy34930   <= 1'b1;                              mt851a4 <= 1'b1;                          kf90a34    <= hq9c3d5;                       end                           else                              kf90a34    <= wjd387a;                           end         hq9c3d5 :         begin                                                        wy34930   <= 1'b0;                           if (zm11cc) begin                              zm11cc  <= 1'b0;                              mt851a4 <= 1'b0;                              kf90a34     <= vie1eab;                              sj26060 <= 1'b0;                           end                           else begin                              zm11cc  <= 1'b1;                                      kf90a34     <= hq9c3d5;                                                         end                           end                  vie1eab :         begin                              if (off8e5e) begin                              mt851a4  <= 1'b1;                              sj26060  <= 1'b1;                              kf90a34     <= cof55a;                           end                           else                              kf90a34     <= vie1eab;                           end         cof55a  :         begin                              if (ph81822 == 1'b0) begin                              if (jr28771 == 1'b1)                                 xlc117 <= `ddr3_ipcore_NEG_CNT;                                                               else                                 xlc117 <= `ddr3_ipcore_POS_CNT;                              ph81822 <= 1'b1;                              kf90a34       <= al7aad1;                                                         end                           else  begin                              if (xlc117 == `ddr3_ipcore_POS_CNT && jr28771 == 1'b1)                                 kf90a34  <= dmd568c;                              else begin                                 if (xlc117 == `ddr3_ipcore_NEG_CNT && jr28771 == 1'b0)                                    xlc117 <= `ddr3_ipcore_POS_CNT;                                 kf90a34  <= al7aad1;                                                                  end                           end                           end              al7aad1 :         begin                              if (xlc117 == `ddr3_ipcore_POS_CNT) begin                              if (ym53d0) begin                                 vx28d24  <= 8'h00;                                        end                              else                                 vx28d24  <= vx28d24 + 1;                              if ( hod013d ) begin                                 go46926  <= 8'h00;                              end                              else                                 go46926  <= go46926 + 1;                           end                           else begin


                              if (mt29e80) begin                                 xlc117 <= `ddr3_ipcore_POS_CNT;                              end                              else                                 vx28d24  <= vx28d24 - 1;


                              if (!sj809eb)                                 go46926  <= go46926 - 1;                           end                           if ( pf4f404 || al7a027) begin                              ip608be        <= 1'b1;                              kf90a34     <= wjd387a;                              sj26060  <= 1'b0;                           end                           else begin                              wy34930    <= 1'b1;                                    kf90a34     <= hq9c3d5;                           end                           end
              dmd568c :     begin                             ph81822  <= 1'b0;                           do45f4          <= 1'b1;                           kf90a34       <= wjd387a;                           end         default :         begin                           kf90a34       <= wjd387a;                           end         endcase   end
end

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ym53d0    <= 1'b0;   end   else if (vx28d24 == 8'h9c)      ym53d0    <= 1'b1;   else      ym53d0    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      mt29e80    <= 1'b0;   end   else if (vx28d24 == 8'h1 || vx28d24 == 8'h0)      mt29e80    <= 1'b1;   else      mt29e80    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      pf4f404    <= 1'b0;   end   else if (vx28d24 == `ddr3_ipcore_MAX_DQS_DLY_CNT - 1)      pf4f404    <= 1'b1;   else      pf4f404    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      al7a027    <= 1'b0;   end   else if (vx28d24 == `ddr3_ipcore_MIN_DQS_DLY_CNT + 1)      al7a027    <= 1'b1;   else      al7a027    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      hod013d    <= 1'b0;   end   else if (go46926 == 8'h9c)      hod013d    <= 1'b1;   else      hod013d    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      sj809eb    <= 1'b0;   end   else if (go46926 == 8'h1 || go46926 == 8'h0)      sj809eb    <= 1'b1;   else      sj809eb    <= 1'b0;
end

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n)      riba96   <= {`ddr3_ipcore_CS_WIDTH{1'b0}};   else if (do83e22)      riba96   <= ribd89d;   else if (zk4dcf9)      riba96   <= {`ddr3_ipcore_CS_WIDTH{1'b0}};
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      gd398ab    <= 1'b0;      fc302ea   <= 1'b0;   end   else begin      gd398ab    <= hbe9373  | ym24c1f;      fc302ea   <= bn22428 | cm49b9f;   end
end
   assign  kd5ebe0 = (fafbd21[0] || dz6e7cb[0]) ? `ddr3_ipcore_WL_RNK1_RTT_NOM : `ddr3_ipcore_WL_RNK0_RTT_NOM; assign  pf55724 = (dob23ff == kqeaa14) ? 1'b1 : 1'b0; assign  wy15761  = (wwcbca6 || yxf8890) ? ose0a7a : vi7c14f; assign  vi7c14f = {3'b000,(sh7fef4 | hq30930) ,`ddr3_ipcore_TDQS,1'b0,(al5e530[2] | qgc4485[2]), 1'b0,                (qgff7a4 | jr84983) ,(al5e530[1] | qgc4485[1]),qv1dc78[1],wj65730,	(al5e530[0] | qgc4485[0]),qv1dc78[0],lqee3c4}; assign ose0a7a  = {3'b000,(jpf9794 | ym1f112),1'b0,sj80455[7:0]};



`ifdef ddr3_ipcore_CS_WIDTH_4



assign ribd89d = wl9f2f2;

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2
 
`ifdef ddr3_ipcore_USER_SLOT_SIZE_1
  assign ribd89d = {(wl9f2f2[0] | wl9f2f2[1]), 1'b0}; 
`else
  assign ribd89d = {(wl9f2f2[0] | wl9f2f2[1]), (wl9f2f2[0] | wl9f2f2[1])}; 
`endif


`endif


`ifdef ddr3_ipcore_CS_WIDTH_1
 assign ribd89d = wl9f2f2;

`endif




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      uxbe8bd    <= 4'h0;   end   else if (!cb260f8 || qgde90a || mt851a4 || hq307c4)      uxbe8bd    <= 4'h0;   else      uxbe8bd    <= uxbe8bd + 1;
end
assign  viebe39      = (uxbe8bd == `ddr3_ipcore_TMOD)                 ? 1'b1 : 1'b0;
assign  nr5f1cb  = (uxbe8bd == `ddr3_ipcore_tWLDQSEN_sclk)        ? 1'b1 : 1'b0;
assign  off8e5e      = (uxbe8bd == `ddr3_ipcore_tWLO_sclk)            ? 1'b1 : 1'b0;
assign  rtc72f5    = (uxbe8bd == `ddr3_ipcore_tWLMRD_sclk)          ? 1'b1 : 1'b0;
assign  mt397af = (uxbe8bd == `ddr3_ipcore_ODTLoff_tAOFmax_sclk) ? 1'b1 : 1'b0;

assign  ux8e62    = tu73e5e;
assign  ph81752     = ~wl9f2f2;






assign  db27aeb =  (dob23ff == dmd568c) ? 1'b1 : 1'b0;
          generate        begin        if(mtab463 == 1) begin           for (vx3d75f=0; vx3d75f<`ddr3_ipcore_DQS_WIDTH; vx3d75f=vx3d75f+1)           begin: ie821e1           qi10f09_ddr3_ipcore qi10f09(               .sclk              (sclk),               .rst_n             (rst_n),               .wy34930        (wy34930),               .db27aeb    (db27aeb),               .ipf2eaa            (wl9f2f2[0]),               .ntbaaa0           (tu73e5e[vx3d75f]),               .al5419f    (vx28d24),               .jr67ee    (go46926),
               .an9fbbc        (os6275f[(8*vx3d75f+7):(8*vx3d75f)])               );           end         end     end     endgenerate

`ifndef ddr3_ipcore_CS_WIDTH_1
          generate        begin        if(pf5a31c == 1) begin           for (gq3ba02=0; gq3ba02<`ddr3_ipcore_DQS_WIDTH; gq3ba02=gq3ba02+1)           begin: ykc11f3           qi10f09_ddr3_ipcore qi10f09(               .sclk              (sclk),               .rst_n             (rst_n),               .wy34930        (wy34930),               .db27aeb    (db27aeb),               .ipf2eaa            (wl9f2f2[1]),               .ntbaaa0           (tu73e5e[gq3ba02]),               .al5419f    (vx28d24),               .jr67ee    (go46926),
               .an9fbbc        (os6275f[((8*(gq3ba02+`ddr3_ipcore_DQS_WIDTH))+7):(8*(gq3ba02+`ddr3_ipcore_DQS_WIDTH))])               );           end         end     end     endgenerate

`ifndef ddr3_ipcore_CS_WIDTH_2
          generate        begin        if(cmd18e6 == 1) begin           for (ps5d7f3=0; ps5d7f3<`ddr3_ipcore_DQS_WIDTH; ps5d7f3=ps5d7f3+1)           begin: sw2e761           qi10f09_ddr3_ipcore qi10f09(               .sclk              (sclk),               .rst_n             (rst_n),               .wy34930        (wy34930),               .db27aeb    (db27aeb),               .ipf2eaa            (wl9f2f2[2]),               .ntbaaa0           (tu73e5e[ps5d7f3]),               .al5419f    (vx28d24),               .jr67ee    (go46926),
               .an9fbbc        (os6275f[((8*(ps5d7f3+2*`ddr3_ipcore_DQS_WIDTH))+7):(8*(ps5d7f3+2*`ddr3_ipcore_DQS_WIDTH))])               );           end         end     end     endgenerate          generate        begin        if(zm8c730 == 1) begin           for (hoebf9b=0; hoebf9b<`ddr3_ipcore_DQS_WIDTH; hoebf9b=hoebf9b+1)           begin: ri30b4e           qi10f09_ddr3_ipcore qi10f09(               .sclk              (sclk),               .rst_n             (rst_n),               .wy34930        (wy34930),               .db27aeb    (db27aeb),               .ipf2eaa            (wl9f2f2[3]),               .ntbaaa0           (tu73e5e[hoebf9b]),               .al5419f    (vx28d24),               .jr67ee    (go46926),
               .an9fbbc        (os6275f[((8*(hoebf9b+3*`ddr3_ipcore_DQS_WIDTH))+7):(8*(hoebf9b+3*`ddr3_ipcore_DQS_WIDTH))])               );           end         end     end     endgenerate

`endif //ifndef CS_WIDTH_2


`endif //ifndef CS_WIDTH_1







`ifdef ddr3_ipcore_CS_WIDTH_1

assign tjaf829 = (wl_act) ? ph81752 : wlb19ef;
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      sjb155c       <= {(8*`ddr3_ipcore_DQS_WIDTH){1'b0}};   end   else begin
      sjb155c       <= os6275f;   end
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_2

assign tjaf829 = (wl_act) ? ph81752 : 2'b10;
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      sjb155c       <= {(8*`ddr3_ipcore_DQS_WIDTH){1'b0}};   end   else begin   case (tjaf829)
      2'b10 : begin
              sjb155c       <= os6275f[(8*`ddr3_ipcore_DQS_WIDTH)-1 : 0];              end      2'b01 : begin
              sjb155c       <= os6275f[(8*(2*`ddr3_ipcore_DQS_WIDTH))-1 : (8*`ddr3_ipcore_DQS_WIDTH)];              end      default : begin
              sjb155c       <= os6275f[(8*`ddr3_ipcore_DQS_WIDTH)-1 : 0];              end      endcase   end
end

`endif


`ifdef ddr3_ipcore_CS_WIDTH_4

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      sjb155c       <= {(8*`ddr3_ipcore_DQS_WIDTH){1'b0}};   end   else begin   case (tjaf829)
      4'b1110 : begin
              sjb155c       <= os6275f[(8*`ddr3_ipcore_DQS_WIDTH)-1 : 0];              end      4'b1101 : begin
              sjb155c       <= os6275f[(8*(2*`ddr3_ipcore_DQS_WIDTH))-1 : (8*`ddr3_ipcore_DQS_WIDTH)];              end      4'b1011 : begin
              sjb155c       <= os6275f[(8*(3*`ddr3_ipcore_DQS_WIDTH))-1 : (8*(2*`ddr3_ipcore_DQS_WIDTH))];              end      4'b0111 : begin
              sjb155c       <= os6275f[(8*(4*`ddr3_ipcore_DQS_WIDTH))-1 : (8*(3*`ddr3_ipcore_DQS_WIDTH))];              end      default : begin
              sjb155c       <= os6275f[(8*`ddr3_ipcore_DQS_WIDTH)-1 : 0];              end      endcase   end
end

`endif


endmodule








`timescale 1 ns / 100 ps
module qi10f09_ddr3_ipcore (
               sclk,
               rst_n,
               wy34930,
               db27aeb,
               ipf2eaa,
               ntbaaa0,
               al5419f,
               jr67ee,

               an9fbbc
               );
input         sclk;
input         rst_n;
input         wy34930;
input         db27aeb;
input         ipf2eaa;
input         ntbaaa0;
input  [7:0]  al5419f;
input  [7:0]  jr67ee;
output [7:0]  an9fbbc;
reg    [7:0]  an9fbbc;




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      an9fbbc    <= 8'h0;   end   else if (db27aeb && ipf2eaa & ntbaaa0 ) begin
      an9fbbc      <= jr67ee;   end   else if (wy34930 && ipf2eaa & ntbaaa0 ) begin
      an9fbbc      <= al5419f;   end
end






endmodule







`timescale 1 ns / 100 ps
module ddr3_sdram_phy_ddr3_ipcore (
   
   rst_n,				
   sclk,				
   eclk,				
   sclk2x,			
   clocking_good,
   
   ddr_rst,				
   dqsbuf_pause,				
   dqsdel,                              		
   dll_update,
   update_done,


   
   dfi_address, 
   dfi_bank,   
   dfi_cs_n,  
   dfi_ras_n, 
   dfi_cas_n, 
   dfi_we_n,  
   dfi_cke,  
   dfi_odt,		                

   dfi_wrdata,			
   dfi_wrdata_en,		
   dfi_wrdata_mask,

   dfi_rddata,                      
   dfi_rddata_valid,                            

   dfi_init_start,
   dfi_init_complete,

   
   mem_rst_n,
   wl_act,
   wl_err,
   rt_err,
   phy_init_act,
   

`ifdef ddr3_ipcore_WL_DYNDLY
   wl_dyndly,
`endif
`ifdef ddr3_ipcore_PROBE_RT
   rt_start_rvl,
   rt_on_rvl,
   rt_act_rvl,
   rt_wr_rvl,
   rt_rd_rvl,
   rt_rd_a10_rvl,
   rt_pause_rvl,
   rt_done_rvl,
   rt_dqs_read_rvl,
   rt_rdclksel_rvl,
`endif
`ifdef ddr3_ipcore_PROBE_PHY
   ddr3_read_data_o_rvl,
   ddr3_datavalid_o_rvl,
`endif
   
   
   
   
`ifdef ddr3_ipcore_ENB_MEM_RST
   em_ddr_reset_n,
`endif
   em_ddr_addr,
   em_ddr_ba,    				
   em_ddr_ras_n, 			
   em_ddr_cas_n, 			
   em_ddr_we_n,  				
   em_ddr_cs_n,  
   em_ddr_cke,   				
		
   em_ddr_clk,				
   em_ddr_odt,		                
   em_ddr_dm,
   em_ddr_data,				
   em_ddr_dqs				
);

`ifdef ddr3_ipcore_ROW_WIDTH_12

`define ddr3_ipcore_ROW_WDTH 13

`else

`define ddr3_ipcore_ROW_WDTH `ddr3_ipcore_ROW_WIDTH

`endif
input                            rst_n;
input                            sclk;
input                            eclk;
input                            sclk2x;
input                            clocking_good;
input                            ddr_rst;
input                            dqsbuf_pause;
input   [`ddr3_ipcore_DQS_WIDTH-1:0]         dqsdel;
input                            update_done;
output                           dll_update;
input   [`ddr3_ipcore_ROW_WDTH-1:0]          dfi_address;
input   [`ddr3_ipcore_BANK_WIDTH-1:0]        dfi_bank;
input   [`ddr3_ipcore_CS_WIDTH-1:0]          dfi_cs_n;
input                            dfi_ras_n;
input                            dfi_cas_n;
input                            dfi_we_n;
input   [`ddr3_ipcore_CKE_WIDTH -1:0]        dfi_cke;
input   [`ddr3_ipcore_CS_WIDTH -1 :0]        dfi_odt;
input	[`ddr3_ipcore_DSIZE-1:0]             dfi_wrdata;
input         dfi_wrdata_en;
input	[`ddr3_ipcore_USER_DM -1:0]          dfi_wrdata_mask;
output  [`ddr3_ipcore_DSIZE       -1:0]      dfi_rddata;
output                           dfi_rddata_valid;
input                            dfi_init_start;
output                           dfi_init_complete;
input                            mem_rst_n;

`ifdef ddr3_ipcore_ENB_MEM_RST
output                           em_ddr_reset_n;

`endif
output                           wl_act;
output                           wl_err;
output                           rt_err;
output                           phy_init_act;

`ifdef ddr3_ipcore_WL_DYNDLY
output  [8*(`ddr3_ipcore_DQS_WIDTH)-1:0]     wl_dyndly;

`endif
output  [`ddr3_ipcore_ROW_WDTH-1:0]          em_ddr_addr;
output  [`ddr3_ipcore_BANK_WIDTH-1:0]        em_ddr_ba;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [`ddr3_ipcore_CS_WIDTH_BB-1:0]       em_ddr_cs_n;
output  [`ddr3_ipcore_CKE_WIDTH -1:0]        em_ddr_cke;
output	[`ddr3_ipcore_CLKO_WIDTH  -1:0]      em_ddr_clk;
output  [`ddr3_ipcore_CS_WIDTH    -1:0]      em_ddr_odt;
output	[`ddr3_ipcore_DQS_WIDTH -1:0]        em_ddr_dm;
inout	[`ddr3_ipcore_DATA_WIDTH -1:0]       em_ddr_data;
inout	[`ddr3_ipcore_DQS_WIDTH  -1:0]       em_ddr_dqs;

`ifdef ddr3_ipcore_PROBE_RT
output                      rt_start_rvl;
output                      rt_on_rvl;
output                      rt_act_rvl;
output                      rt_wr_rvl;
output                      rt_rd_rvl;
output                      rt_rd_a10_rvl;
output                      rt_pause_rvl;
output                      rt_done_rvl;
output [4 * `ddr3_ipcore_DQS_WIDTH-1:0] rt_dqs_read_rvl;
output [3 * `ddr3_ipcore_DQS_WIDTH-1:0] rt_rdclksel_rvl;

`endif

`ifdef ddr3_ipcore_PROBE_PHY
output [`ddr3_ipcore_DSIZE      -1:0]   ddr3_read_data_o_rvl ;
output [(`ddr3_ipcore_DQS_WIDTH)-1:0]   ddr3_datavalid_o_rvl;

`endif
wire	[`ddr3_ipcore_DSIZE-1:0]             co8de73;
reg                              dll_update ;
reg     [4:0]                    lq5822d;
wire    [`ddr3_ipcore_DSIZE      -1:0]       dfi_rddata;
reg                              dfi_rddata_valid;
reg     [(`ddr3_ipcore_DQS_WIDTH)-1:0]       fc998cb ;
reg     [(`ddr3_ipcore_DQS_WIDTH)-1:0]       czcc65a ;

`ifdef ddr3_ipcore_DLY_DQS_DQ
reg     [(`ddr3_ipcore_DQS_WIDTH)-1:0]       vi632d4  ;
reg     [(`ddr3_ipcore_DQS_WIDTH)-1:0]       fp196a2  ;
wire    [(`ddr3_ipcore_DQS_WIDTH)-1:0]       eacb517  ;
wire    [(`ddr3_ipcore_DQS_WIDTH)-1:0]       rt5a8b9;

`else
wire    [(`ddr3_ipcore_DQS_WIDTH)-1:0]       eacb517  ;

`endif
wire                             hqa2e79 ;

`ifdef ddr3_ipcore_ENB_MEM_RST
wire                             em_ddr_reset_n ;

`endif
wire    [`ddr3_ipcore_BANK_WIDTH   -1:0]     em_ddr_ba;
wire    [`ddr3_ipcore_ROW_WDTH-1:0]          em_ddr_addr;
wire                             em_ddr_ras_n;
wire                             em_ddr_we_n;
wire                             em_ddr_cas_n;
wire    [`ddr3_ipcore_CS_WIDTH_BB -1:0]      em_ddr_cs_n;
wire    [`ddr3_ipcore_CKE_WIDTH  -1:0]       em_ddr_cke;
wire    [`ddr3_ipcore_CLKO_WIDTH -1:0]       em_ddr_clk;

`ifdef ddr3_ipcore_DIFF
wire    [`ddr3_ipcore_CLKO_WIDTH -1:0]       lqd02de;

`endif
wire    [`ddr3_ipcore_CS_WIDTH   -1:0]       em_ddr_odt;
wire	[`ddr3_ipcore_DQS_WIDTH -1:0]        em_ddr_dm;
reg                              jr28771;
wire    [`ddr3_ipcore_BANK_WIDTH   -1:0]     mede79d;
wire    [`ddr3_ipcore_ROW_WDTH-1:0]          hbf3ce8;
wire                             fp9e746;
wire                             dzf3a36;
wire                             wy9d1b6;
wire    [`ddr3_ipcore_CS_WIDTH   -1:0]       mre8db1;
wire    [`ddr3_ipcore_CS_WIDTH   -1:0]       me46d8c;
wire    [`ddr3_ipcore_CKE_WIDTH  -1:0]       ux36c60;
wire    [`ddr3_ipcore_DQS_WIDTH  -1:0]       cob6304;
wire    [`ddr3_ipcore_CLKO_WIDTH -1:0]       uxb1821;
wire    [`ddr3_ipcore_CLKO_WIDTH -1:0]       hq8c10d;
wire   [`ddr3_ipcore_BANK_WIDTH   -1:0]    kd6086a;
wire   [`ddr3_ipcore_ROW_WDTH-1:0]         tw4354;
wire                            wy21aa2;
wire                            mtd510;
wire                            yx6a884;
wire                            kd54425;
wire                            pua212d;
wire                            gq1096a;
wire    [`ddr3_ipcore_CS_WIDTH   -1:0]      hd84b50;
wire    [`ddr3_ipcore_CKE_WIDTH  -1:0]      je25a87;
wire   [`ddr3_ipcore_BANK_WIDTH   -1:0]    nt2d43a;
wire   [`ddr3_ipcore_ROW_WDTH-1:0]         al6a1d7;
wire    [`ddr3_ipcore_CS_WIDTH_BB-1:0]      xj50ebc;
wire    [`ddr3_ipcore_CS_WIDTH_BB-1:0]      ks875e6;
wire    [`ddr3_ipcore_CS_WIDTH   -1:0]      hq3af31;
wire    [`ddr3_ipcore_CKE_WIDTH  -1:0]      jpd798a;
wire                            pf5ac0c;
wire   [`ddr3_ipcore_DATA_WIDTH-1 :0]       fp22221 ;
wire   [`ddr3_ipcore_DQS_WIDTH -1 :0]       ec315ce;
reg    [`ddr3_ipcore_DATA_WIDTH-1 :0]       gd8ae70  ;
wire                            by57384;

`ifdef ddr3_ipcore_PHY_REG_P2
reg                             qib9c22 ;

`else
wire                            qib9c22 ;

`endif
reg                             qt70889;
reg                             db8444d;
reg                             bn2226e;
reg                             zm11376;
reg                             fc89bb3;
wire                            qi156b0;
wire                            phc5a7;
wire   [`ddr3_ipcore_CS_WIDTH -1 :0]        zk766df;
reg                             ukb36fb;
reg                             jr9b7d9;
reg                             godbece;
reg                             nedf671;
reg                             nefb38a;
reg                             ipd9c53;
reg                             ykce29c;
reg    [`ddr3_ipcore_DSIZE-1:0]             vv714e1;
reg    [`ddr3_ipcore_USER_DM -1:0]          mt8a70e;
reg                             ay53875;
reg    [`ddr3_ipcore_DQS_WIDTH-1:0]         ng9c3a9;
reg                             rge1d4b;
reg                             xyea5a;

`ifdef ddr3_ipcore_PHY_REG_P2
reg    [`ddr3_ipcore_DSIZE-1:0]             ip752d2;
reg    [`ddr3_ipcore_USER_DM -1:0]          ksa9694;
reg                             cz4b4a1;
reg    [`ddr3_ipcore_DQS_WIDTH-1:0]         bl5a50d;
reg                             xjd286e;
reg                             rv94377;

`endif
wire   [`ddr3_ipcore_DSIZE-1:0]             uxa1bbf ;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]         wlddfc   ;
wire   [`ddr3_ipcore_USER_DM -1:0]          wjdcefe;
wire   [`ddr3_ipcore_DQS_WIDTH-1:0]         me77f2f;
wire                            tjbf978   ;
wire                            blfcbc6   ;
reg                             ose5e37;
reg                             zm2f1b8;
wire                            me78dc2;

`ifdef ddr3_ipcore_DLY_DQS_DQ
reg   [`ddr3_ipcore_DSIZE      -1:0]        alc6e11  ;
reg   [`ddr3_ipcore_DSIZE      -1:0]        db3708c  ;
wire  [`ddr3_ipcore_DSIZE      -1:0]        bab8467 ;
wire  [`ddr3_ipcore_DSIZE      -1:0]        nrc233a  ;

`else
wire  [`ddr3_ipcore_DSIZE      -1:0]        nrc233a  ;

`endif
reg   [`ddr3_ipcore_DSIZE      -1:0]        xy8ceba ;
wire                            kq675d3;
reg                             tw3ae98;
reg                             bld74c2;
wire  [`ddr3_ipcore_DSIZE      -1:0]        tjba616;
wire                            end30b7;
reg                             ou985bc;
reg                             blc2de1;
wire                            ip655a0;
wire                            kq433c8;
wire                            hbcdfbf;
wire                            of6fdff;
wire                            jp7effd;
wire                            yxf7fee;
wire                            lfbff74;
wire                            meffba6;
wire    [`ddr3_ipcore_BANK_WIDTH -1 :0]     wjfdd30;
wire    [`ddr3_ipcore_BANK_WIDTH -1 :0]     byee985;
wire    [`ddr3_ipcore_ROW_WDTH -1:0]        jp74c2b;
wire    [`ddr3_ipcore_ROW_WDTH -1:0]        wya615f;
wire    [`ddr3_ipcore_CS_WIDTH-1:0]         ls30af8  ;
wire    [`ddr3_ipcore_CS_WIDTH-1:0]         ipd99af ;
wire    [`ddr3_ipcore_CS_WIDTH-1:0]         alccd7c ;
wire    [`ddr3_ipcore_CS_WIDTH-1:0]         jc66be5 ;
wire    [`ddr3_ipcore_CS_WIDTH-1:0]         oh857c3;
wire    [`ddr3_ipcore_CS_WIDTH-1:0]         vxaf95b;
wire    [`ddr3_ipcore_CKE_WIDTH -1:0]       ie2be1c;
wire    [`ddr3_ipcore_CKE_WIDTH -1:0]       nr5f0e1;
wire    [`ddr3_ipcore_CS_WIDTH -1 :0]       off870e;
wire    [`ddr3_ipcore_CS_WIDTH -1 :0]       mrc3874;
wire                            tudf645;

`ifdef ddr3_ipcore_DDR3_2T

`else

`endif
wire [(`ddr3_ipcore_DQS_WIDTH)-1:0]        ux8e62;

`ifdef ddr3_ipcore_NO_WRITE_LEVEL
reg  [8*(`ddr3_ipcore_DQS_WIDTH)-1:0]      czd9153 ;
reg                            jpc8a9d;

`else
wire                           irbb58a;
wire [8*(`ddr3_ipcore_DQS_WIDTH)-1:0]      czd9153 ;
wire                            jpc8a9d;

`endif
reg  [`ddr3_ipcore_DQS_WIDTH-1:0]  ou9df91;
reg                    uiefc88;
wire                   fn7e441;
wire                   anbb332;
wire                   ipd9995;
wire                   alcccac;
reg                    mr41f78;
wire [`ddr3_ipcore_CS_WIDTH-1:0]   ps57666;
wire [`ddr3_ipcore_BANK_WIDTH-1:0] jc66565;
wire [`ddr3_ipcore_ROW_WIDTH-1:0]  nt32b2a ;
wire [`ddr3_ipcore_CKE_WIDTH -1:0] an95956;
wire [`ddr3_ipcore_CS_WIDTH-1:0]   vic5041;
wire [`ddr3_ipcore_ROW_WDTH-1:0]   ph2820a;
wire [`ddr3_ipcore_BANK_WIDTH-1:0] qt41057;
wire [`ddr3_ipcore_CKE_WIDTH -1:0] an82bc;
wire                   gb415e4;
wire                   wyaf24;
wire                   zk57920;
wire [`ddr3_ipcore_CS_WIDTH-1:0]   ecbc903;
wire [`ddr3_ipcore_CS_WIDTH-1 :0]  nee4819;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]  qi240ca;
wire                   tw20651;
wire                   tj328b;
wire                   db1945f;
wire                   psca2ff;
wire                   al517fb;
reg                    jcda34f ;
wire                   init_start;
wire                   wl_act;
wire                   wl_done;
wire                   fp22f48;
reg                    je996aa;
wire                   ofd62ab;
wire                   dfi_init_complete;
reg                    zkcacc8;
reg                    ie31859  ;
reg                    phy_init_act  ;
wire                   tw99081;
wire                   pfc840b;
wire                   vi4205e;
reg                    qi102f3;
reg                    nt81799;
reg                    babcce;
reg                    of5e672;
reg                    xjf3394;
reg                    fc99ca7;
reg                    ayce53a;
reg                    ic729d1;
reg                    nt94e88;
reg                    jea7446;
reg                    ls3a232;
reg                    qgd1193;
wire                   ks88c99;
reg                    kq464c9;
reg                    jr32649;
reg                    xy9324f;
reg                    ls9927a;
reg                    czc93d3;
reg                    ui49e9c;
reg                    pf4f4e1;
wire                   cal_bc4;
wire                   ipd387d;
reg [`ddr3_ipcore_DQS_WIDTH-1:0]   zm9c3ed;
reg                    jce1f6b;
reg                    ksfb5a;
wire                  fpaa935;
reg                   ened681;
reg                   hb6b40d;
reg                   bl5a06e;
wire                  vid0376;
wire                  bn81bb3;
reg                   ohdd9f;
wire [`ddr3_ipcore_CS_WIDTH-1 :0] th6ecfd;
wire [`ddr3_ipcore_CS_WIDTH-1 :0] vi767ef;
reg  [`ddr3_ipcore_CS_WIDTH-1 :0] oub3f7b;
reg  [`ddr3_ipcore_CS_WIDTH-1 :0] ir9fbd8;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]     lf91136;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]     wy889b7;
wire [3*(`ddr3_ipcore_DQS_WIDTH)-1:0] en44db9;
wire [3*(`ddr3_ipcore_DQS_WIDTH)-1:0] mt26dcd;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]     oh36e6d;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]     faf47c6  ;
wire                      wwde307;
wire                      xw47cf8;
wire                      lf386a5;
wire                      zxf3e11;
wire                      hof1838;
reg                       czf8474;
reg                       vvc23a4;
reg                       ri11d27;
reg                       rv8e93a;
reg                       nr749d6;
reg                       epa4eb7;
reg                       zz275bc;
reg                       je3ade6;
reg                       yxd6f32;
wire                      hq8c1c3;
wire                      kd60e1a;
wire                      ux70d4;
wire [4 * `ddr3_ipcore_DQS_WIDTH-1:0] nt32a8e ;
wire [4 * `ddr3_ipcore_DQS_WIDTH-1:0] rt_dqs_read_rvl ;
wire [3 * `ddr3_ipcore_DQS_WIDTH-1:0] phaa3b5 ;
wire [3 * `ddr3_ipcore_DQS_WIDTH-1:0] rt_rdclksel_rvl ;
wire                      db8ed74;
wire                      dm76ba6;
wire                      zzb5d32;
reg                       wlae997;
reg                       vv74cbd;
reg                       oua65ef;
wire                      bn32f78;
wire [`ddr3_ipcore_DQS_WIDTH-1:0]     gq97bc6;
wire                      jebde31 ;

`ifdef ddr3_ipcore_PROBE_RT
reg                      rt_start_rvl;
reg                      rt_on_rvl;
reg                      rt_act_rvl;
reg                      rt_wr_rvl;
reg                      rt_rd_rvl;
reg                      rt_rd_a10_rvl;
reg                      rt_pause_rvl;
reg                      rt_done_rvl;

`endif
reg   [`ddr3_ipcore_DSIZE      -1:0] ddr3_read_data_o_rvl ;
reg   [(`ddr3_ipcore_DQS_WIDTH)-1:0] ddr3_datavalid_o_rvl ;

`ifdef ddr3_ipcore_PROBE_RT

`endif

`define ddr3_ipcore_TSTAB1 `ddr3_ipcore_TSTAB/6

`define ddr3_ipcore_USR_RST_CLK_CNT 8'd20   // 20 x 5ns = 100 ns
reg                   sw3b303;
reg                   wjd9819;
reg    [7:0]          ipcc0cc;

`ifdef ddr3_ipcore_ENB_MEM_RST

`endif

`ifdef ddr3_ipcore_RDIMM
reg  [7:0]  sh60664;
reg  [2:0]  lf3325;
reg         rv1992f;
wire        uvcc97e;

`ifdef ddr3_ipcore_REGRESSION 

`else

`endif

`else
wire   rv1992f;

`endif

`ifdef ddr3_ipcore_NO_RD_TRAIN

`else

`endif

`ifdef ddr3_ipcore_NO_RD_TRAIN

`else

`endif

`ifdef ddr3_ipcore_DESEL

`else

`endif

`define ddr3_ipcore_P_MRS 4'h0

`define ddr3_ipcore_P_REF 4'h1

`define ddr3_ipcore_P_WRITE 4'h4

`define ddr3_ipcore_P_READ 4'h5
reg [3:0] hq25fae;
reg [1:0] vk2fd72;
reg [2:0] nr7eb93;
reg [1:0] cmf5c9e;
reg       pio_read;
reg       yk7278c;
reg       ng93c61;
wire  ph9e30b;
wire  dmf185e;
reg   ba8c2f3;
reg   pf6179a;
reg   lsbcd7;
reg   qt5e6ba;
reg   nrf35d4;
reg   ep9aea7;
reg   zxd753d;
wire [3:0]    dbba9ee;
wire          ayd4f76;
wire          ddr_wr_lat_odd;
wire          rv3dd83;
wire          neeec1f;
reg           zk760fb;
reg           xlb07db;
wire          ba83ede;
wire          ie1f6f2;
wire          zkfb790;
reg           ykdbc83;
reg           ayde419;
reg           off20c8;
reg           mt90645;
reg           fc8322d;
reg           vx1916b;
reg           fnc8b5f;
reg  [3:0]    zx45aff;
reg  [3:0]    zz2d7ff;
reg  [3:0]    th6bfff;
reg  [3:0]    xj5ffff;
wire [31:0]   sufffff;
wire [31:0]   qgffff8;
wire [31:0]   ayfffc0;
wire [31:0]   cmffe00;
reg suff000;
reg wjf8001;
reg xwc000c;
reg co62;

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`ifdef ddr3_ipcore_ADDR_MIRROR

`ifdef ddr3_ipcore_CS_WIDTH_2

`else

`endif

`else

`endif

`ifdef ddr3_ipcore_RDIMM1
reg     qi310;

`else
wire    qi310;

`endif

`ifdef ddr3_ipcore_PHY_REG_P2

`else

`endif
reg   zzc403;
reg   ww6201e;
reg   ks100f0;
wire  jrbf37e;
wire  bn3c0c;

`ifdef ddr3_ipcore_DATA_SIZE_72

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else // x8

`endif // x4 

`endif

`ifdef ddr3_ipcore_DATA_SIZE_64  

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_56

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_48

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_40

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_32

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_24

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_16

`ifdef ddr3_ipcore_x4

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ipcore_DATA_SIZE_8

`ifdef ddr3_ipcore_x4

`else

`endif

`endif

`ifdef ddr3_ipcore_PHY_REG_P2

`endif
wire                  hb4f402 ;
wire [`ddr3_ipcore_CS_WIDTH-1:0]  ph81752;
wire                  wl_err  ;
wire                  rt_err  ;
wire                  gd398ab;
wire                  fc302ea;
wire                  zm11cc;
wire [`ddr3_ipcore_CS_WIDTH-1:0]  riba96;
wire                  xwe40df;
wire                  xy206fb;
wire                  zz37db;
wire                  xy1bedf;
wire                  tudf6fb;
wire                  jcfb7da;
wire                  aydbed3;
wire                  rgdf699;
wire                  tuf1b3a;
wire                  vx948e7;
wire                  ec31407;
wire [15:0]           wy15761;

`ifdef ddr3_ipcore_WL_DYNDLY
reg  [8*(`ddr3_ipcore_DQS_WIDTH)-1:0]      wl_dyndly ;

`endif

`ifdef ddr3_ipcore_NO_WRITE_LEVEL

`ifdef ddr3_ipcore_ECP5_PV_RIGHT_32B

`else

`endif

`else
reg   [2:0]             uk3e21d;
reg   [2:0]             lqf10e9;


`endif

`ifdef ddr3_ipcore_NO_RD_TRAIN

`else

wire  [`ddr3_ipcore_DSIZE -1:0] ie8874a;

`ifdef ddr3_ipcore_DATA_SIZE_8

`endif

`ifdef ddr3_ipcore_DATA_SIZE_16

`endif

`ifdef ddr3_ipcore_DATA_SIZE_24

`endif

`ifdef ddr3_ipcore_DATA_SIZE_32

`endif

`ifdef ddr3_ipcore_DATA_SIZE_40

`endif

`ifdef ddr3_ipcore_DATA_SIZE_48

`endif

`ifdef ddr3_ipcore_DATA_SIZE_56

`endif

`ifdef ddr3_ipcore_DATA_SIZE_64

`endif

`ifdef ddr3_ipcore_DATA_SIZE_72

`endif

`ifdef ddr3_ipcore_x4
genvar qg43a50;


`else
genvar qg43a50;


`endif

`endif

wire          the9405;
wire  [15:0]  xj4a02f;



`ifdef ddr3_ipcore_DLY_DQS_DQ

`else

`endif



`ifdef ddr3_ipcore_DLY_DQS_DQ

`else

`endif

`ifdef ddr3_ipcore_DLY_DQS_DQ
reg          nr5017f;
wire         oh80bff;
wire [31:0]  mg5ffd;

`endif
wire   xy2ffe9   ;
wire   cz7ff4b  ;

`ifdef ddr3_ipcore_x4
genvar suffa5c;


`else
genvar suffa5c;


`endif
genvar  the9704;

genvar wj4b827;


wire  yk5c13c;

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`ifdef ddr3_ipcore_RDIMM

`else

`endif



`ifdef ddr3_ipcore_RDIMM

`else

`endif

`ifdef ddr3_ipcore_DESEL
reg         aye09e1;
reg         ri4f08;
reg         nt27843;
reg         wl3c21f;

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif

`else

`endif
genvar  xwe10fc;

genvar  qv771f;

genvar  os43f1c;

genvar  ie1f8e0;

genvar  fnfc701;





`ifdef ddr3_ipcore_RDIMM

`ifdef ddr3_ipcore_CS_WIDTH_1

`else

`endif

`else

`endif
genvar the380e;















`ifdef ddr3_ipcore_ROW_WIDTH_12


`define ddr3_ipcore_ROW_WDTH 13


`else


`define ddr3_ipcore_ROW_WDTH `ddr3_ipcore_ROW_WIDTH


`endif
























`ifdef ddr3_ipcore_ENB_MEM_RST



`endif



`ifdef ddr3_ipcore_WL_DYNDLY


`endif
   














`ifdef ddr3_ipcore_PROBE_RT


`endif


`ifdef ddr3_ipcore_PROBE_PHY


`endif






`ifdef ddr3_ipcore_DLY_DQS_DQ


`else


`endif



`ifdef ddr3_ipcore_ENB_MEM_RST


`endif


`ifdef ddr3_ipcore_DIFF


`endif



`ifdef ddr3_ipcore_PHY_REG_P2


`else


`endif


`ifdef ddr3_ipcore_PHY_REG_P2


`endif


`ifdef ddr3_ipcore_DLY_DQS_DQ


`else


`endif



`ifdef ddr3_ipcore_DDR3_2T
 assign  qi156b0 = 1'b1;

`else
 assign  qi156b0 = 1'b0;

`endif


`ifdef ddr3_ipcore_NO_WRITE_LEVEL


`else


`endif






assign jebde31 = ~rst_n;


`ifdef ddr3_ipcore_PROBE_RT


`endif




`ifdef ddr3_ipcore_PROBE_RT

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin       rt_start_rvl    <= 1'b0;       rt_on_rvl       <= 1'b0;       rt_act_rvl      <= 1'b0;       rt_wr_rvl       <= 1'b0;       rt_rd_rvl       <= 1'b0;       rt_rd_a10_rvl   <= 1'b0;       rt_pause_rvl    <= 1'b0;       rt_done_rvl     <= 1'b1;    end    else begin       rt_start_rvl    <= xw47cf8;       rt_on_rvl       <= wwde307;       rt_act_rvl      <= lf386a5;       rt_wr_rvl       <= hof1838;       rt_rd_rvl       <= hq8c1c3;       rt_rd_a10_rvl   <= ux70d4;       rt_pause_rvl    <= db8ed74;       rt_done_rvl     <= zzb5d32;    end
end

`endif


always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin       ddr3_read_data_o_rvl <= {`ddr3_ipcore_DSIZE{1'b0}};       ddr3_datavalid_o_rvl <= {`ddr3_ipcore_DQS_WIDTH{1'b1}};    end    else begin       ddr3_read_data_o_rvl <= xy8ceba;       ddr3_datavalid_o_rvl <= fc998cb;    end
end




`define ddr3_ipcore_TSTAB1 `ddr3_ipcore_TSTAB/6






`define ddr3_ipcore_USR_RST_CLK_CNT 8'd20   // 20 x 5ns = 100 ns

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      wjd9819 <= 1'b0;   else      wjd9819 <= mem_rst_n;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ipcc0cc <= 8'h0;   else if (ipcc0cc == `ddr3_ipcore_USR_RST_CLK_CNT - 1)      ipcc0cc <= 8'h0;   else if ((!mem_rst_n && wjd9819) || |(ipcc0cc) )      ipcc0cc <= ipcc0cc + 1;   else      ipcc0cc <= ipcc0cc;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      sw3b303 <= 1'b0;   else if (clocking_good)      sw3b303 <= 1'b1;
end
assign hqa2e79    = rst_n & mem_rst_n & ~|(ipcc0cc) & sw3b303;

`ifdef ddr3_ipcore_ENB_MEM_RST

assign em_ddr_reset_n = hqa2e79;

`endif




`ifdef ddr3_ipcore_RDIMM


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      sh60664 <= 8'h0;   else if (uvcc97e || rv1992f)      sh60664 <= 8'h0;   else if (hqa2e79)      sh60664 <= sh60664 + 1;
end

`ifdef ddr3_ipcore_REGRESSION 
  assign uvcc97e = (sh60664 == 9'd40);

`else
  assign uvcc97e = (sh60664 == `ddr3_ipcore_TSTAB1);

`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      lf3325 <= 3'd0;   else if (rv1992f)      lf3325 <= 3'd0;   else if (uvcc97e)      lf3325 <= lf3325 + 1;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      rv1992f <= 1'b0;   else if (!hqa2e79)      rv1992f <= 1'b0;   else if (lf3325 == 3'd6)      rv1992f <= 1'b1;
end

`else

assign rv1992f = 1'b1;

`endif


always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin      ened681   <= 1'b1;   end   else if (dfi_init_start) begin      ened681   <= 1'b0;   end
end
always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin      hb6b40d   <= 1'b1;      bl5a06e  <= 1'b1;      je996aa     <= 1'b0;   end   else  begin      hb6b40d   <= ened681;      bl5a06e  <= hb6b40d;      je996aa     <= wl_done;   end
end
assign co8de73 = (ie31859) ? {`ddr3_ipcore_DQS_WIDTH{32'h87654321}} : dfi_wrdata;

assign  cal_bc4 = pf4f4e1;

`ifdef ddr3_ipcore_NO_RD_TRAIN

assign  dfi_init_complete = wl_done;

`else

assign  dfi_init_complete = zzb5d32;  

`endif

always @(posedge sclk or negedge rst_n) begin   if(!rst_n)        zkcacc8   <= 1'b0;   else        zkcacc8   <= dfi_init_start & rv1992f & clocking_good;
end

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        ie31859      <= 1'b0;        phy_init_act     <= 1'b0;    end    else if (dfi_init_start && !zkcacc8) begin        ie31859      <= 1'b1;        phy_init_act     <= 1'b1;    end

`ifdef ddr3_ipcore_NO_RD_TRAIN
    else if (wl_done) begin        ie31859      <= 1'b0;        phy_init_act     <= 1'b0;    end

`else
    else if (zzb5d32) begin             ie31859      <= 1'b0;        phy_init_act     <= 1'b0;    end

`endif

end
assign init_start    = zkcacc8 & ~wl_act & ~wl_done & ~zzb5d32 ;  

`ifdef ddr3_ipcore_DESEL

assign ecbc903      = (ie31859) ? ps57666  : (dfi_cs_n | {`ddr3_ipcore_CS_WIDTH{(dfi_ras_n & dfi_cas_n & dfi_we_n)}});

`else

assign ecbc903      = (ie31859) ? ps57666  : dfi_cs_n;

`endif

assign an82bc       = (ie31859) ? an95956   : dfi_cke;
assign ph2820a      = (ie31859) ? nt32b2a  : dfi_address;
assign qt41057        = (ie31859) ? jc66565    : dfi_bank;
assign gb415e4     = (ie31859) ? anbb332 : dfi_ras_n;
assign wyaf24     = (ie31859) ? ipd9995 : dfi_cas_n;
assign zk57920      = (ie31859) ? alcccac  : dfi_we_n;
assign nee4819       = (ie31859) ? (vic5041 | bn32f78) : vi767ef;
assign db1945f = (ie31859) ? ip655a0 : psca2ff;
assign qi240ca    = (ie31859 && !wwde307) ? ou9df91    : zm9c3ed;  
assign tw20651   = (ie31859 && !wwde307) ? uiefc88 : jce1f6b;  
assign tj328b = (ie31859 && !wwde307) ? fn7e441 : ksfb5a;  
assign   ipd387d = (wwde307) ? ~mr41f78 : ~dfi_wrdata_en;  








`define ddr3_ipcore_P_MRS 4'h0


`define ddr3_ipcore_P_REF 4'h1


`define ddr3_ipcore_P_WRITE 4'h4


`define ddr3_ipcore_P_READ 4'h5

assign  sufffff  =  `ddr3_ipcore_MRS0_INIT;
assign  qgffff8  =  `ddr3_ipcore_MRS1_INIT;
assign  ayfffc0  =  `ddr3_ipcore_MRS2_INIT;
assign  cmffe00  =  `ddr3_ipcore_MRS3_INIT;
assign     rv3dd83 = (dbba9ee == `ddr3_ipcore_P_READ || yxd6f32)  ? yk7278c : 1'b0;
assign     ie1f6f2       = (dbba9ee == `ddr3_ipcore_P_READ || yxd6f32)  ? 1'b1 : 1'b0;
assign     ba83ede      = (dbba9ee == `ddr3_ipcore_P_REF)  ? 1'b1 : 1'b0;

assign     neeec1f = (dbba9ee == `ddr3_ipcore_P_WRITE || czf8474) ? ng93c61 : 1'b0;  
assign     zkfb790       = (dbba9ee == `ddr3_ipcore_P_WRITE || czf8474) ? 1'b1 : 1'b0;             

assign   tw99081    = (ykdbc83 | ayde419 | (~cal_bc4 & off20c8) );
assign   pfc840b   = ~(ayde419 | off20c8 | (~cal_bc4 & mt90645));
assign   vi4205e = ~(ayde419 | (~cal_bc4 & off20c8));










always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        suff000     <= 1'b0;    end    else begin        if (ba83ede) begin            suff000     <= 1'b1;        end        else begin        if (update_done == 1'b1)            suff000  <= 1'b0;        end    end
end

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        wjf8001     <= 1'b0;        xwc000c     <= 1'b0;        co62     <= 1'b0;        dll_update       <= 1'b0;    end    else begin        if (update_done == 1'b1) begin            wjf8001     <= 1'b0;            xwc000c     <= 1'b0;            co62     <= 1'b0;            dll_update       <= 1'b0;      end      else begin            wjf8001     <= suff000;            xwc000c     <= wjf8001;            co62     <= xwc000c;            dll_update       <= co62;      end    end
end





assign bn81bb3  =  (cmf5c9e == 2'b00) ? 1'b0 : (cmf5c9e == 2'b10) ? 1'b1 : ~dfi_address[12];
assign vid0376    = (wwde307) ? 1'b0 : bn81bb3;  

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ohdd9f  <= 1'b0;
   else if (!dfi_cas_n || wwde307)      ohdd9f  <= vid0376;
end
assign ks88c99  = (dfi_cas_n) ? ohdd9f : vid0376 ;

assign th6ecfd = (!dfi_cas_n) ? dfi_odt : {`ddr3_ipcore_CS_WIDTH{1'b0}};
assign vi767ef = th6ecfd | oub3f7b | ir9fbd8;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      kq464c9  <= 1'b0;      jr32649  <= 1'b0;      xy9324f  <= 1'b0;      ls9927a  <= 1'b0;      czc93d3  <= 1'b0;      ui49e9c  <= 1'b0;      oub3f7b   <= {`ddr3_ipcore_CS_WIDTH{1'b0}};      ir9fbd8  <= {`ddr3_ipcore_CS_WIDTH{1'b0}};      czf8474    <= 1'b0;      vvc23a4  <= 1'b0;      ri11d27   <= 1'b0;      rv8e93a   <= 1'b0;      nr749d6   <= 1'b0;      epa4eb7   <= 1'b0;      zz275bc   <= 1'b0;      je3ade6   <= 1'b0;   end   else begin      kq464c9  <= ks88c99;      jr32649  <= kq464c9;      xy9324f  <= jr32649;      ls9927a  <= xy9324f;      czc93d3  <= ls9927a;      ui49e9c  <= czc93d3;      oub3f7b   <= th6ecfd;      ir9fbd8  <= (ohdd9f) ? {`ddr3_ipcore_CS_WIDTH{1'b0}}  : oub3f7b;      czf8474    <= hof1838;      vvc23a4  <= czf8474;      ri11d27   <= (ohdd9f) ? czf8474 : (czf8474 | vvc23a4);            rv8e93a   <= ri11d27;      nr749d6   <= rv8e93a;      epa4eb7   <= nr749d6;      zz275bc   <= epa4eb7;      je3ade6   <= zz275bc;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zk760fb <= 1'b0;      xlb07db <= 1'b0;      ykdbc83      <= 1'b0;      ayde419      <= 1'b0;      off20c8      <= 1'b0;      mt90645      <= 1'b0;      fc8322d      <= 1'b0;      vx1916b      <= 1'b0;      fnc8b5f      <= 1'b0;   end   else begin      zk760fb <= rv3dd83;      xlb07db <= neeec1f;      ykdbc83      <= zkfb790;      ayde419      <= ykdbc83;      off20c8      <= ayde419;      mt90645      <= off20c8;      fc8322d      <= mt90645;      vx1916b      <= fc8322d;      fnc8b5f      <= vx1916b;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      qi102f3      <= 1'b0;      nt81799      <= 1'b0;      babcce      <= 1'b0;      of5e672      <= 1'b0;      nt94e88     <= 1'b1;      jea7446     <= 1'b1;      ls3a232     <= 1'b1;      qgd1193     <= 1'b1;      xjf3394       <= 1'b1;
      fc99ca7       <= 1'b1;
      ayce53a       <= 1'b1;
      ic729d1       <= 1'b1;
   end   else begin      qi102f3   <= (ykdbc83 | ayde419 | (~cal_bc4 & off20c8) );      nt81799   <= (ayde419 | off20c8 | (~cal_bc4 & mt90645) );      babcce   <= (off20c8 | mt90645 | (~cal_bc4 & fc8322d) );      of5e672   <= (mt90645 | fc8322d | (~cal_bc4 & vx1916b) );
      xjf3394   <= ~(ayde419 | off20c8 | (~cal_bc4 & mt90645));      fc99ca7   <= ~(off20c8 | mt90645 | (~cal_bc4 & fc8322d));      ayce53a   <= ~(mt90645 | fc8322d | (~cal_bc4 & vx1916b));      ic729d1   <= ~(fc8322d | vx1916b | (~cal_bc4 & fnc8b5f));      nt94e88 <= ~(ayde419 | (~cal_bc4 & off20c8));      jea7446 <= ~(off20c8 | (~cal_bc4 & mt90645));      ls3a232 <= ~(mt90645 | (~cal_bc4 & fc8322d));      qgd1193 <= ~(fc8322d | (~cal_bc4 & vx1916b));
   end
end


assign  ayd4f76 = rv3dd83 | zk760fb;
assign  ddr_wr_lat_odd = neeec1f | xlb07db;

`ifdef ddr3_ipcore_CS_WIDTH_2

assign  dbba9ee = {&(dfi_cs_n),dfi_ras_n,dfi_cas_n,dfi_we_n};

`else

assign  dbba9ee = {dfi_cs_n,dfi_ras_n,dfi_cas_n,dfi_we_n};

`endif


`ifdef ddr3_ipcore_ADDR_MIRROR
  
`ifdef ddr3_ipcore_CS_WIDTH_2
    assign psca2ff = ~(dfi_cs_n[1] | dfi_ras_n | dfi_cas_n |dfi_we_n);  
`else
    assign psca2ff = 1'b0;  
`endif


`else
 assign psca2ff = 1'b0;

`endif





always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      hq25fae   <= 'd0;      vk2fd72    <= 'd0;      nr7eb93   <= 'd0;      cmf5c9e   <= 'd0;   end   else if (tudf645) begin      hq25fae   <= {sufffff[6],sufffff[5],sufffff[4],sufffff[2]};      vk2fd72    <= {qgffff8[4],qgffff8[3]};      nr7eb93   <= {ayfffc0[5],ayfffc0[4],ayfffc0[3]};      cmf5c9e    <= {sufffff[1],sufffff[0]};   end   else if ((dbba9ee == `ddr3_ipcore_P_MRS) & dfi_bank == 3'h0) begin      hq25fae   <= {dfi_address[6],dfi_address[5],dfi_address[4],dfi_address[2]};      cmf5c9e    <= {dfi_address[1],dfi_address[0]};   end   else if ((dbba9ee == `ddr3_ipcore_P_MRS) & dfi_bank == 3'h1)      vk2fd72    <= {dfi_address[4],dfi_address[3]};   else if ((dbba9ee == `ddr3_ipcore_P_MRS) & dfi_bank == 3'h2)      nr7eb93   <= {dfi_address[5],dfi_address[4],dfi_address[3]};
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zx45aff <= 4'h0;   end   else begin      case (hq25fae)       4'b0010 : zx45aff <= 4'd5;       4'b0100 : zx45aff <= 4'd6;       4'b0110 : zx45aff <= 4'd7;       4'b1000 : zx45aff <= 4'd8;       4'b1010 : zx45aff <= 4'd9;       4'b1100 : zx45aff <= 4'd10;       default : zx45aff <= 4'd5;      endcase   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zz2d7ff <= 4'h0;   end   else begin      case (nr7eb93)       3'b000 : zz2d7ff <= 4'h5;       3'b001 : zz2d7ff <= 4'h6;       default: zz2d7ff <= 4'h5;      endcase   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      xj5ffff <= 4'h0;      th6bfff <= 4'h0;   end   else begin      case (vk2fd72)       2'b00 :begin              xj5ffff <= zz2d7ff;              th6bfff <= zx45aff;              end       2'b01 :begin              xj5ffff <= zz2d7ff + zx45aff - 1;              th6bfff <= zx45aff + zx45aff - 1;              end       2'b10 :begin              xj5ffff <= zz2d7ff  + zx45aff - 2;              th6bfff <= zx45aff + zx45aff - 2;              end       default:begin              xj5ffff <= zz2d7ff;              th6bfff <= zx45aff;              end      endcase   end
end


assign ph9e30b = (dbba9ee == `ddr3_ipcore_P_READ) ? ~dfi_cas_n : 1'b0;
assign dmf185e = (wwde307) ? yxd6f32 :  ph9e30b;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      yxd6f32 <= 1'b0;      ba8c2f3 <= 1'b0;      pf6179a <= 1'b0;      lsbcd7 <= 1'b0;      qt5e6ba <= 1'b0;      nrf35d4 <= 1'b0;      ep9aea7 <= 1'b0;      zxd753d <= 1'b0;   end   else begin      yxd6f32 <= hq8c1c3;      ba8c2f3 <= dmf185e;      pf6179a <= ba8c2f3;      lsbcd7 <= pf6179a;      qt5e6ba <= lsbcd7;      nrf35d4 <= qt5e6ba;      ep9aea7 <= nrf35d4;      zxd753d <= ep9aea7;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      pio_read        <= 1'b0;      yk7278c <= 1'b0;      pf4f4e1     <= 1'b0;   end   else begin   case (th6bfff)          4'd5 : begin                                     pio_read        <= pf6179a;                      yk7278c <= 1'b1;                        pf4f4e1     <= ks88c99;                 end          4'd6 : begin                                                      pio_read        <= pf6179a;                      yk7278c <= 1'b0;                        pf4f4e1     <= ks88c99;                 end          4'd7 : begin                 pio_read        <= lsbcd7;                 yk7278c <= 1'b1;                 pf4f4e1     <= kq464c9;                 end          4'd8 : begin                 pio_read        <= lsbcd7;                 yk7278c <= 1'b0;                 pf4f4e1     <= kq464c9;                 end          4'd9 : begin                 pio_read        <= qt5e6ba;                 yk7278c <= 1'b1;                 pf4f4e1     <= kq464c9;                 end         4'd10 : begin                 pio_read        <= qt5e6ba;                 yk7278c <= 1'b0;                 pf4f4e1     <= kq464c9;                 end         4'd11 : begin                 pio_read        <= nrf35d4;                 yk7278c <= 1'b1;                 pf4f4e1     <= jr32649;                 end         4'd12 : begin                 pio_read        <= nrf35d4;                 yk7278c <= 1'b0;                 pf4f4e1     <= jr32649;                 end         4'd13 : begin                 pio_read        <= ep9aea7;                 yk7278c <= 1'b1;                 pf4f4e1     <= xy9324f;                 end         4'd14 : begin                 pio_read        <= ep9aea7;                 yk7278c <= 1'b0;                 pf4f4e1     <= xy9324f;                 end         4'd15 : begin                 pio_read        <= zxd753d;                 yk7278c <= 1'b1;                 pf4f4e1     <= ls9927a;                 end       default : begin                 pio_read        <= dmf185e;                 yk7278c <= 1'b0;                 pf4f4e1     <= 1'b0;                 end   endcase   end
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ng93c61 <= 1'b0;      zm9c3ed      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      ksfb5a     <= 1'b1;      jce1f6b       <= 1'b1;      mr41f78    <= 1'b0;   end   else begin   case (xj5ffff)          4'd5 : begin                    ng93c61 <= 1'b1;                  zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{tw99081}};                 ksfb5a    <= vi4205e;                 jce1f6b      <= pfc840b;                 mr41f78   <= rv8e93a;                 end          4'd6 : begin                    ng93c61 <= 1'b0;                  zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{tw99081}};                 ksfb5a    <= vi4205e;                 jce1f6b      <= pfc840b;                 mr41f78   <= rv8e93a;                 end            4'd8 : begin                    ng93c61 <= 1'b0;                 zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{qi102f3}};                 ksfb5a    <= nt94e88;                 jce1f6b      <= xjf3394;                 mr41f78   <= nr749d6;                 end          4'd9 : begin                    ng93c61 <= 1'b1;                 zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{nt81799}};                 ksfb5a    <= jea7446;                 jce1f6b      <= fc99ca7;                 mr41f78   <= epa4eb7;                 end         4'd10 : begin                    ng93c61 <= 1'b0;                 zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{nt81799}};                 ksfb5a    <= jea7446;                 jce1f6b      <= fc99ca7;                 mr41f78   <= epa4eb7;                 end         4'd11 : begin                    ng93c61 <= 1'b1;                 zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{babcce}};                 ksfb5a    <= ls3a232;                 jce1f6b      <= ayce53a;                 mr41f78   <= zz275bc;                 end         4'd12 : begin                    ng93c61 <= 1'b0;                 zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{babcce}};                 ksfb5a    <= ls3a232;                 jce1f6b      <= ayce53a;                 mr41f78   <= zz275bc;                 end         4'd13 : begin                    ng93c61 <= 1'b1;                 zm9c3ed     <= {`ddr3_ipcore_DQS_WIDTH{of5e672}};                 ksfb5a    <= qgd1193;                 jce1f6b      <= ic729d1;                 mr41f78   <= je3ade6;                 end       default : begin                 ng93c61  <= 1'b0;                 zm9c3ed      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};                 ksfb5a     <= 1'b1;                 jce1f6b       <= 1'b1;                 mr41f78    <= 1'b0;                 end   endcase   end
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      blc2de1 <= 1'b0;      else if (zm11376 && !wwde307)      blc2de1 <= 1'b1;
end

`ifdef ddr3_ipcore_RDIMM1

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      qi310 <= 1'b0;   else      qi310 <= pio_read;
end

`else

assign  qi310 = pio_read;

`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zm11376    <= 1'b0;      fc89bb3   <= 1'b0;      ukb36fb     <= 1'b0;      jr9b7d9    <= 1'b0;      godbece    <= 1'b0;      nedf671    <= 1'b0;      nefb38a    <= 1'b0;      ipd9c53    <= 1'b0;   end   else begin      zm11376    <= qi310;      fc89bb3   <= zm11376;      ukb36fb     <= cal_bc4;      jr9b7d9    <= ukb36fb;      godbece    <= jr9b7d9;      nedf671    <= godbece;      nefb38a    <= nedf671;      ipd9c53    <= nefb38a;   end
end

`ifdef ddr3_ipcore_PHY_REG_P2

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      qib9c22   <= 1'b0;   else      qib9c22   <= (cal_bc4) ? qi310 : (qi310 & !zm11376 & !fc89bb3);
end

`else

assign qib9c22 = (cal_bc4) ? qi310 : (qi310 & !zm11376 & !fc89bb3);

`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ykce29c <= 1'b0;   else if (gb415e4 && !wyaf24 && zk57920 )      ykce29c <= ayd4f76;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zzc403  <= 1'b0;      ww6201e <= 1'b0;      ks100f0 <= 1'b0;   end   else begin      zzc403  <= zk57920;      ww6201e <= wyaf24;      ks100f0 <= gb415e4;   end
end

assign jrbf37e  =  (ddr_wr_lat_odd) ? 1'b0 : ((~zk57920 & ~wyaf24 & gb415e4)  | (~zzc403 & ~ww6201e & ks100f0));
assign bn3c0c =  (ng93c61) ? 1'b0 : (~zk57920 | ~zzc403 | ~gb415e4 | ~ks100f0);




always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      gd8ae70   <= {`ddr3_ipcore_DATA_WIDTH{1'b0}};   else      gd8ae70   <= fp22221;
end

`ifdef ddr3_ipcore_DATA_SIZE_72


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign   ec315ce = {|(gd8ae70[71:68]), |(gd8ae70[63:60]), |(gd8ae70[55:52]),                           |(gd8ae70[47:44]), |(gd8ae70[39:36]), |(gd8ae70[31:28]),                           |(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                           |(gd8ae70[67:64]), |(gd8ae70[59:56]), |(gd8ae70[51:48]),                           |(gd8ae70[43:40]), |(gd8ae70[35:32]), |(gd8ae70[27:24]),                           |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign   ec315ce = {|(gd8ae70[71:68]), |(gd8ae70[67:64]),                           |(gd8ae70[63:60]), |(gd8ae70[59:56]), |(gd8ae70[55:52]), |(gd8ae70[51:48]),                           |(gd8ae70[47:44]), |(gd8ae70[43:40]), |(gd8ae70[39:36]), |(gd8ae70[35:32]),                           |(gd8ae70[31:28]), |(gd8ae70[27:24]), |(gd8ae70[23:20]), |(gd8ae70[19:16]),                           |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else // x8

assign   ec315ce = {|(gd8ae70[71:64]), |(gd8ae70[63:56]), |(gd8ae70[55:48]), |(gd8ae70[47:40]), |(gd8ae70[39:32]),                     |(gd8ae70[31:24]), |(gd8ae70[23:16]), |(gd8ae70[15: 8]), |(gd8ae70[ 7: 0]) };

`endif // x4 


`endif



`ifdef ddr3_ipcore_DATA_SIZE_64  
  
`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign   ec315ce = {|(gd8ae70[63:60]), |(gd8ae70[55:52]), |(gd8ae70[47:44]), |(gd8ae70[39:36]),                           |(gd8ae70[31:28]), |(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                           |(gd8ae70[59:56]), |(gd8ae70[51:48]), |(gd8ae70[43:40]), |(gd8ae70[35:32]),                           |(gd8ae70[27:24]), |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign   ec315ce = {|(gd8ae70[63:60]), |(gd8ae70[59:56]), |(gd8ae70[55:52]), |(gd8ae70[51:48]),                           |(gd8ae70[47:44]), |(gd8ae70[43:40]), |(gd8ae70[39:36]), |(gd8ae70[35:32]),                           |(gd8ae70[31:28]), |(gd8ae70[27:24]), |(gd8ae70[23:20]), |(gd8ae70[19:16]),                           |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif
  
`else
      assign   ec315ce = {|(gd8ae70[63:56]), |(gd8ae70[55:48]), |(gd8ae70[47:40]), |(gd8ae70[39:32]),                           |(gd8ae70[31:24]), |(gd8ae70[23:16]), |(gd8ae70[15: 8]), |(gd8ae70[ 7: 0]) };  
`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_56


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign   ec315ce = {|(gd8ae70[55:52]), |(gd8ae70[47:44]), |(gd8ae70[39:36]),                           |(gd8ae70[31:28]), |(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                           |(gd8ae70[51:48]), |(gd8ae70[43:40]), |(gd8ae70[35:32]),                           |(gd8ae70[27:24]), |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign   ec315ce = {|(gd8ae70[55:52]), |(gd8ae70[51:48]),                           |(gd8ae70[47:44]), |(gd8ae70[43:40]), |(gd8ae70[39:36]), |(gd8ae70[35:32]),                           |(gd8ae70[31:28]), |(gd8ae70[27:24]), |(gd8ae70[23:20]), |(gd8ae70[19:16]),                           |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else

assign   ec315ce = {|(gd8ae70[55:48]), |(gd8ae70[47:40]), |(gd8ae70[39:32]),                     |(gd8ae70[31:24]), |(gd8ae70[23:16]), |(gd8ae70[15: 8]), |(gd8ae70[ 7: 0]) };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_48


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
        assign   ec315ce = {|(gd8ae70[47:44]), |(gd8ae70[39:36]), |(gd8ae70[31:28]),                             |(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                             |(gd8ae70[43:40]), |(gd8ae70[35:32]), |(gd8ae70[27:24]),                             |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
        assign   ec315ce = {|(gd8ae70[47:44]), |(gd8ae70[43:40]), |(gd8ae70[39:36]), |(gd8ae70[35:32]),                             |(gd8ae70[31:28]), |(gd8ae70[27:24]), |(gd8ae70[23:20]), |(gd8ae70[19:16]),                             |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else

assign   ec315ce = {|(gd8ae70[47:40]), |(gd8ae70[39:32]),                     |(gd8ae70[31:24]), |(gd8ae70[23:16]), |(gd8ae70[15: 8]), |(gd8ae70[ 7: 0]) };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_40


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign ec315ce = {|(gd8ae70[39:36]), |(gd8ae70[31:28]),                         |(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                         |(gd8ae70[35:32]), |(gd8ae70[27:23]),                         |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign ec315ce = {|(gd8ae70[39:36]), |(gd8ae70[35:32]),                         |(gd8ae70[31:28]), |(gd8ae70[27:24]), |(gd8ae70[23:20]), |(gd8ae70[19:16]),                         |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else

assign   ec315ce = {|(gd8ae70[39:32]),                     |(gd8ae70[31:24]), |(gd8ae70[23:16]), |(gd8ae70[15: 8]), |(gd8ae70[ 7: 0]) };

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_32


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign   ec315ce = {|(gd8ae70[31:28]), |(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                           |(gd8ae70[27:24]), |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign   ec315ce = {|(gd8ae70[31:28]), |(gd8ae70[27:24]), |(gd8ae70[23:20]), |(gd8ae70[19:16]),                           |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else

assign   ec315ce = {|(gd8ae70[31:24]), |(gd8ae70[23:16]), |(gd8ae70[15:8]), |(gd8ae70[7:0])};

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_24


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign   ec315ce = {|(gd8ae70[23:20]), |(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                           |(gd8ae70[19:16]), |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign   ec315ce = {|(gd8ae70[23:20]), |(gd8ae70[19:16]),                           |(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else

assign   ec315ce = {|(gd8ae70[23:16]), |(gd8ae70[15:8]), |(gd8ae70[7:0])};

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_16


`ifdef ddr3_ipcore_x4
    
`ifdef ddr3_ipcore_RDIMM
      assign   ec315ce = {|(gd8ae70[15:12]), |(gd8ae70[ 7: 4]),                           |(gd8ae70[11: 8]), |(gd8ae70[ 3: 0]) };    
`else
      assign   ec315ce = {|(gd8ae70[15:12]), |(gd8ae70[11: 8]), |(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };    
`endif


`else

assign   ec315ce = {|(gd8ae70[15: 8]), |(gd8ae70[ 7: 0])};

`endif


`endif



`ifdef ddr3_ipcore_DATA_SIZE_8


`ifdef ddr3_ipcore_x4

assign   ec315ce = {|(gd8ae70[ 7: 4]), |(gd8ae70[ 3: 0]) };

`else

assign   ec315ce = |(gd8ae70);

`endif


`endif



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      jr28771 <= 1'b0;   else      jr28771 <= |(ux8e62 & ec315ce);
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      vv714e1     <= {`ddr3_ipcore_DSIZE{1'b0}};      ay53875 <= 1'b0;      mt8a70e          <= {`ddr3_ipcore_USER_DM{1'b0}};      ng9c3a9      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      rge1d4b       <= 1'b0;      xyea5a     <= 1'b0;   end   else  begin
      vv714e1     <= co8de73;      ay53875 <= ipd387d;      mt8a70e          <= dfi_wrdata_mask;      ng9c3a9      <= qi240ca;      rge1d4b       <= tw20651;      xyea5a     <= tj328b;   end
end

`ifdef ddr3_ipcore_PHY_REG_P2

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ip752d2     <= {`ddr3_ipcore_DSIZE{1'b0}};      ksa9694          <= {`ddr3_ipcore_USER_DM{1'b0}};      cz4b4a1 <= 1'b0;      bl5a50d      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      xjd286e       <= 1'b0;      rv94377     <= 1'b0;   end   else  begin      ip752d2     <= vv714e1;      ksa9694          <= mt8a70e;      cz4b4a1 <= ay53875;      bl5a50d      <= ng9c3a9;      xjd286e       <= rge1d4b;      rv94377     <= xyea5a;   end
end

`endif







`ifdef ddr3_ipcore_WL_DYNDLY

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        wl_dyndly    <= {8*`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else begin        wl_dyndly    <= czd9153;   end
end

`endif


`ifdef ddr3_ipcore_NO_WRITE_LEVEL

assign  wl_act         = 1'b0;
assign  hb4f402    = 1'b0;
assign  gd398ab     = 1'b0;
assign  fc302ea    = 1'b0;
assign  wy15761    = 16'h0;
assign  ph81752      = {`ddr3_ipcore_CS_WIDTH{1'b0}};
assign  zm11cc    = 1'b0;
assign  wl_done        = jpc8a9d;
assign  fp22f48      = 1'b0;
assign  ux8e62     = {`ddr3_ipcore_DQS_WIDTH{1'b0}};
assign  wl_err         = 1'b0;

assign  riba96       = {`ddr3_ipcore_CS_WIDTH{1'b0}};
assign  ie8d120              = 1'b0;
assign  ofd62ab         = 1'b0;

`ifdef ddr3_ipcore_ECP5_PV_RIGHT_32B

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        czd9153    <= {8'h0,8'h0,8'hd,8'hd};   end   else begin        czd9153    <= {8'h0,8'h0,8'hd,8'hd};   end
end

`else

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        czd9153    <= {8*`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else begin        czd9153    <= {`ddr3_ipcore_DQS_WIDTH{8'h00}};   end
end

`endif

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        jpc8a9d   <= 1'b0;   end   else begin        if (tudf645)        jpc8a9d   <= 1'b1;   end
end

`else

assign  jpc8a9d = tudf645;
always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        uk3e21d      <= 3'b0;    end    else if (zkcacc8) begin        uk3e21d      <= ayfffc0[5:3];    end
end

always @ (uk3e21d) begin   case (uk3e21d)    3'b000 : lqf10e9 = 3'h3;    3'b001 : lqf10e9 = 3'h3;    3'b010 : lqf10e9 = 3'h4;    3'b011 : lqf10e9 = 3'h4;    default: lqf10e9 = 3'h3;   endcase
end
byeeae4_ddr3_ipcore cm7d79c(        .sclk               (sclk),
    .rst_n              (rst_n),
    .qg5c8e5           (jpc8a9d),    .wj65730         (qgffff8[4:3]),    .ou2b985     (lqf10e9),    .ec31407        (ec31407 ),    .wlb19ef           (ps57666 ),    .jr28771              (jr28771 ),    .su43b8f            ({qgffff8[9],qgffff8[6],qgffff8[2]}),    .qv1dc78                ({qgffff8[5],qgffff8[1]} ),    .lqee3c4            (qgffff8[0] ),    .sj80455          (ayfffc0[10:0] ),    .clocking_good      (clocking_good ),    .wl_phase_dly_cnt   (`ddr3_ipcore_WL_DQS_PHASE_DLY_CNT),        .wl_done            (wl_done ),    .fp22f48          (fp22f48 ),    .wl_err             (wl_err ),    .wl_act             (wl_act ),    .hb4f402        (hb4f402 ),    .gd398ab         (gd398ab),    .fc302ea        (fc302ea),    .wy15761        (wy15761) ,    .ph81752          (ph81752 ),    .zm11cc        (zm11cc),    .irbb58a       (),    .ux8e62         (ux8e62),    .ofd62ab           (ofd62ab),    .sjb155c          (czd9153),    .riba96         (riba96),    .pf55724    ()      );

`endif






`ifdef ddr3_ipcore_NO_RD_TRAIN

assign xw47cf8    = 1'b0;
assign wwde307       = 1'b0;
assign lf386a5      = 1'b0;
assign hof1838       = 1'b0;
assign zxf3e11      = 1'b0;
assign hq8c1c3       = 1'b0;
assign ux70d4   = 1'b0;
assign kd60e1a    = 1'b0;
assign phaa3b5 = 'd0;
assign nt32a8e = 'd0;
assign rt_err      = 1'b0;
assign db8ed74    = 1'b0;
assign dm76ba6   = 1'b0;
assign zzb5d32     = 1'b1;

`else

assign xw47cf8 = wl_done & ~je996aa;
sj9a4a3_ddr3_ipcore dzd251c(       .rst_n           (rst_n ),    .sclk            (sclk ),    .xw47cf8        (xw47cf8),        .rib2a96            (zm11376),    .gocec6b          (ukb36fb),
    .faf47c6        (faf47c6),
    .ld6b0e8 (gq97bc6),
       .wwde307           (wwde307),    .lf386a5          (lf386a5),    .hof1838           (hof1838),    .hq8c1c3           (hq8c1c3),    .kd60e1a        (kd60e1a),    .ux70d4       (ux70d4),    .rt_rdclksel_rvl (rt_rdclksel_rvl),    .phaa3b5     (phaa3b5),    .rt_dqs_read_rvl (rt_dqs_read_rvl),    .nt32a8e     (nt32a8e),    .ip5ea2c      (ip5ea2c),    .rt_err          (rt_err),    .db8ed74        (db8ed74),    .dm76ba6       (dm76ba6),    .zzb5d32         (zzb5d32)    );    
`ifdef ddr3_ipcore_DATA_SIZE_8
    assign ie8874a = 32'h87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_16
 assign ie8874a = 64'h87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_24
 assign ie8874a = 96'h87654321_87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_32
    assign ie8874a = 128'h87654321_87654321_87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_40
    assign ie8874a = 160'h87654321_87654321_87654321_87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_48
    assign ie8874a = 192'h87654321_87654321_87654321_87654321_87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_56
    assign ie8874a = 224'h87654321_87654321_87654321_87654321_87654321_87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_64
    assign ie8874a = 256'h87654321_87654321_87654321_87654321_87654321_87654321_87654321_87654321; 
`endif
 
`ifdef ddr3_ipcore_DATA_SIZE_72
    assign ie8874a = 288'h87654321_87654321_87654321_87654321_87654321_87654321_87654321_87654321_87654321; 
`endif

     

`ifdef ddr3_ipcore_x4
     generate           for (qg43a50=0; qg43a50<`ddr3_ipcore_DQS_WIDTH; qg43a50=qg43a50+1)           begin: ks98ed2           rtc7690_ddr3_ipcore rtc7690(               .sclk              (sclk),               .rst_n             (rst_n),               .ie31859       (ie31859),               .hq8c1c3             (hq8c1c3),               .uxa188c           (1'b0),               .fc998cb  (fc998cb[qg43a50]),               .xy8ceba  (xy8ceba[ (qg43a50 * 16)+15: (qg43a50 * 16)]),                              .ym827a2  ({ie8874a[(3*`ddr3_ipcore_DATA_WIDTH+qg43a50*4+3) : (3*`ddr3_ipcore_DATA_WIDTH+qg43a50*4)], ie8874a[(2*`ddr3_ipcore_DATA_WIDTH+qg43a50*4+3) : (2*`ddr3_ipcore_DATA_WIDTH+qg43a50*4)],                                    ie8874a[(`ddr3_ipcore_DATA_WIDTH+qg43a50*4+3) : (`ddr3_ipcore_DATA_WIDTH+qg43a50*4)], ie8874a[(qg43a50*4+3) : (qg43a50*4)]}),               .cal_bc4           (cal_bc4),               .xj71de5        (gq97bc6[qg43a50])               );           end      endgenerate

`else
     generate           for (qg43a50=0; qg43a50<`ddr3_ipcore_DQS_WIDTH; qg43a50=qg43a50+1)           begin: ks98ed2           rtc7690_ddr3_ipcore rtc7690(               .sclk              (sclk),               .rst_n             (rst_n),               .ie31859       (ie31859),               .hq8c1c3             (hq8c1c3),               .uxa188c           (1'b0),               .fc998cb  (fc998cb[qg43a50]),               .xy8ceba  (xy8ceba[ (qg43a50 * 32)+31: (qg43a50 * 32)]),               .ym827a2  ({ie8874a[(3*`ddr3_ipcore_DATA_WIDTH+qg43a50*8+7) : (3*`ddr3_ipcore_DATA_WIDTH+qg43a50*8)], ie8874a[(2*`ddr3_ipcore_DATA_WIDTH+qg43a50*8+7) : (2*`ddr3_ipcore_DATA_WIDTH+qg43a50*8)],                                    ie8874a[(`ddr3_ipcore_DATA_WIDTH+qg43a50*8+7) : (`ddr3_ipcore_DATA_WIDTH+qg43a50*8)], ie8874a[(qg43a50*8+7) : (qg43a50*8)]}),               .cal_bc4           (cal_bc4),               .xj71de5        (gq97bc6[qg43a50])               );           end      endgenerate

`endif


`endif


wy5f50_ddr3_ipcore mtb4a99(      .clk(sclk ) ,   .rst_n(rst_n ),   .param_txpr(`ddr3_ipcore_TXPR),   .param_tmod(`ddr3_ipcore_TMOD),   .param_tmrd(`ddr3_ipcore_TMRD),   .param_tzqinit(`ddr3_ipcore_TZQINIT) ,   .init_start(init_start) ,
      .fpaa935(fpaa935 ),   .hqbdc2f( ),   .xwe40df(xwe40df ),   .xy206fb(xy206fb ),   .zz37db(zz37db ),   .xy1bedf(xy1bedf ),   .tudf6fb(tudf6fb ),   .jcfb7da(jcfb7da ),   .aydbed3(aydbed3 ),   .rgdf699(rgdf699 ),   .jcfe692(tuf1b3a ),   .vx948e7(vx948e7 ),   .init_done(tudf645 )
);
assign the9405  = gd398ab | ip5ea2c;

assign xj4a02f = (wwde307) ? {sufffff[15:9],1'b0,sufffff[7:0]} : wy15761;
wj6ae2d_ddr3_ipcore bl4ac05(
   .clk(sclk ),   .rst_n(rst_n ),   .vx948e7(vx948e7 ),   .fpaa935(fpaa935),   .addr_init_0(`ddr3_ipcore_MRS0_INIT),   .addr_init_1(`ddr3_ipcore_MRS1_INIT),   .addr_init_2(`ddr3_ipcore_MRS2_INIT),   .addr_init_3(`ddr3_ipcore_MRS3_INIT),   .wwde307(wwde307),   .lf386a5(lf386a5),   .hof1838(hof1838 ),   .hq8c1c3(hq8c1c3 ),   .kd60e1a(kd60e1a ),   .ux70d4(ux70d4 ),   .xwe40df(xwe40df ),   .xy206fb(xy206fb ),   .zz37db(zz37db ),   .xy1bedf(xy1bedf ),   .tudf6fb(tudf6fb ),   .jcfb7da(jcfb7da ),   .aydbed3(aydbed3 ),   .rgdf699(rgdf699 ),   .tuf1b3a(tuf1b3a),   .ie31859(ie31859),   .wl_act(wl_act),   .wy15761(xj4a02f),   .gd398ab(the9405),

   .encc55d(fc302ea),   .kq62aec(ph81752),   .hb4f402(hb4f402),
   .ps57666(ps57666 ),   .anbb332(anbb332 ),   .ipd9995(ipd9995 ),   .alcccac(alcccac ),   .jc66565(jc66565 ),   .nt32b2a(nt32b2a ),   .an95956(an95956 ),   .ec31407(ec31407),   .ip655a0(ip655a0)
);




always @ (negedge rst_n or posedge sclk) begin   if (!rst_n) begin      wlae997 <= 1'b0;      vv74cbd <= 1'b0;      oua65ef <= 1'b0;   end   else begin      wlae997 <= hof1838;      vv74cbd <= wlae997;      oua65ef <= vv74cbd;   end
end
assign bn32f78  = (cal_bc4) ? (vv74cbd | wlae997) :                         (oua65ef | vv74cbd | wlae997);
assign  fn7e441 = !ou9df91[0];
assign  vic5041      = riba96;
always @ (negedge rst_n or posedge sclk) begin  if (!rst_n) begin     ou9df91    <=  'b0;     uiefc88 <=  1'b1;  end  else if ( wl_act && zm11cc)  begin     ou9df91    <= ux8e62;     uiefc88 <= 1'b0;  end  else  begin     ou9df91    <=  'b0;     uiefc88 <=  1'b1;  end
end





assign dfi_rddata = tjba616;








always @ (negedge rst_n or posedge sclk) begin  if (!rst_n)     jcda34f <= 1'b0;  else     jcda34f <= db8ed74 | ofd62ab | dqsbuf_pause;
end
uidead2_ddr3_ipcore  vxc52d (    .rst_n         (rst_n),        .ddr_rst       (ddr_rst),    .sclk          (sclk),    .eclk          (eclk),
    .lf91136        (lf91136),    .wy889b7       (wy889b7),    .en44db9        (en44db9),    .mt26dcd        (mt26dcd),    .oh36e6d      (oh36e6d),    .hqb736c    (uxa1bbf),

`ifdef ddr3_ipcore_DLY_DQS_DQ
    .gqb9b63     (bab8467),

`else
    .gqb9b63     (nrc233a),

`endif
    .fncdb19          (fp22221),    .ww6d8cf            (em_ddr_data)   );
oh1227b_ddr3_ipcore   faca01e (        .ddr_rst       (ddr_rst),    .eclk          (eclk),    .sclk          (sclk),    .wy889b7       (wy889b7),    .wjdcefe    (wjdcefe),    .ipe77f4   (em_ddr_dm)
);
uv41ed1_ddr3_ipcore  fnf67fe (    .rst_n          (rst_n),        .ddr_rst        (ddr_rst),    .jcda34f  (jcda34f),        .sclk           (sclk),    .eclk           (eclk),    .lq69e80    (czd9153),    .hb4f402    (hb4f402),    .of7a017 (me77f2f),    .psd00bd (me77f2f),    .ep805eb       (tjbf978),    .ir2f5c       (blfcbc6),    .oh17ae4       (wlddfc)  ,    .vkbd725       (wlddfc)  ,
    .pseb92a       ({`ddr3_ipcore_DQS_WIDTH{1'b0}}),    .os5c953        ({`ddr3_ipcore_DQS_WIDTH{1'b0}}),    .vie4a98         ({`ddr3_ipcore_DQS_WIDTH{1'b0}}),    .do254c2       ({`ddr3_ipcore_DQS_WIDTH{1'b0}}),    .tw2a613        ({`ddr3_ipcore_DQS_WIDTH{1'b0}}),    .qg5309a         ({`ddr3_ipcore_DQS_WIDTH{1'b0}}),    .rib2a96           (nt32a8e),    .pfc2681     (phaa3b5),   
    .en44db9         (en44db9),    .mt26dcd         (mt26dcd),    .dqsdel         (dqsdel)  ,


`ifdef ddr3_ipcore_DLY_DQS_DQ
    .db81fa3      (rt5a8b9),

`else
    .db81fa3      (eacb517),

`endif
    .wy889b7        (wy889b7),    .lf91136         (lf91136),    .faf47c6       (faf47c6),    .mga3e32        (),    .mg1f191        (),    .oh36e6d       (oh36e6d)  ,    .enc6445            (em_ddr_dqs)
);
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      xy8ceba      <= {`ddr3_ipcore_DSIZE{1'b0}};   end   else begin      xy8ceba    <= nrc233a;   end
end



`ifdef ddr3_ipcore_DLY_DQS_DQ

always @(negedge rst_n or posedge vi632d4) begin   if (!rst_n) begin      nr5017f    <= 1'b0;   end   else begin      nr5017f    <= ~nr5017f;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      vi632d4         <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      fp196a2         <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      alc6e11  <= {`ddr3_ipcore_DSIZE{1'b0}};      db3708c  <= {`ddr3_ipcore_DSIZE{1'b0}};   end   else begin      vi632d4         <= rt5a8b9;      fp196a2         <= vi632d4;      alc6e11  <= bab8467;      db3708c  <= alc6e11;   end
end
assign oh80bff        = nr5017f ? (vi632d4[7] | fp196a2[7])  : vi632d4[7];
assign mg5ffd = (nr5017f && !oh80bff) ? db3708c[255:224] : alc6e11[255:224];
assign eacb517        = {oh80bff,vi632d4[6:0]};
assign nrc233a = {mg5ffd,alc6e11[223:0]};


`endif








always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      fc998cb <= {`ddr3_ipcore_DQS_WIDTH{1'b1}};      czcc65a  <= {`ddr3_ipcore_DQS_WIDTH{1'b1}};   end   else begin      fc998cb <= eacb517;              czcc65a  <= fc998cb;   end
end
assign xy2ffe9  = |(fc998cb);
assign cz7ff4b = &(fc998cb);


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ou985bc        <= 1'b0;   else if ( !blc2de1 || (ou985bc && !(cz7ff4b)) )      ou985bc        <= 1'b0;   else if (xy2ffe9)      ou985bc        <= 1'b1;
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      dfi_rddata_valid    <= 1'b0;   end   else begin      dfi_rddata_valid    <= ou985bc;   end
end




`ifdef ddr3_ipcore_x4

     generate        for (suffa5c=0; suffa5c<`ddr3_ipcore_DQS_WIDTH; suffa5c=suffa5c+1)        begin: sw2e761        yzabf5e_ddr3_ipcore yzabf5e(               .sclk                 (sclk),               .rst_n                (rst_n),               .cal_bc4              (ipd9c53),               .dze3a7a     (xy2ffe9),               .xje9ebd     (fc998cb[suffa5c]),               .xy8ceba     (xy8ceba[(suffa5c*16)+15 : (suffa5c*16)]),               .wybced8                (tjba616[                (suffa5c*4)+3 :                 (suffa5c*4)]),               .fnd8308                (tjba616[   `ddr3_ipcore_DATA_WIDTH +(suffa5c*4)+3 :    `ddr3_ipcore_DATA_WIDTH +(suffa5c*4)]),               .an8e77                (tjba616[(2*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*4)+3 : (2*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*4)]),               .ay77ae8                (tjba616[(3*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*4)+3 : (3*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*4)])               );        end      endgenerate

`else
     generate        for (suffa5c=0; suffa5c<`ddr3_ipcore_DQS_WIDTH; suffa5c=suffa5c+1)        begin: sw2e761        yzabf5e_ddr3_ipcore yzabf5e(               .sclk                 (sclk),               .rst_n                (rst_n),               .cal_bc4              (ipd9c53),               .dze3a7a     (xy2ffe9),               .xje9ebd     (fc998cb[suffa5c]),               .xy8ceba     (xy8ceba[(suffa5c*32)+31 : (suffa5c*32)]),
               .wybced8                (tjba616[                (suffa5c*8)+7 :                 (suffa5c*8)]),               .fnd8308                (tjba616[   `ddr3_ipcore_DATA_WIDTH +(suffa5c*8)+7 :    `ddr3_ipcore_DATA_WIDTH +(suffa5c*8)]),               .an8e77                (tjba616[(2*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*8)+7 : (2*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*8)]),               .ay77ae8                (tjba616[(3*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*8)+7 : (3*`ddr3_ipcore_DATA_WIDTH)+(suffa5c*8)])               );        end      endgenerate

`endif





generate
for( the9704=0; the9704<`ddr3_ipcore_CLKO_WIDTH;the9704=the9704+1 ) begin: dm76123    ODDRX2F dbb091b (.D0(1'b0), .D1(1'b1), .D2(1'b0), .D3(1'b1), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .Q(hq8c10d[the9704]));
end
endgenerate     generate        for (wj4b827=0; wj4b827<`ddr3_ipcore_CLKO_WIDTH; wj4b827=wj4b827+1)        begin: do1b3e2           DELAYG #(.DEL_MODE("DQS_CMD_CLK"), .DEL_VALUE(0))           mrd9f12 (.A(hq8c10d[wj4b827]), .Z(uxb1821[wj4b827]));        end      endgenerate  OB db944a5 [`ddr3_ipcore_CLKO_WIDTH -1:0] (.I(uxb1821), .O(em_ddr_clk)) ;




`ifdef ddr3_ipcore_RDIMM

assign yk5c13c = 1'b1;

`else

assign yk5c13c = 1'b0;

`endif


`ifdef ddr3_ipcore_RDIMM

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        ose5e37   <= 1'b0;     end     else if (kq433c8 && jrbf37e) begin        ose5e37   <= 1'b1;     end     else if (kq433c8 && !jrbf37e) begin        ose5e37   <= 1'b0;     end
end

`else

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        ose5e37   <= 1'b0;     end     else        ose5e37   <= 1'b1;
end

`endif

os67d65_ddr3_ipcore co3eb29 (                .rst_n               (rst_n),                .sclk                (sclk),                .ose5e37             (ose5e37),                .kq433c8              (kq433c8),                .hb4f402         (hb4f402),                .ddr_wr_lat_odd      (ddr_wr_lat_odd),                .vv714e1      (vv714e1),                .mt8a70e           (mt8a70e),                .ay53875  (ay53875),                .ng9c3a9       (ng9c3a9),                .rge1d4b        (rge1d4b),                .xyea5a      (xyea5a),                .ip752d2     (ip752d2),                .ksa9694          (ksa9694),                .cz4b4a1 (cz4b4a1),                .bl5a50d      (bl5a50d),                .xjd286e       (xjd286e),                .rv94377     (rv94377),                .co8de73           (co8de73),                .ipd387d     (ipd387d),                .dfi_wrdata_mask     (dfi_wrdata_mask),                .qi240ca          (qi240ca),                .tw20651         (tw20651),                .tj328b       (tj328b),                .uxa1bbf     (uxa1bbf),                .wlddfc (wlddfc),                .wjdcefe          (wjdcefe),                .me77f2f      (me77f2f),                .tjbf978       (tjbf978),                .blfcbc6     (blfcbc6)                ) ;





assign pf5ac0c = (ddr_wr_lat_odd & ~yk5c13c) | (jrbf37e & yk5c13c)  | ayd4f76;

tw960ab_ddr3_ipcore sh5434a (                      .rst_n       (rst_n),                      .sclk        (sclk) ,                      .qi156b0      (qi156b0),                      .mirror_on   (db1945f),                      .pf5ac0c     (pf5ac0c),                      .ddr_cs_n    (ecbc903),                      .ddr_ras_n   (gb415e4),                      .ddr_cas_n   (wyaf24),                      .ddr_we_n    (zk57920),                      .ddr_ba      (qt41057),                      .ddr_addr    (ph2820a),                      .ddr_cke     (an82bc),                      .ww679bf    (nee4819),                      .jrbf37e    (jrbf37e),                      .kq433c8      (kq433c8),                      .hbcdfbf  (hbcdfbf),                      .of6fdff  (of6fdff),                      .jp7effd  (jp7effd),                      .yxf7fee  (yxf7fee),                      .lfbff74   (lfbff74),                      .meffba6   (meffba6),                      .wjfdd30   (wjfdd30),                      .byee985   (byee985),                      .jp74c2b (jp74c2b),                      .wya615f (wya615f),                      .ls30af8   (jc66be5),                      .oh857c3   (vxaf95b),                      .ie2be1c  (ie2be1c),                      .nr5f0e1  (nr5f0e1),                      .off870e  (off870e),                      .mrc3874  (mrc3874)              );      

`ifdef ddr3_ipcore_RDIMM
  assign ls30af8 = (bl5a06e) ? {`ddr3_ipcore_CS_WIDTH{1'b1}} : jc66be5;  assign oh857c3 = (bl5a06e) ? {`ddr3_ipcore_CS_WIDTH{1'b1}} : vxaf95b;

`else
  assign ls30af8 = jc66be5;  assign oh857c3 = vxaf95b;

`endif


`ifdef ddr3_ipcore_DESEL

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      aye09e1     <= 1'b1;      ri4f08 <= 1'b0;      nt27843     <= 1'b1;      wl3c21f     <= 1'b1;   end   else begin      aye09e1     <= ls30af8;      ri4f08 <= ddr_wr_lat_odd;      nt27843     <= yxf7fee;      wl3c21f     <= of6fdff;   end
end












`ifdef ddr3_ipcore_CS_WIDTH_1


assign ipd99af = (phy_init_act ) ? (~(hb4f402 | wwde307) | ls30af8) : ( ls30af8 | {`ddr3_ipcore_CS_WIDTH{(~nt27843 & ~wl3c21f)}});

`else


assign ipd99af = (phy_init_act ) ? {(~(hb4f402 | wwde307) | ls30af8[1]), (~(hb4f402 | wwde307) | ls30af8[0])} : ( ls30af8 | {`ddr3_ipcore_CS_WIDTH{(~nt27843 & ~wl3c21f)}});

`endif

assign alccd7c = (phy_init_act ) ? oh857c3    : oh857c3;


`else

assign ipd99af = ls30af8;
assign alccd7c = oh857c3;

`endif





generate
for( xwe10fc=0; xwe10fc<`ddr3_ipcore_ROW_WDTH;xwe10fc=xwe10fc+1 ) begin: gdb1ad5    ODDRX1F        ym8d6ad (.D0(jp74c2b[xwe10fc]), .D1(wya615f[xwe10fc]), .RST(ddr_rst), .SCLK(sclk), .Q(hbf3ce8[xwe10fc]));
end
endgenerate
generate
for( qv771f=0; qv771f<`ddr3_ipcore_BANK_WIDTH;qv771f=qv771f+1 ) begin: zm3f85c    ODDRX1F        xjfc2e2 (.D0(wjfdd30[qv771f]), .D1(byee985[qv771f]), .RST(ddr_rst), .SCLK(sclk), .Q(mede79d[qv771f]));
end
endgenerate
generate
for( os43f1c=0; os43f1c<`ddr3_ipcore_CS_WIDTH;os43f1c=os43f1c+1 ) begin: uv603ba    ODDRX1F        zm1dd5 (.D0(off870e[os43f1c]), .D1(mrc3874[os43f1c]), .RST(ddr_rst), .SCLK(sclk), .Q(mre8db1[os43f1c]));
end
endgenerate
generate
for( ie1f8e0=0; ie1f8e0<`ddr3_ipcore_CKE_WIDTH;ie1f8e0=ie1f8e0+1 ) begin: ec874b3    ODDRX1F        ls3a599 (.D0(ie2be1c[ie1f8e0]), .D1(nr5f0e1[ie1f8e0]), .RST(ddr_rst), .SCLK(sclk), .Q(ux36c60[ie1f8e0]));
end
endgenerate
generate
for( fnfc701=0; fnfc701<`ddr3_ipcore_CS_WIDTH;fnfc701=fnfc701+1 ) begin: ri89ea8    OSHX2A        rt4f543 (.D0(ipd99af[fnfc701]), .D1(alccd7c[fnfc701]), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .Q(me46d8c[fnfc701]));
end
endgenerate
    ODDRX1F    kqc1d97 (.D0(lfbff74), .D1(meffba6), .RST(ddr_rst), .SCLK(sclk), .Q(dzf3a36));    ODDRX1F    psca680(.D0(hbcdfbf), .D1(of6fdff), .RST(ddr_rst), .SCLK(sclk), .Q(wy9d1b6));    ODDRX1F    kf188e7(.D0(jp7effd), .D1(yxf7fee), .RST(ddr_rst), .SCLK(sclk), .Q(fp9e746));

assign #1 gq1096a  = wy9d1b6;
assign #1 kd54425  = fp9e746;
assign #1 pua212d  = dzf3a36;
assign #1 nt2d43a  = mede79d;
assign #1 al6a1d7 = hbf3ce8;
assign #1 je25a87  = ux36c60;
assign #1 hd84b50  = mre8db1;

`ifdef ddr3_ipcore_RDIMM
   
`ifdef ddr3_ipcore_CS_WIDTH_1
    assign #1 ks875e6  = {1'b1,me46d8c};   
`else
    assign #1 ks875e6  = me46d8c;   
`endif


`else

assign #1 ks875e6  = me46d8c;

`endif
  generate     for (the380e=0; the380e<`ddr3_ipcore_CS_WIDTH_BB; the380e=the380e+1)     begin: pfdd666      DELAYG #(.DEL_MODE("DQS_CMD_CLK"),.DEL_VALUE(0))      aye5091 (.A(ks875e6[the380e]), .Z(xj50ebc[the380e]));     end   endgenerate
OB bnba15f                     (.I(gq1096a), .O(em_ddr_cas_n)) ;
OB aa2bfd4                     (.I(kd54425), .O(em_ddr_ras_n)) ;
OB qgfa879                      (.I(pua212d) , .O(em_ddr_we_n)) ;
OB ymf20c   [`ddr3_ipcore_BANK_WIDTH -1:0] (.I(nt2d43a) , .O(em_ddr_ba)) ;
OB of41856 [`ddr3_ipcore_ROW_WDTH -1:0]   (.I(al6a1d7), .O(em_ddr_addr)) ;
OB wyad77    [`ddr3_ipcore_CS_WIDTH_BB-1:0]  (.I(xj50ebc), .O(em_ddr_cs_n)) ;
OB wlaee0f   [`ddr3_ipcore_CKE_WIDTH -1:0]  (.I(je25a87) , .O(em_ddr_cke)) ;
OB icc1f4a   [`ddr3_ipcore_CS_WIDTH-1:0]    (.I(hd84b50), .O(em_ddr_odt)) ;

endmodule




`ifdef ddr3_ipcore_x4
 
`define ddr3_ipcore_GDATA_WIDTH 16

`else
 
`define ddr3_ipcore_GDATA_WIDTH 32 

`endif
`timescale 1 ns / 100 ps
module yzabf5e_ddr3_ipcore (
                 sclk,
                 rst_n,
                 cal_bc4,
                 dze3a7a,
                 xje9ebd,
                 xy8ceba,
                 wybced8,
                 fnd8308,
                 an8e77,
                 ay77ae8
                 );
input                            rst_n;
input                            sclk;
input                            cal_bc4;
input                            dze3a7a;
input                            xje9ebd;
input  [  `ddr3_ipcore_GDATA_WIDTH    -1:0]  xy8ceba;
output [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  wybced8;
output [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  fnd8308;
output [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  an8e77;
output [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  ay77ae8;
reg                              bld77b4;
reg    [  `ddr3_ipcore_GDATA_WIDTH    -1:0]  sjbbda6;
reg                              qgded34;
wire   [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  wybced8;
wire   [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  fnd8308;
wire   [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  an8e77;
wire   [ (`ddr3_ipcore_GDATA_WIDTH/4) -1:0]  ay77ae8;
reg    [  `ddr3_ipcore_GDATA_WIDTH    -1:0]  gda1d48 ;
reg                              ngea44;
reg                              gb75222;
reg                              uka9114;

`ifdef ddr3_ipcore_x4

`else

`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      sjbbda6    <= {`ddr3_ipcore_GDATA_WIDTH{1'b0}};      bld77b4    <= 1'b0;      ngea44            <= 1'b0;      gb75222            <= 1'b0;      uka9114            <= 1'b0;   end   else begin      sjbbda6    <= xy8ceba;      bld77b4    <= xje9ebd;      ngea44            <= cal_bc4;      gb75222            <= ngea44;      uka9114            <= gb75222;   end
end



always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      qgded34    <= 1'b0;   end
   else if (!dze3a7a || (!xje9ebd && bld77b4 && !qgded34 && !uka9114) ) begin      qgded34    <= 1'b0;   end   else if (dze3a7a && !xje9ebd) begin      qgded34    <= 1'b1;   end   else if (uka9114) begin      qgded34    <= 1'b0;   end
end


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      gda1d48    <= {`ddr3_ipcore_GDATA_WIDTH{1'b0}};   end   else begin      gda1d48    <= qgded34 ? xy8ceba : sjbbda6;   end
end





`ifdef ddr3_ipcore_x4


assign wybced8 = {gda1d48[12],gda1d48[ 8],gda1d48[4],gda1d48[0]};  
assign fnd8308 = {gda1d48[13],gda1d48[ 9],gda1d48[5],gda1d48[1]};  
assign an8e77 = {gda1d48[14],gda1d48[10],gda1d48[6],gda1d48[2]};  
assign ay77ae8 = {gda1d48[15],gda1d48[11],gda1d48[7],gda1d48[3]};  

`else


assign wybced8 = {gda1d48[28],gda1d48[24],gda1d48[20],gda1d48[16],gda1d48[12],gda1d48[ 8],gda1d48[4],gda1d48[0]};  
assign fnd8308 = {gda1d48[29],gda1d48[25],gda1d48[21],gda1d48[17],gda1d48[13],gda1d48[ 9],gda1d48[5],gda1d48[1]};  
assign an8e77 = {gda1d48[30],gda1d48[26],gda1d48[22],gda1d48[18],gda1d48[14],gda1d48[10],gda1d48[6],gda1d48[2]};  
assign ay77ae8 = {gda1d48[31],gda1d48[27],gda1d48[23],gda1d48[19],gda1d48[15],gda1d48[11],gda1d48[7],gda1d48[3]};  

`endif

endmodule








`timescale 1 ns / 100 ps
module sj9a4a3_ddr3_ipcore (
input  wire                      rst_n,
input  wire                      sclk,
input  wire                      xw47cf8,
input  wire                      rib2a96,
input  wire                      gocec6b,
input  wire [`ddr3_ipcore_DQS_WIDTH-1:0]     faf47c6,
input  wire [`ddr3_ipcore_DQS_WIDTH-1:0]     ld6b0e8,

output reg                       wwde307,
output reg                       lf386a5,
output reg                       hof1838,
output reg                       hq8c1c3,
output reg                       kd60e1a,
output reg                       ux70d4,
output wire [4 * `ddr3_ipcore_DQS_WIDTH-1:0] nt32a8e ,
output wire [3 * `ddr3_ipcore_DQS_WIDTH-1:0] phaa3b5  ,
output wire [4 * `ddr3_ipcore_DQS_WIDTH-1:0] rt_dqs_read_rvl ,
output wire [3 * `ddr3_ipcore_DQS_WIDTH-1:0] rt_rdclksel_rvl ,
output reg                       ip5ea2c,
output reg                       rt_err,
output reg                       db8ed74,
output reg                       dm76ba6,
output reg                       zzb5d32                     );

`define ddr3_ipcore_RT_ACT_WAIT 6'd5 

`define ddr3_ipcore_RT_WR_WAIT 6'd15 

`define ddr3_ipcore_RT_RD_WAIT 6'h15 

`define ddr3_ipcore_RT_RDCKSEL_CNT 5'd15    

`ifdef ddr3_ipcore_SIM

`define ddr3_ipcore_RT_JF_RTRY_CNT 9'd10   // Jitter-filter retry count

`else

`define ddr3_ipcore_RT_JF_RTRY_CNT 9'd400   // Jitter-filter retry count

`endif

`define ddr3_ipcore_PAUSE_ST_CNT 4'h1 

`define ddr3_ipcore_LD_CLKSEL_CNT 4'h3 

`define ddr3_ipcore_PAUSE_END_CNT 4'h5 

`define ddr3_ipcore_RT_IDLE 13'b0000000000001

`define ddr3_ipcore_RT_ACT 13'b0000000000010

`define ddr3_ipcore_RT_ACT_WT 13'b0000000000100

`define ddr3_ipcore_RT_WR 13'b0000000001000

`define ddr3_ipcore_RT_WR_WT 13'b0000000010000

`define ddr3_ipcore_RT_RD 13'b0000000100000

`define ddr3_ipcore_RT_RD_WT 13'b0000001000000

`define ddr3_ipcore_RT_BURSTDT 13'b0000010000000

`define ddr3_ipcore_RT_ADJ_CLKSEL 13'b0000100000000

`define ddr3_ipcore_RT_CHK_RDCNT 13'b0001000000000

`define ddr3_ipcore_RT_WAIT 13'b0010000000000

`define ddr3_ipcore_RT_END 13'b0100000000000

`define ddr3_ipcore_RT_END1 13'b1000000000000
wire  [3 * `ddr3_ipcore_DQS_WIDTH-1:0] pf5027d   ;
wire  [3 * `ddr3_ipcore_DQS_WIDTH-1:0] fp813ef  ;
reg   [5:0]                rv9f7e;
reg  [12:0]                rt4fbf7;
reg  [4:0]                 kq7dfbe;
reg  [4:0]                 icefdf1 ;
reg  [8:0]                 nr7ef89;
reg                        enf7c4e;
reg                        gdbe274;
wire [1:0]                 dmf13a5 ;
wire [1:0]                 xy89d2a ;
reg  [2:0]                 mr4e953;
wire                       zx74a9c;
reg                        xla54e7;
reg                        xy2a73f  ;
reg                        ww539fa ;
reg                        hq9cfd1;
reg                        she7e8a;
reg                        je3f455;
reg [1:0]                  ayfa2ab;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]     god1559;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]     kf8aac9;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]     jp5564c;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]     irab267;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]     go5933c;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]     ofc99e1;
wire                       qg4cf0d;

`ifdef ddr3_ipcore_RDIMM

`else

`endif
wire  go67869;
genvar sj3c349;



`define ddr3_ipcore_RT_ACT_WAIT 6'd5 


`define ddr3_ipcore_RT_WR_WAIT 6'd15 



`define ddr3_ipcore_RT_RD_WAIT 6'h15 


`define ddr3_ipcore_RT_RDCKSEL_CNT 5'd15    


`ifdef ddr3_ipcore_SIM


`define ddr3_ipcore_RT_JF_RTRY_CNT 9'd10   // Jitter-filter retry count


`else


`define ddr3_ipcore_RT_JF_RTRY_CNT 9'd400   // Jitter-filter retry count



`endif


`define ddr3_ipcore_PAUSE_ST_CNT 4'h1 


`define ddr3_ipcore_LD_CLKSEL_CNT 4'h3 


`define ddr3_ipcore_PAUSE_END_CNT 4'h5 


`define ddr3_ipcore_RT_IDLE 13'b0000000000001


`define ddr3_ipcore_RT_ACT 13'b0000000000010


`define ddr3_ipcore_RT_ACT_WT 13'b0000000000100


`define ddr3_ipcore_RT_WR 13'b0000000001000


`define ddr3_ipcore_RT_WR_WT 13'b0000000010000


`define ddr3_ipcore_RT_RD 13'b0000000100000


`define ddr3_ipcore_RT_RD_WT 13'b0000001000000


`define ddr3_ipcore_RT_BURSTDT 13'b0000010000000


`define ddr3_ipcore_RT_ADJ_CLKSEL 13'b0000100000000


`define ddr3_ipcore_RT_CHK_RDCNT 13'b0001000000000


`define ddr3_ipcore_RT_WAIT 13'b0010000000000


`define ddr3_ipcore_RT_END 13'b0100000000000


`define ddr3_ipcore_RT_END1 13'b1000000000000






assign zx74a9c = (je3f455 && !wwde307) ? rib2a96 : (rib2a96 | xla54e7);
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      xla54e7 <= 1'b0;      xy2a73f  <= 1'b0;      ww539fa  <= 1'b0;      hq9cfd1  <= 1'b0;      she7e8a  <= 1'b0;      je3f455 <= 1'b0;      ayfa2ab <= 2'b00;      god1559 <= 'd0;      kf8aac9 <= 'd0;      icefdf1 <= 'd0;   end   else begin      xla54e7 <= rib2a96;      xy2a73f  <= zx74a9c;      ww539fa  <= zx74a9c;      hq9cfd1  <= xy2a73f;      she7e8a  <= hq9cfd1;      je3f455 <= gocec6b;      ayfa2ab <= dmf13a5;      god1559 <= faf47c6;
      kf8aac9 <= faf47c6;      icefdf1 <= kq7dfbe;   end
end

`ifdef ddr3_ipcore_RDIMM


assign dmf13a5 = {zx74a9c,zx74a9c};

`else


assign dmf13a5 = {zx74a9c,zx74a9c};   
assign xy89d2a = {ww539fa,ww539fa};   

`endif




assign phaa3b5     = pf5027d;
assign rt_rdclksel_rvl = fp813ef;
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      rt4fbf7     <= `ddr3_ipcore_RT_IDLE;      wwde307        <= 1'b0;      lf386a5       <= 1'b0;      hof1838        <= 1'b0;      hq8c1c3        <= 1'b0;      kd60e1a     <= 1'b0;      ux70d4    <= 1'b0;      kq7dfbe <= 5'h0;      enf7c4e   <= 1'b1;      ip5ea2c   <= 1'b0;      db8ed74     <= 1'b0;      dm76ba6    <= 1'b0;      zzb5d32      <= 1'b0;      rt_err       <= 1'b0;      mr4e953 <= 3'b0;      gdbe274  <= 1'b0;      nr7ef89 <= 'd0;   end   else begin      case (rt4fbf7)       `ddr3_ipcore_RT_IDLE     : begin                        lf386a5     <= 1'b0;                      hof1838      <= 1'b0;                      hq8c1c3      <= 1'b0;                      kd60e1a   <= 1'b0;                      ux70d4  <= 1'b0;                      enf7c4e <= 1'b1;                      gdbe274<= 1'b0;                      ip5ea2c <= 1'b0;                      db8ed74   <= 1'b0;                      dm76ba6  <= 1'b0;                      if(xw47cf8) begin                         kq7dfbe  <= 5'h0;                         nr7ef89 <= 'd0;                         enf7c4e   <= 1'b1;                         zzb5d32      <= 1'b0;                         rt_err       <= 1'b0;                         wwde307        <= 1'b1;                         mr4e953 <= 3'b0;                         rt4fbf7     <= `ddr3_ipcore_RT_ACT;                      end                      else                         rt4fbf7 <= `ddr3_ipcore_RT_IDLE;                      end       `ddr3_ipcore_RT_ACT      : begin                        enf7c4e <= 1'b0;                      kd60e1a   <= 1'b0;                      if(rv9f7e == 'd5) begin                         enf7c4e <= 1'b1;                         lf386a5     <= 1'b1;                         rt4fbf7 <= `ddr3_ipcore_RT_ACT_WT;                      end                      else begin                         rt4fbf7     <= `ddr3_ipcore_RT_ACT;                      end                      end       `ddr3_ipcore_RT_ACT_WT   : begin                        enf7c4e <= 1'b0;                      lf386a5     <= 1'b0;                      if(rv9f7e == `ddr3_ipcore_RT_ACT_WAIT) begin                         enf7c4e <= 1'b1;                         rt4fbf7   <= `ddr3_ipcore_RT_WR;                      end                      else begin                         rt4fbf7 <= `ddr3_ipcore_RT_ACT_WT;                      end                      end       `ddr3_ipcore_RT_WR       : begin                        kd60e1a   <= 1'b0;                      enf7c4e <= 1'b0;                      hof1838      <= 1'b1;                      rt4fbf7   <= `ddr3_ipcore_RT_WR_WT;                      end       `ddr3_ipcore_RT_WR_WT    : begin                        hof1838   <= 1'b0;                      if(rv9f7e == `ddr3_ipcore_RT_WR_WAIT) begin                         enf7c4e <= 1'b1;                         rt4fbf7   <= `ddr3_ipcore_RT_RD;                      end                      else begin                         rt4fbf7 <= `ddr3_ipcore_RT_WR_WT;                      end                      end       `ddr3_ipcore_RT_RD     :   begin                        enf7c4e <= 1'b0;                      ux70d4  <= 1'b0;                      hq8c1c3      <= 1'b1;                      rt4fbf7   <= `ddr3_ipcore_RT_RD_WT;                      end              `ddr3_ipcore_RT_RD_WT  :   begin                        hq8c1c3   <= 1'b0;
                      if (kf8aac9 == {`ddr3_ipcore_DQS_WIDTH{1'b0}} ) begin                         enf7c4e <= 1'b0;                         rt4fbf7   <= `ddr3_ipcore_RT_BURSTDT;                      end                      else begin                         rt4fbf7 <= `ddr3_ipcore_RT_RD_WT;                      end                      end       `ddr3_ipcore_RT_BURSTDT :  begin                        if (rv9f7e == `ddr3_ipcore_RT_RD_WAIT ) begin                         enf7c4e <= 1'b1;                         rt4fbf7   <= `ddr3_ipcore_RT_ADJ_CLKSEL;                      end                      else begin                         rt4fbf7 <= `ddr3_ipcore_RT_BURSTDT;                      end                      end       `ddr3_ipcore_RT_ADJ_CLKSEL: begin                        enf7c4e <= 1'b0;                      if (qg4cf0d) begin                         enf7c4e <= 1'b1;                         ux70d4  <= 1'b1;                         hq8c1c3      <= 1'b1;                            rt4fbf7 <= `ddr3_ipcore_RT_WAIT;                      end                      else begin                         if (nr7ef89 == `ddr3_ipcore_RT_JF_RTRY_CNT-1) begin                            if (rv9f7e == `ddr3_ipcore_PAUSE_ST_CNT)                               db8ed74 <= 1'b1;                            else if (rv9f7e == `ddr3_ipcore_LD_CLKSEL_CNT)                               mr4e953 <= mr4e953 + 1;    else if (rv9f7e == `ddr3_ipcore_PAUSE_END_CNT) begin                               db8ed74   <= 1'b0;                               rt4fbf7   <= `ddr3_ipcore_RT_CHK_RDCNT;                               enf7c4e <= 1'b1;                            end                            else                               rt4fbf7   <= `ddr3_ipcore_RT_ADJ_CLKSEL;         end else if (rv9f7e == `ddr3_ipcore_PAUSE_END_CNT) begin                            db8ed74   <= 1'b0;                            rt4fbf7   <= `ddr3_ipcore_RT_CHK_RDCNT;                            enf7c4e <= 1'b1;                         end                         else                            rt4fbf7   <= `ddr3_ipcore_RT_ADJ_CLKSEL;                      end                      end       `ddr3_ipcore_RT_CHK_RDCNT:  begin                        enf7c4e <= 1'b0;                      if (kq7dfbe == `ddr3_ipcore_RT_RDCKSEL_CNT && (nr7ef89 == `ddr3_ipcore_RT_JF_RTRY_CNT-1)) begin                         enf7c4e <= 1'b1;                         ux70d4  <= 1'b1;                             hq8c1c3      <= 1'b1;                         rt4fbf7   <= `ddr3_ipcore_RT_WAIT;                      end                      else begin                         if (nr7ef89 == `ddr3_ipcore_RT_JF_RTRY_CNT-1) begin                            kq7dfbe  <= kq7dfbe + 1;                            nr7ef89 <= 'd0;                         end                         else begin                            nr7ef89 <= nr7ef89 + 1;                         end                         enf7c4e <= 1'b1;                         kd60e1a   <= ~kd60e1a;                           rt4fbf7   <= `ddr3_ipcore_RT_RD;                      end                      end       `ddr3_ipcore_RT_WAIT    : begin                        enf7c4e <= 1'b0;                      hq8c1c3      <= 1'b0;                      if (rv9f7e == `ddr3_ipcore_RT_RD_WAIT ) begin                         ux70d4  <= 1'b0;                                                                           enf7c4e <= 1'b1;                         rt4fbf7 <= `ddr3_ipcore_RT_END;                      end                      else                         rt4fbf7   <= `ddr3_ipcore_RT_WAIT;                      end       `ddr3_ipcore_RT_END      : begin                        enf7c4e <= 1'b0;                      if (rv9f7e == 'd1  )                         dm76ba6 <= 1'b1;                      else if (rv9f7e == 'd2  )                         dm76ba6 <= 1'b0;                      else if (rv9f7e == 'd5  )                         ip5ea2c <= 1'b1;                      else if (rv9f7e == 'd6  )                         ip5ea2c <= 1'b0;                      else if (rv9f7e == 'd40  ) begin                                                  enf7c4e  <= 1'b1;                         rt4fbf7   <= `ddr3_ipcore_RT_END1;                      end                      else                         rt4fbf7   <= `ddr3_ipcore_RT_END;                      end       `ddr3_ipcore_RT_END1      : begin                        enf7c4e  <= 1'b0;                      zzb5d32     <= 1'b1;                      wwde307       <= 1'b0;      if (qg4cf0d)                         rt_err <= 1'b0;                      else                         rt_err <= 1'b1;                      rt4fbf7 <= `ddr3_ipcore_RT_IDLE;                      end       default      : begin                      wwde307    <= 1'b0;                      rt4fbf7 <= `ddr3_ipcore_RT_IDLE;                      end      endcase   end
end

always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      rv9f7e <= 6'h0;   else if (enf7c4e)      rv9f7e <= 6'h0;   else      rv9f7e <= rv9f7e + 1;
end

always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      go5933c  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if (hq8c1c3) begin      go5933c  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if ((rt4fbf7 == `ddr3_ipcore_RT_BURSTDT) && !kd60e1a) begin      go5933c  <= go5933c | (kf8aac9 & ld6b0e8);   end
end



always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      irab267  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if (xw47cf8 || (nr7ef89 == 'd0 && hq8c1c3)) begin      irab267  <= {`ddr3_ipcore_DQS_WIDTH{1'b1}};   end   else if ( (rt4fbf7 == `ddr3_ipcore_RT_BURSTDT) && (rv9f7e == `ddr3_ipcore_RT_RD_WAIT-1) && !kd60e1a) begin      irab267  <= irab267 & go5933c;   end
end

assign go67869 = (rt4fbf7 == `ddr3_ipcore_RT_BURSTDT) ? 1'b1 : 1'b0;



always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      jp5564c  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if (xw47cf8 || (nr7ef89 == 'd0)) begin      jp5564c  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if ((rt4fbf7 == `ddr3_ipcore_RT_BURSTDT) && (nr7ef89 == `ddr3_ipcore_RT_JF_RTRY_CNT - 1)) begin      jp5564c  <= jp5564c | irab267;   end
end
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ofc99e1  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if (xw47cf8 ) begin      ofc99e1  <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};   end   else if ((rt4fbf7 == `ddr3_ipcore_RT_BURSTDT) && (nr7ef89 == `ddr3_ipcore_RT_JF_RTRY_CNT - 1)) begin                        ofc99e1  <= ofc99e1 | (jp5564c);   end
end
assign qg4cf0d = &(ofc99e1);
          generate        begin           for (sj3c349=0; sj3c349<`ddr3_ipcore_DQS_WIDTH; sj3c349=sj3c349+1)           begin: ykc11f3           dm589bc_ddr3_ipcore dm589bc(               .sclk              (sclk),               .rst_n             (rst_n),               .fc11b84             (xw47cf8),               .kd60e1a          (kd60e1a),               .dmf13a5          (dmf13a5),               .ayfa2ab        (ayfa2ab),               .ip75d96       (kq7dfbe[3]),               .xw765ad   (ofc99e1[sj3c349]),               .phb5ad3   (mr4e953),               .xj6b4fb  (fp813ef [(3*sj3c349+2):(3*sj3c349)]),               .psfbdac   (nt32a8e[(4*sj3c349+3):(4*sj3c349)]),               .qiac477 (rt_dqs_read_rvl[(4*sj3c349+3):(4*sj3c349)]),               .qg77216      (pf5027d[(3*sj3c349+2):(3*sj3c349)])               );           end         end     endgenerate
endmodule




`timescale 1 ns / 100 ps
module dm589bc_ddr3_ipcore (
               sclk,
               rst_n,
               fc11b84,
               kd60e1a,
               dmf13a5,
               ayfa2ab,
               ip75d96,
               xw765ad,
               phb5ad3,
               xj6b4fb,
               psfbdac,
               qiac477,
               qg77216
               );
input         sclk;
input         rst_n;
input         fc11b84;
input         kd60e1a;
input  [1:0]  dmf13a5;
input  [1:0]  ayfa2ab;
input         ip75d96;
input         xw765ad;
input  [2:0]  phb5ad3;
output [2:0]  xj6b4fb;
output [2:0]  qg77216;
output [3:0]  psfbdac;
output [3:0]  qiac477;
reg           oha1acd;
reg    [2:0]  and66c;
reg           hb6b364;
reg           yk59b26;
reg    [2:0]  xj6b4fb ;
reg    [2:0]  qg77216  ;
reg    [3:0]  psfbdac ;
reg    [3:0]  qiac477 ;
reg           ng30eb4;

always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      oha1acd <= 1'b0;   else      oha1acd <= xw765ad;
end


always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      and66c  <= 3'b0;      hb6b364      <= 1'b0;      yk59b26     <= 1'b0;   end   else if (fc11b84) begin      and66c  <= 3'b0;      hb6b364      <= 1'b0;      yk59b26     <= 1'b0;   end   else if ( !yk59b26 && xw765ad && !oha1acd) begin      and66c <= phb5ad3;      hb6b364     <= ip75d96;      yk59b26    <= 1'b1;   end
end


always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      qg77216      <= 3'b0;      ng30eb4     <= 1'b0;      xj6b4fb  <= 3'b0;   end   else if (yk59b26) begin      qg77216     <= and66c;      ng30eb4    <= hb6b364;      xj6b4fb <= and66c;   end   else begin      qg77216     <= phb5ad3;      ng30eb4    <= ip75d96;      xj6b4fb <= phb5ad3;   end
end
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      psfbdac     <= 4'b0;      qiac477 <= 4'b0;   end   else begin      psfbdac     <= (ng30eb4 == 1'b1) ? {`ddr3_ipcore_DQS_WIDTH{2'b00,ayfa2ab}} : {`ddr3_ipcore_DQS_WIDTH{2'b00,dmf13a5}};      qiac477 <= (ng30eb4 == 1'b1) ? {`ddr3_ipcore_DQS_WIDTH{2'b00,ayfa2ab}} : {`ddr3_ipcore_DQS_WIDTH{2'b00,dmf13a5}};   end
end
endmodule




`ifdef ddr3_ipcore_x4
 
`define ddr3_ipcore_M_DATA_WIDTH 16

`else
 
`define ddr3_ipcore_M_DATA_WIDTH 32

`endif
`timescale 1 ns / 100 ps
module rtc7690_ddr3_ipcore (
               sclk,
               rst_n,
               ie31859,
               hq8c1c3,
               uxa188c,
               fc998cb,
               xy8ceba,
               ym827a2,
               cal_bc4,
               xj71de5
               );
input         sclk;
input         rst_n;
input         ie31859;
input         hq8c1c3;
input         uxa188c;
input         fc998cb;
input [`ddr3_ipcore_M_DATA_WIDTH - 1:0]  xy8ceba;
input [`ddr3_ipcore_M_DATA_WIDTH - 1:0]  ym827a2;
input         cal_bc4;
output        xj71de5;
wire          xj71de5;
reg [1:0]     aa88f68;
wire [`ddr3_ipcore_M_DATA_WIDTH - 1:0]  jc47b41;

`ifdef ddr3_ipcore_x4

`else

`endif


`ifdef ddr3_ipcore_x4

assign  jc47b41  = {xy8ceba[15],xy8ceba[11],xy8ceba[7],xy8ceba[3],                   xy8ceba[14],xy8ceba[10],xy8ceba[6],xy8ceba[2],                   xy8ceba[13],xy8ceba[ 9],xy8ceba[5],xy8ceba[1],                   xy8ceba[12],xy8ceba [8],xy8ceba[4],xy8ceba[0]};

`else

assign  jc47b41  = {xy8ceba[31],xy8ceba[27],xy8ceba[23],xy8ceba[19],xy8ceba[15],xy8ceba[11],xy8ceba[7],xy8ceba[3],                  xy8ceba[30],xy8ceba[26],xy8ceba[22],xy8ceba[18],xy8ceba[14],xy8ceba[10],xy8ceba[6],xy8ceba[2],                  xy8ceba[29],xy8ceba[25],xy8ceba[21],xy8ceba[17],xy8ceba[13],xy8ceba[ 9],xy8ceba[5],xy8ceba[1],                  xy8ceba[28],xy8ceba[24],xy8ceba[20],xy8ceba[16],xy8ceba[12],xy8ceba [8],xy8ceba[4],xy8ceba[0]};

`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      aa88f68 <= 2'h0;   end   else if (!ie31859 || hq8c1c3) begin      aa88f68 <= 2'h0;   end   else if (fc998cb && ((uxa188c == 1'b1) || (jc47b41 == ym827a2))) begin
      aa88f68 <= aa88f68 + 1;   end   else      aa88f68 <= aa88f68;
end

assign  xj71de5 =   (aa88f68==2'b10) ? 1'b1 : 1'b0;
endmodule
`timescale 1 ns / 100 ps
module os67d65_ddr3_ipcore (
                rst_n,
                sclk,
                ose5e37,
                kq433c8,
                hb4f402,
                ddr_wr_lat_odd,
                vv714e1,
                mt8a70e,

                ay53875,      
                ng9c3a9,        
                rge1d4b,     
                xyea5a, 
                ip752d2,
                ksa9694,
                cz4b4a1,      
                bl5a50d,        
                xjd286e,     
                rv94377, 
                co8de73,
                ipd387d,
                dfi_wrdata_mask,
                qi240ca, 
                tw20651, 
                tj328b,

                uxa1bbf,
                wlddfc,      
                wjdcefe,
                me77f2f,        
                tjbf978,     
                blfcbc6 
                );
input                   rst_n;
input                   sclk;
input                   ose5e37;
input                   kq433c8;
input                   hb4f402;
input                   ddr_wr_lat_odd;
input [`ddr3_ipcore_DSIZE-1:0]      vv714e1;
input [`ddr3_ipcore_USER_DM -1:0]   mt8a70e;
input                   ay53875;
input [`ddr3_ipcore_DQS_WIDTH-1:0]  ng9c3a9;
input                   rge1d4b;
input                   xyea5a;
input [`ddr3_ipcore_DSIZE-1:0]      ip752d2;
input [`ddr3_ipcore_USER_DM -1:0]   ksa9694;
input                   cz4b4a1;
input [`ddr3_ipcore_DQS_WIDTH-1:0]  bl5a50d;
input                   xjd286e;
input                   rv94377;
input [`ddr3_ipcore_DSIZE-1:0]      co8de73;
input                   ipd387d;
input [`ddr3_ipcore_USER_DM -1:0]   dfi_wrdata_mask;
input [`ddr3_ipcore_DQS_WIDTH-1:0]  qi240ca;
input                   tw20651;
input                   tj328b;
output [`ddr3_ipcore_DSIZE-1:0]     uxa1bbf;
output [`ddr3_ipcore_DQS_WIDTH-1:0] wlddfc;
output [`ddr3_ipcore_USER_DM -1:0]  wjdcefe;
output [`ddr3_ipcore_DQS_WIDTH-1:0] me77f2f;
output                  tjbf978;
output                  blfcbc6;
reg   [`ddr3_ipcore_DSIZE-1:0]      uxa1bbf ;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]  wlddfc  ;
reg   [`ddr3_ipcore_USER_DM -1:0]   wjdcefe;
reg   [`ddr3_ipcore_DQS_WIDTH-1:0]  me77f2f  ;
reg                     tjbf978   ;
reg                     blfcbc6   ;

`ifdef ddr3_ipcore_DDR3_2T
reg   jr6c8d;
reg   zm2f1b8;

`else   // 1T mode

`ifdef ddr3_ipcore_RDIMM

`else

`endif

`endif  // DDR3_2T 


`ifdef ddr3_ipcore_DDR3_2T


always @(posedge sclk  or negedge rst_n) begin   if (~rst_n)      jr6c8d   <= 1'b0;   else      jr6c8d   <= kq433c8;
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        zm2f1b8   <= 1'b0;        end       else if (jr6c8d)begin        zm2f1b8   <= ~ddr_wr_lat_odd;       end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      uxa1bbf     <= {`ddr3_ipcore_DSIZE{1'b0}};      wlddfc <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      wjdcefe          <= {`ddr3_ipcore_USER_DM{1'b0}};      me77f2f      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      tjbf978       <= 1'b0;      blfcbc6     <= 1'b0;   end   else  begin      case (zm2f1b8)  
      1'b1: begin            uxa1bbf     <= vv714e1;            wjdcefe          <= mt8a70e;            wlddfc <= {`ddr3_ipcore_DQS_WIDTH{ay53875 | hb4f402}};            me77f2f      <= ng9c3a9;            tjbf978       <= rge1d4b;            blfcbc6     <= xyea5a;            end
      1'b0: begin            uxa1bbf     <= vv714e1;            wjdcefe          <= mt8a70e;            wlddfc <= {`ddr3_ipcore_DQS_WIDTH{ay53875 | hb4f402}};            me77f2f      <= ng9c3a9;            tjbf978       <= rge1d4b;            blfcbc6     <= xyea5a;            end       endcase    end
end

`else   // 1T mode


`ifdef ddr3_ipcore_RDIMM

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      uxa1bbf     <= {`ddr3_ipcore_DSIZE{1'b0}};      wlddfc <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      wjdcefe          <= {`ddr3_ipcore_USER_DM{1'b0}};      me77f2f      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      tjbf978       <= 1'b0;      blfcbc6     <= 1'b0;   end   else  begin   case (ose5e37)     1'b0: begin         uxa1bbf     <= vv714e1;         wlddfc <= {`ddr3_ipcore_DQS_WIDTH{ay53875 | hb4f402}};         wjdcefe          <= mt8a70e;         me77f2f      <= ng9c3a9;         tjbf978       <= rge1d4b;         blfcbc6     <= xyea5a;         end   1'b1: begin         uxa1bbf     <= ip752d2;         wlddfc <= {`ddr3_ipcore_DQS_WIDTH{cz4b4a1 | hb4f402}};         wjdcefe          <= ksa9694;         me77f2f      <= bl5a50d;         tjbf978       <= xjd286e;         blfcbc6     <= rv94377;         end    endcase    end
end

`else

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      uxa1bbf     <= {`ddr3_ipcore_DSIZE{1'b0}};      wlddfc <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      wjdcefe          <= {`ddr3_ipcore_USER_DM{1'b0}};      me77f2f      <= {`ddr3_ipcore_DQS_WIDTH{1'b0}};      tjbf978       <= 1'b0;      blfcbc6     <= 1'b0;   end   else  begin   case (ose5e37)     1'b0: begin         uxa1bbf     <= co8de73;         wlddfc <= {`ddr3_ipcore_DQS_WIDTH{ipd387d | hb4f402}};         wjdcefe          <= dfi_wrdata_mask;         me77f2f      <= qi240ca;         tjbf978       <= tw20651;         blfcbc6     <= tj328b;         end   1'b1: begin         uxa1bbf     <= vv714e1;         wlddfc <= {`ddr3_ipcore_DQS_WIDTH{ay53875 | hb4f402}};         wjdcefe          <= mt8a70e;         me77f2f      <= ng9c3a9;         tjbf978       <= rge1d4b;         blfcbc6     <= xyea5a;         end    endcase    end
end

`endif


`endif  // DDR3_2T 

endmodule
`timescale 1 ns / 100 ps
//`include "ddr3_sdram_mem_params.v"
module  row_addr_tab_ddr3_ipcore ( WrAddress, RdAddress, Data, WrClock, WrClockEn, WE, Q);

input   [5:0]  WrAddress;
input   [5:0]  RdAddress;
input   [`ddr3_ipcore_ROW_WIDTH-1:0]  Data;
input   WrClock;
input   WrClockEn;
input   WE;
output  [`ddr3_ipcore_ROW_WIDTH-1:0]  Q;

defparam  pmi_distributed_dpram.pmi_addr_depth = 64;
defparam  pmi_distributed_dpram.pmi_addr_width = 6;
defparam  pmi_distributed_dpram.pmi_data_width = `ddr3_ipcore_ROW_WIDTH;
defparam  pmi_distributed_dpram.pmi_regmode = "noreg";
defparam  pmi_distributed_dpram.pmi_family   = "ECP5U";
pmi_distributed_dpram   pmi_distributed_dpram   
 (
    .WrAddress    (WrAddress),
    .Data         (Data),
    .WrClock      (WrClock),
    .WE           (WE),
    .WrClockEn    (WrClockEn),
    .RdAddress    (RdAddress),
    .RdClock      (WrClock),
    .RdClockEn    (1'b1),
    .Reset        (1'b0),
    .Q            (Q)
    );

endmodule

// ===========================================================================
// Verilog module generated by IPexpress
// Filename: ddr3_sdram_mem_top.v  
// Copyright 2011 (c) Lattice Semiconductor Corporation. All rights reserved.
// ===========================================================================

`timescale 1ns/100ps

module ddr3_ipcore (

   // Clock and reset
   eclk,
   sclk,
   rst_n,
   mem_rst_n,  			

   // Input signals from the User I/F  
   init_start,  
   cmd,
   addr,
   cmd_burst_cnt,
   cmd_valid,   
   ofly_burst_len, 
   write_data,
   datain_rdy,
   data_mask,
   ddr_rst,
   dqsdel,
   dqsbuf_pause,
   clocking_good,
   update_done,
   

   // Output signals to the User I/F
   cmd_rdy,
   init_done,
   rt_err,  
   wl_err,  
   read_data,
   read_data_valid,
   dll_update,


   // Memory side signals
   em_ddr_reset_n,   				
   em_ddr_data,
   em_ddr_dqs,
   em_ddr_clk,
   em_ddr_cke,
   em_ddr_ras_n,
   em_ddr_cas_n,
   em_ddr_we_n,
   em_ddr_cs_n,
   em_ddr_odt,
   em_ddr_dm,    				
   em_ddr_ba,
   em_ddr_addr
);

// ====================================================================
// Port definition 
// ====================================================================
input                            eclk;
input                            sclk;
input                            rst_n;
input                            mem_rst_n;

// Input signals from the User I/F
input                            init_start; 
input   [3:0]                    cmd;
input   [26:0]           addr;
input   [4:0]                    cmd_burst_cnt;
input                            cmd_valid;
input                            ofly_burst_len;

input   [63:0]                write_data;
input   [7:0]              data_mask;
input                            ddr_rst;
input   [1:0]                 dqsdel;
input                            dqsbuf_pause;
input                            clocking_good;
input                            update_done;

output  [63:0]                read_data /* synthesis syn_useioff = 0 */;

output                           datain_rdy;


// Output signals to the User I/F
output                           cmd_rdy;
output                           init_done;
output                           rt_err;  
output                           wl_err;  
output                           read_data_valid  /* synthesis syn_useioff = 0 */;

output                           dll_update;

// Memory side signals 
inout   [15:0]           em_ddr_data;
output                           em_ddr_reset_n;
inout   [1:0]            em_ddr_dqs;
output  [1:0]            em_ddr_dm;
output  [0:0]           em_ddr_clk;
output  [0:0]            em_ddr_cke;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [0:0]          em_ddr_cs_n;
output  [0:0]             em_ddr_odt;
output  [13:0]            em_ddr_addr;
output  [2:0]           em_ddr_ba;



// ====================================================================
// Wires & Registers
// ====================================================================

wire                             datain_rdy;  
wire                             cmd_rdy;  
wire                             init_done;
wire                             rt_err;  
wire                             wl_err;  
wire    [63:0]                read_data; 
wire                             read_data_valid; 

wire    [7:0]              dfi_wrdata_mask;  
wire    [0:0]             dfi_odt; 

wire                             cal_bc4; 
wire    [1:0]            prmbdet;  
wire                             wl_dq; 

wire    [0:0]           em_ddr_clk;  
wire    [0:0]             em_ddr_odt;  
wire 	  [1:0]            em_ddr_dm;   
wire    [2:0]           em_ddr_ba; 
wire    [13:0]            em_ddr_addr; 

wire                             em_ddr_reset_n;
wire                             em_ddr_ras_n;  
wire                             em_ddr_we_n;   
wire                             em_ddr_cas_n;  
wire    [0:0]          em_ddr_cs_n;   
wire    [0:0]            em_ddr_cke;    

wire    [13:0]            dfi_address; 
wire    [2:0]           dfi_bank;   
wire    [0:0]            dfi_cke;  
wire                             dfi_ras_n; 
wire                             dfi_we_n;  
wire                             dfi_cas_n; 
wire    [0:0]             dfi_cs_n;  

wire    [63:0]                dfi_wrdata; 
wire		                        dfi_wrdata_en; 
wire 	  [1:0]            ddr_dqs_out;  
wire                             ddr_dqs_out_en;  
wire                             ddr_dqs_out_en_erly;  
wire                             ddr_wr_lat_odd;  
wire                             ddr_rd_lat_odd;  

wire 	                           mirror_on;  

wire                             init_start1;

wire                             dfi_rddata_valid; 
wire    [63:0]                dfi_rddata; 
wire                             phy_init_act;
wire                             wl_act;


//===================================================================
assign init_start1 = init_start & clocking_good;

assign read_data_valid = dfi_rddata_valid;
assign read_data =  dfi_rddata;

// ====================================================================
// PHY logic 
// ====================================================================
ddr3_sdram_phy_ddr3_ipcore U1_ddr3_sdram_phy(
   // clock sync signals
   .rst_n             (rst_n),            				
   .sclk              (sclk),             				
   .eclk              (eclk),             				
   .sclk2x            (1'b1),             				
   .clocking_good     (clocking_good),                      
   .ddr_rst           (ddr_rst),                      
   .dqsdel            (dqsdel),                                         	
   .update_done       (update_done),
   .dll_update        (dll_update),
   .dqsbuf_pause      (dqsbuf_pause),

   // controller side standard signals
   .dfi_address       (dfi_address), 
   .dfi_bank          (dfi_bank),   
   .dfi_cs_n          (dfi_cs_n),  
   .dfi_ras_n         (dfi_ras_n), 
   .dfi_cas_n         (dfi_cas_n), 
   .dfi_we_n          (dfi_we_n),  
   .dfi_cke           (dfi_cke),  
   .dfi_odt           (dfi_odt),          		                

   .dfi_wrdata        (dfi_wrdata),      			
   .dfi_wrdata_en     (dfi_wrdata_en),  		
   .dfi_wrdata_mask   (dfi_wrdata_mask),	                

   .dfi_rddata        (dfi_rddata),                          
   .dfi_rddata_valid  (dfi_rddata_valid),                             

   .dfi_init_start    (init_start),
   .dfi_init_complete (dfi_init_complete),                             

   // Non-dfi signals
   .mem_rst_n         (mem_rst_n),           	                        
   .wl_act            (wl_act),                             
   .wl_err            (wl_err),                             
   .rt_err            (rt_err),                             
   .phy_init_act      (phy_init_act),                             

   //-----------

   //-----------

   // external memory side signals
   .em_ddr_reset_n    (em_ddr_reset_n), 
   .em_ddr_addr       (em_ddr_addr), 
   .em_ddr_ba         (em_ddr_ba),   
   .em_ddr_ras_n      (em_ddr_ras_n), 
   .em_ddr_cas_n      (em_ddr_cas_n), 
   .em_ddr_we_n       (em_ddr_we_n),  
   .em_ddr_cs_n       (em_ddr_cs_n),  
   .em_ddr_cke        (em_ddr_cke),  

   .em_ddr_clk        (em_ddr_clk),        				
   .em_ddr_odt        (em_ddr_odt),        		                
   .em_ddr_dm         (em_ddr_dm),                		                
   .em_ddr_data       (em_ddr_data),       				
   .em_ddr_dqs        (em_ddr_dqs)  
);

// ====================================================================
// Lattice MAC 
// ====================================================================

ddr3_ipcore_core U1_ddr3_sdram_core(
// Inputs
    .clk                    (sclk),    			   
    .rst_n                  (rst_n),   			   
 
    .param_trcd             (2'b11),
    .param_trp              (2'b11),
    .param_twr              (2'b11),
    .param_tras             (4'b1000),
    .param_trc              (4'b1010),
    .param_trrd             (2'b11),
    .param_trtp             (2'b10),
    .param_twtr             (2'b10),
    .param_tckesr           (2'b10),
    .param_tzqoper          (8'b10000000),
    .param_tzqs             (6'b100000),
    .param_tmrd             (2'b10),
    .param_tpd              (2'b10),
    .param_txpdll           (3'b101),
    .param_tcke             (2'b10),
    .param_txpr             (6'b100010),
    .param_tmod             (3'b110),
    .param_tzqinit          (9'b100000000),
  
    .addr_init_0            (16'b0001010100010000),
    .addr_init_1            (16'b0000000000000100),
    .addr_init_2            (16'b0000001000000000),
    .addr_init_3            (16'b0000000000000000),
  
    .wl_phase_dly_cnt       (8'b00000000),                      
    .phy_init_act           (phy_init_act),
    .wl_act                 (wl_act),
    .wl_done                (dfi_init_complete),                          

// Input signals from the User I/F  
    .init_start             (init_start1),                      
    .cmd                    (cmd),                                    
    .addr                   (addr),                                  
    .cmd_burst_cnt          (cmd_burst_cnt),                   
    .cmd_valid              (cmd_valid),                       
    .ofly_burst_len         (ofly_burst_len),                 
  

// Input signals from  configuration 
    .trefi                  (16'b0000010010010010),                            
    .ar_burst_cnt           (3'b000),               
  
//data  coming from user I/F
    .datain                 (write_data),  
    .dmsel                  (data_mask),   
    .DataRdy2Data           (2'b01), 
  
//data coming from IOs (read)   

// Outputs
// To the IOs
    .pio_read               (),        
    .cal_bc4                (cal_bc4),        
    .ddr_cs_n               (dfi_cs_n),   
    .ddr_ras_n              (dfi_ras_n),  
    .ddr_cas_n              (dfi_cas_n), 
    .ddr_we_n               (dfi_we_n),  
    .ddr_ba                 (dfi_bank),    
    .ddr_addr               (dfi_address),  
    .ddr_cke                (dfi_cke),   
    .datain_valid           (datain_rdy),                

// Output signals to the User I/F
    .cmd_rdy                (cmd_rdy),                         
    .init_done              (init_done),  
  
// Signals going to IOs for wtite      
    .ddr_dq_out             (dfi_wrdata),      
    .ddr_wr_lat_odd         (ddr_wr_lat_odd),      
    .dqs_out                (ddr_dqs_out),
    .dqs_out_en             (ddr_dqs_out_en),
    .dqs_out_en_erly        (ddr_dqs_out_en_erly),
    .dq_out_en              (dfi_wrdata_en),
    .ddr_dqm                (dfi_wrdata_mask),           
  
    .mem_odt_out            (dfi_odt),          
    .cntl_odt_out           ( ) ,
    .rd_odd                 (ddr_rd_lat_odd ),       

    .mirror_on              (mirror_on )
) /*synthesis HGROUP="ddr3_core" PBBOX="22,25" */ ;

endmodule
